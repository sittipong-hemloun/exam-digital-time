generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model accounts {
  id       Int     @id(map: "PK_accounts") @default(autoincrement())
  username String  @db.VarChar(50)
  password String  @db.VarChar(255)
  email    String  @db.VarChar(100)
  userId   String? @db.VarChar(255)
  liffId   String? @db.VarChar(255)
}

model activity_detail {
  nno            Int     @default(autoincrement())
  std_id         String  @db.VarChar(10)
  activity_id    String  @db.VarChar(20)
  activity_name  String? @db.VarChar(500)
  activity_type  String? @db.VarChar(10)
  activity_date  String  @db.VarChar(30)
  sm_sem         String? @db.VarChar(2)
  sm_yr          String? @db.VarChar(5)
  performance_1  String? @db.VarChar(5)
  performance_2  String? @db.VarChar(5)
  performance_3  String? @db.VarChar(5)
  performance_4  String? @db.VarChar(5)
  performance_5  String? @db.VarChar(5)
  performance_6  String? @db.VarChar(5)
  performance_7  String? @db.VarChar(5)
  performance_8  String? @db.VarChar(5)
  performance_9  String? @db.VarChar(5)
  performance_10 String? @db.VarChar(5)

  @@id([std_id, activity_id, activity_date], map: "PK_activity_gened")
}

model activity_gened {
  nno           Int     @default(autoincrement())
  activity_id   String  @id(map: "PK_activity_gened_1") @db.VarChar(20)
  activity_name String? @db.VarChar(500)
  activity_type String? @db.VarChar(10)
  activity_date String  @db.VarChar(30)
  sm_sem        String? @db.VarChar(2)
  sm_yr         String? @db.VarChar(5)
  performance_1 String? @db.VarChar(5)
  performance_2 String? @db.VarChar(5)
  performance_3 String? @db.VarChar(5)
  performance_4 String? @db.VarChar(5)
  performance_5 String? @db.VarChar(5)
  performance_6 String? @db.VarChar(5)
  performance_7 String? @db.VarChar(5)
  performance_8 String? @db.VarChar(5)
}

model Activity_n {
  No       String   @id(map: "PK_Activity_n") @db.VarChar(5)
  Name_act String?  @db.VarChar(200)
  Demerit  String?  @db.VarChar(200)
  total_d  Decimal? @db.Decimal(18, 0)
}

model activity_Personalities {
  nno           Int       @default(autoincrement())
  std_id        String    @id(map: "PK_activity_Personalities") @db.VarChar(10)
  type_activity String?   @db.VarChar(50)
  save_date     DateTime? @default(now(), map: "DF_activity_Personalities_save_date") @db.DateTime
}

model ADDSTUDENTS {
  ID              String    @id(map: "PK_ADDSTUDENTS") @db.VarChar(10)
  ID_CARD         String?   @db.VarChar(13)
  TF              String?   @db.VarChar(15)
  TFNAME          String?   @db.VarChar(50)
  TLNAME          String?   @db.VarChar(50)
  SR              String?   @db.VarChar(50)
  PFNAME          String?   @db.VarChar(50)
  PLNAME          String?   @db.VarChar(50)
  OCCUPTIOON      String?   @db.VarChar(50)
  ADD1            String?   @db.VarChar(200)
  ADD2            String?   @db.VarChar(200)
  ADD3            String?   @db.VarChar(200)
  ROAD            String?   @db.VarChar(200)
  TUMBON          String?   @db.VarChar(200)
  AMPHUR          String?   @db.VarChar(200)
  CITY            String?   @db.VarChar(200)
  POST            String?   @db.VarChar(5)
  TEL             String?   @db.VarChar(100)
  RELATE          String?   @db.VarChar(15)
  MAJOR           String?   @db.VarChar(3)
  ADVISOR         String?   @db.VarChar(5)
  CAMPUS          String?   @db.VarChar(1)
  UID             String?   @db.VarChar(8)
  EF              String?   @db.VarChar(8)
  EFNAME          String?   @db.VarChar(50)
  ELNAME          String?   @db.VarChar(50)
  NOW_ADD1        String?   @db.VarChar(200)
  NOW_ADD2        String?   @db.VarChar(200)
  NOW_ROAD        String?   @db.VarChar(200)
  NOW_TUMBON      String?   @db.VarChar(200)
  NOW_AMPHUR      String?   @db.VarChar(200)
  NOW_CITY        String?   @db.VarChar(200)
  NOW_POST        String?   @db.VarChar(5)
  NOW_TEL         String?   @db.VarChar(100)
  EDITDATE        DateTime? @db.DateTime
  EDITTIME        DateTime? @db.DateTime
  USERSAVE        String?   @db.VarChar(50)
  FATHER          String?   @db.VarChar(100)
  WORK_FATHER     String?   @db.VarChar(100)
  MOTHER          String?   @db.VarChar(100)
  WORK_MOTHER     String?   @db.VarChar(100)
  MAIL            String?   @db.VarChar(200)
  SCHOOL_FINIS    String?   @db.VarChar(200)
  SCHOOL_NAME     String?   @db.VarChar(200)
  SCHOOL_ENAME    String?   @db.VarChar(200)
  SCHOOL_AMPHOR   String?   @db.VarChar(200)
  SCHOOL_PROVINCE String?   @db.VarChar(200)
  SCHOOL_LOCATION String?   @db.VarChar(200)
  SCHOOL_GPA      Float?
  SCHOOL_YEAR     String?   @db.VarChar(5)

  @@index([ID], map: "IX_ADDSTUDENTS")
}

model ADMIN {
  id                String    @db.VarChar(10)
  uname             String?   @db.VarChar(50)
  major             String?   @db.VarChar(5)
  uid               String    @db.VarChar(11)
  upwd              String?   @db.VarChar(100)
  upw0rd            String?   @db.VarChar(250)
  group1            String?   @db.VarChar(10)
  level1            String?   @db.VarChar(2)
  Login             String?   @db.VarChar(5)
  lock              String?   @db.VarChar(255)
  count_std         Int       @default(0, map: "DF_ADMIN_count_std")
  count_login       Int       @default(0, map: "DF_ADMIN_count_login")
  position          String?   @db.VarChar(50)
  client            String?   @db.VarChar(30)
  old_upwd          String?   @db.VarChar(15)
  macadd_last       String?   @db.VarChar(50)
  admin_note        String?   @db.VarChar(100)
  c_level           String?   @db.VarChar(20)
  user_online       Int?      @default(0, map: "DF_ADMIN_user_online")
  changpass         String?   @db.VarChar(1)
  changpass_date    DateTime? @db.DateTime
  changpass_user    String?   @db.VarChar(50)
  os                String?   @db.VarChar(250)
  refund            String?   @db.VarChar(5)
  m_refund          Float?    @default(0, map: "DF_ADMIN_m_refund")
  m_report          String?   @db.VarChar(50)
  lineid            String?   @db.VarChar(250)
  line_email        String?   @db.VarChar(250)
  line_name         String?   @db.VarChar(250)
  line_tel          String?   @db.VarChar(50)
  line_otp          String?   @db.VarChar(5)
  approve_pdpa      String?   @db.VarChar(5)
  date_approve_pdpa String?   @db.VarChar(30)

  @@id([id, uid], map: "PK_ADMIN")
  @@index([uid, upw0rd, Login, c_level, group1, id, level1, major, uname], map: "IX_ADMIN")
}

model admin_safe {
  id     String  @id(map: "PK_admin_safe") @db.VarChar(10)
  uname  String? @db.VarChar(50)
  major  String? @db.VarChar(5)
  uid    String? @db.VarChar(9)
  upwd   String? @db.VarChar(6)
  group1 String? @db.VarChar(10)
  level1 String? @db.VarChar(2)
  login  String? @db.VarChar(7)
  lock   String? @db.VarChar(100)
}

model admission_ku {
  no          Int       @default(autoincrement())
  ref_no      String    @db.VarChar(50)
  id          String    @db.VarChar(50)
  sm_sem      String    @db.VarChar(5)
  sm_yr       String    @db.VarChar(5)
  sname       String?   @db.VarChar(7)
  name        String?   @db.VarChar(100)
  major_name  String?   @db.VarChar(255)
  major       String?   @db.VarChar(50)
  amount      Float?
  email       String?   @db.VarChar(255)
  phone       String?   @db.VarChar(50)
  remark      String?   @db.VarChar(255)
  count_print Int?      @default(0, map: "DF_admission_ku_count_print")
  flag        String?   @db.VarChar(2)
  c_level     String?   @db.VarChar(10)
  pay_money   Float?    @db.Money
  PAY_DATE    DateTime? @db.DateTime
  end_pay     String?   @db.VarChar(20)

  @@id([ref_no, id, sm_sem, sm_yr], map: "PK_admiss158")
  @@index([no, id, name, major, ref_no], map: "IX_admiss158")
}

model admission_type {
  ID              Int     @id(map: "PK_admission_type") @default(autoincrement())
  id_admission    String? @db.NVarChar(255)
  name_adminssion String? @db.NVarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model approve_br {
  no_index  Int?
  name      String? @db.VarChar(50)
  position  String? @db.VarChar(100)
  ename     String? @db.VarChar(50)
  eposition String? @db.VarChar(100)
  status_d  String? @db.VarChar(2)

  @@ignore
}

model APPROVE_KEY {
  KEY_DATE    String  @id(clustered: false, map: "PK_KEY_GRADE") @db.VarChar(7)
  KEY_APPROVE String? @db.VarChar(2)
  KEY_GROUP   String? @db.VarChar(7)
}

model BANK {
  BANK_CODE String  @id(map: "PK_BANK") @db.VarChar(10)
  BANK_Name String? @db.VarChar(100)
  picc      Bytes?  @db.Image

  @@index([BANK_CODE, BANK_Name], map: "IX_BANK")
}

model banner {
  banner_id      Int     @id(map: "PK_banner") @default(autoincrement())
  banner_pic     String? @db.VarChar(250)
  banner_subject String? @db.VarChar(500)
  banner_detail  String? @db.VarChar(500)
  banner_status  String? @db.VarChar(10)
  banner_del     String? @db.VarChar(10)
  banner_link    String? @db.VarChar(250)
  banner_date    String? @db.VarChar(50)
  banner_user    String? @db.VarChar(50)
}

model banner_news {
  news_id      Int     @id(map: "PK_news") @default(autoincrement())
  news_pic     String? @db.VarChar(250)
  news_subject String? @db.VarChar(500)
  news_detail  String? @db.VarChar(500)
  news_status  String? @db.VarChar(50)
  news_del     String? @db.VarChar(50)
  news_link    String? @db.VarChar(250)
  news_date    String? @db.VarChar(50)
  news_user    String? @db.VarChar(50)
}

model Blame_act {
  no_blame   Int       @id(map: "PK_Blame_act")
  Std_id     String?   @db.NChar(10)
  date_std   DateTime? @db.DateTime
  Name_blame String?   @db.VarChar(Max)
  Name_act   String?   @db.VarChar(Max)
  Blame      String?   @db.VarChar(Max)
  user_act   String?   @db.VarChar(50)
}

model bookbank {
  bank_no   String    @db.VarChar(10)
  id        String    @db.VarChar(10)
  date_sent DateTime? @db.DateTime
  remark    String?   @db.VarChar(50)

  @@id([bank_no, id], map: "PK_bookbank")
  @@index([bank_no, id], map: "IX_bookbank")
}

model bookbank_bll {
  bank_no   String    @id(map: "PK_bookbank_bll") @db.NChar(25)
  id        String?   @db.NChar(10)
  date_sent DateTime? @db.DateTime
  remark    String?   @db.NChar(50)
  remark2   String?   @db.NChar(50)

  @@index([bank_no, id], map: "IX_bookbank_bll")
}

model BORROW {
  LEVELL      String?   @db.VarChar(15)
  NO          Float?
  SNAME       String?   @db.VarChar(10)
  NAME        String?   @db.VarChar(100)
  STD_ID      String    @db.VarChar(10)
  MAJOR       String?   @db.VarChar(5)
  NO_BORROW   String?   @db.VarChar(4)
  SRC         String?   @db.VarChar(3)
  SM_YR       String    @db.VarChar(4)
  SM_SEM      String    @db.VarChar(2)
  N_SEM       String    @default("1", map: "DF_BORROW_N_SEM") @db.VarChar(1)
  M_SM1       Float?    @default(0, map: "DF_BORROW_M_SM1")
  M_SM2       Float?    @default(0, map: "DF_BORROW_M_SM2")
  ROUND       String?   @db.VarChar(2)
  type_borrow String?   @db.VarChar(5)
  wish        String?   @db.VarChar(5)
  approve_b   String?   @db.VarChar(2)
  id_crad     String?   @db.VarChar(13)
  status      String?   @default("Y", map: "DF_BORROW_status") @db.VarChar(5)
  uesr_update String?   @db.VarChar(10)
  date_update DateTime? @default(now(), map: "DF_BORROW_date_update") @db.DateTime
  remark      String?   @db.VarChar(50)

  @@id([STD_ID, SM_YR, SM_SEM, N_SEM], map: "PK_BORROW")
  @@index([STD_ID, SM_YR, SM_SEM, N_SEM], map: "IX_BORROW")
}

model borrow_m {
  level      String? @db.VarChar(10)
  id         String  @id(map: "PK_borrow_m") @db.VarChar(10)
  br_id      String? @db.VarChar(8)
  regis431   Float?
  regis432   Float?
  regis43    Float?
  use43      Float?
  house43    Float?
  own43      Float?
  studyown43 Float?
  total      Float?

  @@index([id], map: "IX_borrow_m")
}

model calender {
  NNO            Int       @default(autoincrement())
  ID             Float?    @default(0, map: "DF_calender_ID")
  DATE_CALEN     String?   @db.VarChar(59)
  EVEN_CALEN     String?   @db.VarChar(1000)
  SM_YR          String    @db.VarChar(2)
  SM_SEM         String    @db.VarChar(1)
  END_SENDGRADE  DateTime? @db.DateTime
  GROUP_ACTIVITY String?   @db.VarChar(100)
  START_ACTIVITY String?   @db.VarChar(50)
  STOP_ACTIVITY1 String?   @db.VarChar(50)
  C_LEVEL        String    @db.VarChar(15)
  FILE_PDF       String?   @db.VarChar(500)

  @@id([NNO, SM_YR, SM_SEM, C_LEVEL], map: "PK_calender_1")
}

model calender_master {
  ID            Float
  DATE_CALEN    String?   @db.VarChar(59)
  EVEN_CALEN    String?   @db.VarChar(1000)
  SM_YR         Float
  SM_SEM        Float
  END_SENDGRADE DateTime? @db.DateTime

  @@id([ID, SM_YR, SM_SEM], map: "PK_calender_master")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model callback {
  nno                    Int     @default(autoincrement())
  qrId                   String? @db.VarChar(50)
  appCode                String? @db.VarChar(5)
  appId                  String? @db.VarChar(5)
  ref1Prefix             String? @db.VarChar(20)
  ref2Prefix             String? @db.VarChar(20)
  amount                 Float?
  expireDate             String? @db.VarChar(6)
  qrCreatedTime          String? @db.VarChar(20)
  bankConfirmedTime      String? @db.VarChar(20)
  transactionId          String? @db.VarChar(20)
  payeeProxyId           String? @db.VarChar(20)
  payeeProxyType         String? @db.VarChar(20)
  payeeAccountNumber     String? @db.VarChar(20)
  payerAccountNumber     String? @db.VarChar(20)
  payerAccountName       String? @db.VarChar(20)
  payerName              String? @db.VarChar(20)
  sendingBankCode        String? @db.VarChar(20)
  receivingBankCode      String? @db.VarChar(20)
  amount1                Float?
  transactionId1         String? @db.VarChar(50)
  transactionDateandTime String? @db.VarChar(50)
  billPaymentRef1        String? @db.VarChar(50)
  billPaymentRef2        String? @db.VarChar(50)
  currencyCode           String? @db.VarChar(50)
  channelCode            String? @db.VarChar(50)
  transactionType        String? @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model candidate {
  idstudent String? @db.VarChar(10)
  sname     String? @db.VarChar(4)
  fname     String? @db.VarChar(50)
  Fac       String? @db.VarChar(50)
  Desp      String? @db.VarChar(50)
  sex       String? @db.VarChar(50)
  class     String? @db.VarChar(50)
  tel       String? @db.VarChar(20)
  email     String? @db.VarChar(50)
  scount    String? @db.VarChar(50)
  nstudy    String? @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model car_p {
  data_c    String? @db.NVarChar(50)
  idcar     String? @db.NVarChar(50)
  jcar      String? @db.NVarChar(50)
  type_car  String? @db.NVarChar(50)
  p_car     String? @db.NVarChar(50)
  ban_car   String? @db.NVarChar(50)
  p1_car    String? @db.NVarChar(50)
  col_car   String? @db.NVarChar(50)
  num_car   String? @db.NVarChar(50)
  p2_car    String? @db.NVarChar(50)
  co_car    String? @db.NVarChar(100)
  co_data   String? @db.NVarChar(50)
  co_num    String? @db.NVarChar(50)
  co_ne     String? @db.NVarChar(50)
  co_tel    String? @db.NVarChar(50)
  co_add    String? @db.NVarChar(200)
  idstd     String? @db.NVarChar(50)
  stdname   String? @db.NVarChar(100)
  stdname1  String? @db.NVarChar(100)
  telstd    String? @db.NVarChar(50)
  stu       String? @db.NChar(10)
  date_save String? @db.NVarChar(50)

  @@ignore
}

model chart {
  year     String  @id(map: "PK_chart") @db.VarChar(5)
  sale     String? @db.VarChar(5)
  expenses String? @db.VarChar(5)
}

/// This model has been renamed to 'Renamedclass' during introspection, because the original name 'class' is reserved.
model Renamedclass {
  nno         Int     @default(autoincrement())
  id_room     String  @id(map: "PK_class") @db.VarChar(50)
  build       String? @db.VarChar(100)
  c_learn     Int?    @default(0, map: "DF_class_c_learn")
  c_test      Int?
  row_learn   Int?
  row_test    Int?
  status_room String? @db.VarChar(5)

  @@index([id_room], map: "IX_class")
  @@map("class")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model CODE_FLAG {
  CODE_FLAG String? @db.VarChar(1)
  NAME_FLAG String? @db.VarChar(70)

  @@ignore
}

model CODE_PAYMENT {
  CODE_PAYMENT String  @id(map: "PK_CODE_PAYMENT") @db.VarChar(1)
  NAME_PAYMENT String? @db.VarChar(40)

  @@index([CODE_PAYMENT], map: "IX_CODE_PAYMENT")
}

model comments {
  comment_id      Int     @id(map: "PK_comments") @default(autoincrement())
  comment_subject String? @db.VarChar(100)
  comment_text    String? @db.VarChar(500)
  comment_status  Int     @default(0, map: "DF_comments_comment_status")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model complaint {
  n_no         Int
  std_id       String    @db.VarChar(15)
  date_save    DateTime? @db.DateTime
  transcript   String?   @db.VarChar(5)
  status_tran  String?   @db.VarChar(5)
  quantity_t   Int?
  com_status   String?   @db.VarChar(5)
  status_com   String?   @db.VarChar(5)
  quantity_c   Int?
  full_edu     String?   @db.VarChar(5)
  status_full  String?   @db.VarChar(5)
  quantity_f   Int?
  wait_edu     String?   @db.VarChar(5)
  status_wait  String?   @db.VarChar(5)
  quantity_w   Int?
  approve_edu  String?   @db.VarChar(5)
  status_app   String?   @db.VarChar(5)
  quantity_a   Int?
  for_work     String?   @db.VarChar(500)
  want_receive DateTime? @db.DateTime
  send_money   DateTime? @db.DateTime
  money        Float?
  sum_doc      Int?
  compass      String?   @db.VarChar(5)
  receive      String?   @db.VarChar(5)

  @@ignore
}

model confirm_cut {
  std_id     String    @db.VarChar(10)
  attr       String    @db.VarChar(3)
  account    String?   @db.VarChar(15)
  date_con   String?   @db.VarChar(15)
  time_con   DateTime? @db.DateTime
  sm_sem     String    @db.VarChar(2)
  sm_yr      String    @db.VarChar(4)
  amount     Float?    @db.Money
  status_cut String?   @db.VarChar(2)
  cc         String?   @db.VarChar(5)
  ccc        String?   @db.VarChar(5)
  amount_cut Float?    @default(0, map: "DF_confirm_cut_amount_cut") @db.Money

  @@id([std_id, attr, sm_sem, sm_yr], map: "PK_confirm_cut")
  @@index([std_id, attr, sm_sem, sm_yr, status_cut], map: "IX_confirm_cut")
}

model confirm_cut_dorm {
  con_id     Int       @default(autoincrement())
  std_id     String    @db.VarChar(10)
  attr       String    @db.VarChar(3)
  account    String?   @db.VarChar(15)
  date_con   String?   @db.VarChar(15)
  time_con   DateTime? @db.DateTime
  sm_sem     String    @db.VarChar(2)
  sm_yr      String    @db.VarChar(4)
  amount     Float?    @db.Money
  status_cut String?   @db.VarChar(2)
  cc         String?   @db.VarChar(5)
  ccc        String?   @db.VarChar(5)

  @@id([std_id, attr, sm_sem, sm_yr], map: "PK_confirm_cut_dorm")
}

model confirm_cutx {
  std_id     String    @db.VarChar(10)
  attr       String    @db.VarChar(3)
  account    String?   @db.VarChar(15)
  date_con   String?   @db.VarChar(15)
  time_con   DateTime? @db.DateTime
  sm_sem     String    @db.VarChar(2)
  cc         String?   @db.VarChar(5)
  sm_yr      String    @db.VarChar(4)
  status_cut String?   @db.VarChar(2)
  ccc        String?   @db.VarChar(5)
  amount     Float?    @db.Money
  remark     String?   @db.VarChar(50)

  @@id([std_id, attr, sm_sem], map: "PK_confirm_cutx")
}

model counter {
  id_visit   Int    @id(map: "PK__counter__26798FF09CD226AB") @default(autoincrement())
  date_visit String @default("", map: "DF__counter__date_vi__2FAB5810") @db.VarChar(30)
  ip_visit   String @default("", map: "DF__counter__ip_visi__309F7C49") @db.VarChar(30)
  visit      Int    @default(0, map: "DF__counter__visit__3193A082")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model COURSE {
  CODE      String  @db.VarChar(8)
  NAME      String? @db.VarChar(120)
  LEC_CR    Float?
  LEC_GRP   Float?
  LEC_DAY   String? @db.VarChar(3)
  LEC_TIME1 Float?
  LEC_TIME2 Float?
  LEC_PLN   String? @db.VarChar(60)
  LEC_QUOTA Float?
  LAB_CR    Float?
  LAB_GRP   Float?
  LAB_DAY   String? @db.VarChar(3)
  LAB_TIME1 Float?
  LAB_TIME2 Float?
  LAB_PLN   String? @db.VarChar(60)
  LAB_QUOTA Float?
  CRS_TYPE  Float?
  LEC_REGIS Float?
  LAB_REGIS Float?
  year      String? @db.VarChar(8)
  cyear     String? @db.VarChar(8)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model COURSECALL {
  CODE   String? @db.VarChar(10)
  year   String? @db.VarChar(8)
  Code_C String? @db.VarChar(8)

  @@ignore
}

model coursenew {
  run_no           Int     @default(autoincrement())
  CS_CODE          String  @db.VarChar(10)
  SUBJECT_CODE     String  @db.VarChar(20)
  CS_CODE_ISEA     String  @db.VarChar(20)
  ISEA             String? @db.VarChar(50)
  SM_SEM           String  @db.VarChar(1)
  SM_YR            String  @db.VarChar(2)
  CS_NUMBER        String? @db.VarChar(5)
  COURSE_NAM       String? @db.VarChar(255)
  TH_NAME          String? @db.VarChar(255)
  EN_NAME          String? @db.VarChar(255)
  B_CRE_LEC        Float?
  B_CRE_LAB        Float?
  TT_CREDIT        Float?
  DEP_CODE         String? @db.VarChar(10)
  CAM_OWN          String? @db.VarChar(3)
  FAC_OWN          String? @db.VarChar(50)
  DEPART_OWN       String? @db.VarChar(50)
  MAJOR_OWN        String? @db.VarChar(60)
  LEVEL_PLAN       String? @db.VarChar(50)
  CS_OWN           String? @db.VarChar(3)
  FAC_CODE         String? @db.VarChar(10)
  LAB_TYPE         String? @db.VarChar(1)
  CYEAR            String  @id(map: "PK_coursenew") @db.VarChar(12)
  YEAR             String? @db.VarChar(5)
  p_id             Int?
  eval             Float?  @default(0, map: "DF_coursenew_eval")
  count_eval       Int?    @default(0, map: "DF_coursenew_count_eval")
  persent          Float?  @default(0, map: "DF_coursenew_persent")
  cs_eval          String? @db.VarChar(2)
  PRE              String? @db.VarChar(100)
  GROUP_SUBJECT    String? @db.VarChar(250)
  PRE_SHOW         String? @db.VarChar(100)
  DETAIL_SUBJECT   String? @db.VarChar(5000)
  DETAIL_CURDIT    String? @db.VarChar(10)
  status_course    String? @default("Y", map: "DF_coursenew_status_course") @db.VarChar(2)
  GROP_SUBJECT     String? @db.VarChar(250)
  PLAN_YR          String? @db.VarChar(20)
  MAJOR_PLAN       String? @db.VarChar(20)
  C_LEVEL          String? @db.VarChar(15)
  GENED            String? @default("N", map: "DF_coursenew_GENED") @db.VarChar(5)
  GROUP_GENED      String? @db.VarChar(250)
  performance_type String? @db.VarChar(5)
  performance_1    String? @db.VarChar(5)
  performance_2    String? @db.VarChar(5)
  performance_3    String? @db.VarChar(5)
  performance_4    String? @db.VarChar(5)
  performance_5    String? @db.VarChar(5)
  performance_6    String? @db.VarChar(5)
  performance_7    String? @db.VarChar(5)
  performance_8    String? @db.VarChar(5)
  performance_9    String? @db.VarChar(5)
  performance_10   String? @db.VarChar(5)

  @@index([CYEAR, CS_CODE, COURSE_NAM, run_no, EN_NAME], map: "IX_coursenew")
}

model cs_code_eval {
  cs_code     String  @db.VarChar(12)
  sm_sem      String  @db.VarChar(2)
  sm_yr       String  @db.VarChar(3)
  course_name String? @db.VarChar(255)
  happy       Int?
  nothappy    Int?
  note        String? @db.VarChar(250)

  @@id([cs_code, sm_sem, sm_yr], map: "PK_cs_code_eval")
}

model CS_LECTURER {
  RUN_NO       Float
  IDTEA        String   @db.VarChar(10)
  TEACHER      String?  @db.VarChar(100)
  eval         Decimal? @default(0, map: "DF_CS_LECTURER_eval") @db.Decimal(18, 2)
  e_level      String?  @db.VarChar(50)
  n_eval       Int?     @default(0, map: "DF_CS_LECTURER_n_eval")
  sm_sem       String?  @db.VarChar(5)
  sm_yr        String?  @db.VarChar(5)
  N_SEM        String?  @default("1", map: "DF_CS_LECTURER_N_SEM") @db.VarChar(2)
  Fac_id       String?  @db.VarChar(2)
  approve_eval String?  @db.VarChar(2)
  eval1        String?  @db.VarChar(100)
  eval2        String?  @db.VarChar(100)
  IDTEA_ALL    String?  @db.VarChar(50)
  c_level      String?  @db.VarChar(50)

  @@id([RUN_NO, IDTEA], map: "PK_CS_LECTURER")
  @@index([RUN_NO, IDTEA], map: "IX_CS_LECTURER")
}

model CS_SECT {
  RUN_NO               Int       @default(autoincrement())
  CS_CODE              String    @db.VarChar(12)
  CS_CODE_ISEA         String?   @db.VarChar(20)
  PLAN_YR              String?   @db.VarChar(50)
  CS_NUMBER            String?   @db.VarChar(5)
  SM_SEM               String    @db.VarChar(2)
  SM_YR                String    @db.VarChar(4)
  N_SEM                String    @default("1", map: "DF_CS_SECT_N_SEM") @db.VarChar(2)
  STD_GRP              String    @db.VarChar(3)
  STD_GRP_FIX          String    @db.VarChar(3)
  C_LEVEL              String    @db.VarChar(20)
  Q_TYPE               String    @default("0", map: "DF_CS_SECT_Q_TYPE") @db.VarChar(3)
  RG_TYPE              String    @default("C", map: "DF_CS_SECT_RG_TYPE") @db.VarChar(2)
  SEC_LEC1             Float     @default(0, map: "DF_CS_SECT_SEC_LEC1")
  LEC_CREDIT           Float     @default(0, map: "DF_CS_SECT_LEC_CREDIT")
  ID_GROUP             String?   @db.VarChar(100)
  CS_GROUP             String?   @db.VarChar(100)
  LEC_DAY              String    @db.VarChar(100)
  STD_MAJ              String?   @db.VarChar(500)
  FIX_MAJ              String?   @db.VarChar(500)
  Q_QUOTA              Float     @default(0, map: "DF_CS_SECT_Q_QUOTA")
  SEC_LAB1             Float     @default(0, map: "DF_CS_SECT_SEC_LAB1")
  LAB_CREDIT           Float     @default(0, map: "DF_CS_SECT_LAB_CREDIT")
  TT_CREDIT            Float     @default(0, map: "DF_CS_SECT_TT_CREDIT")
  LEC_HOUR             Float     @default(0, map: "DF_CS_SECT_HOUR_NUM")
  LAB_HOUR             Float     @default(0, map: "DF_CS_SECT_LEC_HOUR1")
  LAB_DAY              String    @db.VarChar(100)
  LAB_TYPE             String    @db.VarChar(9)
  Q_USED               Float     @default(0, map: "DF_CS_SECT_Q_USED")
  Q_Drop               Float?    @default(0, map: "DF_CS_SECT_Q_Drop")
  Q_DropW              Float?    @default(0, map: "DF_CS_SECT_Q_DropW")
  Q_Receive            Float?    @default(0, map: "DF_CS_SECT_Q_Receive")
  Q_KU5                Int?      @default(0, map: "DF_CS_SECT_Q_KU5")
  Q_NOTM               Int?      @default(0, map: "DF_CS_SECT_Q_NOTM")
  CS_OWN               String    @default("-", map: "DF_CS_SECT_CS_OWN") @db.VarChar(9)
  CS_OWN_ETC           String    @default("-", map: "DF_CS_SECT_CS_OWN1") @db.VarChar(9)
  TEACHER              String    @default("-", map: "DF_CS_SECT_TEACHER") @db.VarChar(250)
  IDTEA                String    @default("-", map: "DF_CS_SECT_IDTEA") @db.VarChar(30)
  Acc_nontri           String?   @db.VarChar(50)
  officer_code         String?   @db.VarChar(10)
  TEACHER_ETC          String?   @db.VarChar(10)
  PRESHOW              String?   @db.VarChar(100)
  LEC_ROOM             String    @default("-", map: "DF_CS_SECT_LEC_ROOM") @db.VarChar(50)
  LAB_ROOM             String    @default("-", map: "DF_CS_SECT_LAB_ROOM") @db.VarChar(50)
  SEMESTER             String?   @db.VarChar(2)
  PRE                  String    @default("-", map: "DF_CS_SECT_PRE") @db.VarChar(100)
  PRE1                 String?   @db.VarChar(50)
  date_key             DateTime? @db.DateTime
  send                 String    @default("N", map: "DF_CS_SECT_send") @db.VarChar(2)
  send_grade           String    @default("N", map: "DF_CS_SECT_send_grade") @db.VarChar(5)
  date_send            DateTime? @db.DateTime
  transfer             String    @default("N", map: "DF_CS_SECT_transfer") @db.VarChar(2)
  date_tran            DateTime? @db.DateTime
  user_transfer        String?   @db.VarChar(20)
  PAGE_COUNT           Int?
  PAGE_COUNTN          Int?
  T_REG                Int?      @default(0, map: "DF_CS_SECT_T_REG")
  R_REG                Int?      @default(0, map: "DF_CS_SECT_R_REG")
  S_REG                Int?      @default(0, map: "DF_CS_SECT_S_REG")
  M_REG                Int?      @default(0, map: "DF_CS_SECT_M_REG")
  G_REG                Int?      @default(0, map: "DF_CS_SECT_G_REG")
  T_POK_REG            Int?      @default(0, map: "DF_CS_SECT_T_PA_REG1")
  T_PA_REG             Int?      @default(0, map: "DF_CS_SECT_T_PA_REG")
  R_PA_REG             Int?      @default(0, map: "DF_CS_SECT_R_PA_REG")
  R_POK_REG            Int?      @default(0, map: "DF_CS_SECT_R_PA_REG1")
  M_PA_REG             Int?      @default(0, map: "DF_CS_SECT_R_REG1")
  M_POK_REG            Int?      @default(0, map: "DF_CS_SECT_M_PA_REG1")
  S_PA_REG             Int?      @default(0, map: "DF_CS_SECT_R_REG1_1")
  S_POK_REG            Int?      @default(0, map: "DF_CS_SECT_S_PA_REG1")
  G_PA_REG             Int?      @default(0, map: "DF_CS_SECT_R_REG1_2")
  G_POK_REG            Int?      @default(0, map: "DF_CS_SECT_G_PA_REG1")
  pok                  Int?
  spacial              Int?
  Selec_d              String    @default("N", map: "DF_CS_SECT_Selec_d") @db.VarChar(1)
  comment              String?   @db.VarChar(100)
  id_key               String?   @db.VarChar(30)
  supervisor           String?   @db.VarChar(100)
  print_grd            String    @default("N", map: "DF_CS_SECT_print_grd") @db.VarChar(2)
  q_d_F                Int?      @default(0, map: "DF_CS_SECT_q_d_F")
  test_date            String?   @db.VarChar(30)
  test_croom           Int?      @default(0, map: "DF_CS_SECT_cc_roomtest")
  test_room            String?   @db.VarChar(50)
  test_time            String?   @db.VarChar(30)
  approve_eval         String?   @db.VarChar(2)
  select_grade         String?   @default("N", map: "DF_CS_SECT_select_grade") @db.VarChar(2)
  select_s             String?   @default("N", map: "DF_CS_SECT_select_s") @db.VarChar(2)
  eval                 Float?    @default(0, map: "DF_CS_SECT_eval")
  count_eval           Int?      @default(0, map: "DF_CS_SECT_count_eval")
  note                 String?   @db.VarChar(4000)
  eval2                Float?    @default(0, map: "DF_CS_SECT_eval1")
  count_eval2          Int?      @default(0, map: "DF_CS_SECT_count_eval1")
  note2                String?   @db.VarChar(4000)
  date_update          DateTime? @db.DateTime
  user_lastupdate      String?   @db.VarChar(50)
  user_keygrade        String?   @db.VarChar(10)
  user_upgrade         String?   @db.VarChar(10)
  cs_status            String?   @default("Y", map: "DF_CS_SECT_cs_status") @db.VarChar(5)
  remark               String?   @db.VarChar(100)
  date_ku7             DateTime? @db.DateTime
  gencode1             String?   @db.VarChar(100)
  gencode2             String?   @db.VarChar(100)
  user_upfile          String?   @db.VarChar(10)
  importfile           String?   @db.VarChar(200)
  importdate           DateTime? @db.DateTime
  user_importfile      String?   @db.VarChar(10)
  upfile               String?   @db.VarChar(200)
  upfiledate           DateTime? @db.DateTime
  ipupfile             String?   @db.VarChar(20)
  date_test_m          String?   @db.VarChar(100)
  date_test_m_period   String?   @db.VarChar(100)
  test_f_y_n           String?   @db.VarChar(2)
  date_test_f          String?   @db.VarChar(100)
  date_test_f_period   String?   @db.VarChar(100)
  GRADE_A              Int       @default(0, map: "DF_CS_SECT_GRADE_A")
  GRADE_BP             Int       @default(0, map: "DF_CS_SECT_GRADE_A1")
  GRADE_B              Int       @default(0, map: "DF_CS_SECT_GRADE_BP1")
  GRADE_CP             Int       @default(0, map: "DF_CS_SECT_GRADE_BP1_1")
  GRADE_C              Int       @default(0, map: "DF_CS_SECT_GRADE_BP1_2")
  GRADE_DP             Int       @default(0, map: "DF_CS_SECT_GRADE_BP1_3")
  GRADE_D              Int       @default(0, map: "DF_CS_SECT_GRADE_BP1_4")
  GRADE_P              Int       @default(0, map: "DF_CS_SECT_GRADE_BP1_5")
  GRADE_NP             Int       @default(0, map: "DF_CS_SECT_GRADE_BP1_6")
  GRADE_F              Int       @default(0, map: "DF_CS_SECT_GRADE_BP1_7")
  GRADE_I              Int       @default(0, map: "DF_CS_SECT_GRADE_BP1_8")
  GRADE_S              Int       @default(0, map: "DF_CS_SECT_GRADE_BP1_9")
  GRADE_N              Int       @default(0, map: "DF_CS_SECT_GRADE_BP1_10")
  GRADE_W              Int       @default(0, map: "DF_CS_SECT_GRADE_BP1_11")
  GRADE_U              Int       @default(0, map: "DF_CS_SECT_GRADE_S1")
  SCORE_A_MAX          Float     @default(0, map: "DF_CS_SECT_GRADE_A1_1")
  SCORE_A_MIN          Float     @default(0, map: "DF_CS_SECT_SCORE_A_MAX1")
  SCORE_BP_MAX         Float     @default(0, map: "DF_CS_SECT_SCORE_A_MAX1_1")
  SCORE_BP_MIN         Float     @default(0, map: "DF_CS_SECT_SCORE_B_MAX1")
  SCORE_B_MAX          Float     @default(0, map: "DF_CS_SECT_SCORE_BP_MAX1")
  SCORE_B_MIN          Float     @default(0, map: "DF_CS_SECT_SCORE_B_MAX1_1")
  SCORE_CP_MAX         Float     @default(0, map: "DF_CS_SECT_SCORE_B_MAX1_2")
  SCORE_CP_MIN         Float     @default(0, map: "DF_CS_SECT_SCORE_B_MIN1")
  SCORE_C_MAX          Float     @default(0, map: "DF_CS_SECT_SCORE_CP_MAX1_1")
  SCORE_C_MIN          Float     @default(0, map: "DF_CS_SECT_SCORE_CP_MIN1")
  SCORE_DP_MAX         Float     @default(0, map: "DF_CS_SECT_SCORE_CP_MAX1")
  SCORE_DP_MIN         Float     @default(0, map: "DF_CS_SECT_SCORE_C_MIN1")
  SCORE_D_MAX          Float     @default(0, map: "DF_CS_SECT_SCORE_CP_MAX1_2")
  SCORE_D_MIN          Float     @default(0, map: "DF_CS_SECT_SCORE_CP_MIN1_1")
  SCORE_F_MAX          Float     @default(0, map: "DF_CS_SECT_SCORE_CP_MAX1_3")
  SCORE_F_MIN          Float     @default(0, map: "DF_CS_SECT_SCORE_CP_MIN1_2")
  SCORE_S_MAX          Float     @default(0, map: "DF_CS_SECT_SCORE_F_MAX1")
  SCORE_S_MIN          Float     @default(0, map: "DF_CS_SECT_SCORE_S_MAX1")
  SCORE_U_MAX          Float     @default(0, map: "DF_CS_SECT_SCORE_S_MAX1_1")
  SCORE_U_MIN          Float     @default(0, map: "DF_CS_SECT_SCORE_S_MAX1_2")
  CHECK_EVAL           String?   @db.VarChar(2)
  COURSE_NAME1         String?   @db.VarChar(500)
  sign_ku5_7           String?   @db.VarChar(250)
  sign_name            String?   @db.VarChar(250)
  SHOW                 String?   @default("N", map: "DF_CS_SECT_SHOW") @db.VarChar(2)
  SET_TABLE            String?   @db.VarChar(2)
  ku5_id               String?   @db.VarChar(10)
  barcode_pdf          String?   @db.VarChar(30)
  upfile_pdf           String?   @db.VarChar(200)
  server_pdf           String?   @db.VarChar(50)
  upfiledate_pdf       DateTime? @db.DateTime
  ipupfile_pdf         String?   @db.VarChar(20)
  class_online         String?   @db.VarChar(250)
  approve              String?   @db.VarChar(5)
  sign_approve         String?   @db.VarChar(250)
  sign_approve_date    DateTime? @db.DateTime
  sign_approve_ip      String?   @db.VarChar(20)
  sign_approve_name    String?   @db.VarChar(100)
  sign_approve_comment String?   @db.VarChar(250)
  isea                 String?   @db.VarChar(50)
  LEC_DAY1             String?   @db.VarChar(100)
  LAB_DAY1             String?   @db.VarChar(100)
  LEC_ROOM1            String?   @default("-", map: "DF_CS_SECT_LEC_ROOM1") @db.VarChar(50)
  LAB_ROOM1            String?   @default("-", map: "DF_CS_SECT_LAB_ROOM1") @db.VarChar(50)
  update_approve       String?   @db.VarChar(5)

  @@id([CS_CODE, SM_SEM, SM_YR, N_SEM, STD_GRP, SEC_LEC1, SEC_LAB1, CS_OWN], map: "PK_CS_SECT")
  @@index([TEACHER, FIX_MAJ], map: "IX_CS_SECT")
  @@index([RUN_NO, CS_CODE, SM_SEM, SM_YR, SEC_LEC1, SEC_LAB1, C_LEVEL, CS_OWN, STD_GRP, IDTEA, STD_MAJ, N_SEM, SHOW, LEC_DAY, LAB_DAY], map: "IX_CS_SECT_1")
}

model CS_SECT_59 {
  RUN_NO       Int     @default(autoincrement())
  CS_CODE      String  @db.VarChar(12)
  COURSE_NAME  String  @db.VarChar(250)
  CS_GROUP     String? @db.VarChar(100)
  SM_SEM       String  @db.VarChar(2)
  SM_YR        String  @db.VarChar(4)
  STD_GRP      String  @db.VarChar(3)
  RG_TYPE      String  @default("C", map: "DF_CS_SECT_59_RG_TYPE") @db.VarChar(2)
  TT_CREDIT    Int     @default(0, map: "DF_CS_SECT_59_TT_CREDIT")
  LEC_CREDIT   Int     @default(0, map: "DF_CS_SECT_59_LEC_CREDIT")
  LEC_HOUR     Float   @default(0, map: "DF_CS_SECT_59_LEC_HOUR")
  SEC_LEC1     Int     @default(0, map: "DF_CS_SECT_59_SEC_LEC1")
  STD_MAJ_LEC  String? @db.VarChar(100)
  Q_QUOTA_LEC  Int     @default(0, map: "DF_CS_SECT_59_Q_QUOTA")
  LEC_DAY      String  @db.VarChar(100)
  LAB_CREDIT   Int     @default(0, map: "DF_CS_SECT_59_LAB_CREDIT")
  LAB_HOUR     Float   @default(0, map: "DF_CS_SECT_59_LAB_HOUR")
  SEC_LAB1     Int     @default(0, map: "DF_CS_SECT_59_SEC_LAB1")
  STD_MAJ_LAB  String? @db.VarChar(100)
  LAB_DAY      String  @db.VarChar(100)
  Q_QUOTA_LAB  Int     @default(0, map: "DF_CS_SECT_59_Q_QUOTA_LAB")
  LAB_TYPE     String  @db.VarChar(9)
  PRE          String  @default("-", map: "DF_CS_SECT_59_PRE") @db.VarChar(100)
  PRESHOW      String? @db.VarChar(100)
  CS_OWN       String  @default("-", map: "DF_CS_SECT_59_CS_OWN") @db.VarChar(9)
  CS_OWN_ETC   String? @default("-", map: "DF_CS_SECT_59_CS_OWN_ETC") @db.VarChar(9)
  IDTEA        String  @default("-", map: "DF_CS_SECT_59_IDTEA") @db.VarChar(30)
  TEACHER      String  @default("-", map: "DF_CS_SECT_59_TEACHER") @db.VarChar(250)
  LEC_ROOM     String  @default("-", map: "DF_CS_SECT_59_LEC_ROOM") @db.VarChar(50)
  LAB_ROOM     String  @default("-", map: "DF_CS_SECT_59_LAB_ROOM") @db.VarChar(50)
  test_midturm String? @db.VarChar(2)
  test_final   String? @db.VarChar(2)
  test_hour    Float?  @default(0, map: "DF_CS_SECT_59_test_croom")
  remark       String? @db.VarChar(100)

  @@id([CS_CODE, SM_SEM, SM_YR, STD_GRP, SEC_LEC1, SEC_LAB1, CS_OWN], map: "PK_CS_SECT_59")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model CS_SECT_AUDIT {
  RUN_NO          Int
  CS_CODE         String    @db.VarChar(12)
  CS_NUMBER       String?   @db.VarChar(5)
  SM_SEM          String    @db.VarChar(2)
  SM_YR           String    @db.VarChar(4)
  N_SEM           String    @default("1", map: "DF_CS_SECT_AUDIT_N_SEM_1") @db.VarChar(2)
  STD_GRP         String    @db.VarChar(3)
  STD_GRP_FIX     String    @db.VarChar(3)
  C_LEVEL         String    @db.VarChar(20)
  Q_TYPE          String    @default("0", map: "DF_CS_SECT_AUDIT_Q_TYPE") @db.VarChar(3)
  RG_TYPE         String    @default("C", map: "DF_CS_SECT_AUDIT_RG_TYPE") @db.VarChar(2)
  SEC_LEC1        Float     @default(0, map: "DF_CS_SECT_AUDIT_SEC_LEC1_1")
  LEC_CREDIT      Float     @default(0, map: "DF_CS_SECT_AUDIT_LEC_CREDIT")
  ID_GROUP        String?   @db.VarChar(100)
  CS_GROUP        String?   @db.VarChar(100)
  LEC_DAY         String    @db.VarChar(100)
  STD_MAJ         String?   @db.VarChar(500)
  FIX_MAJ         String?   @db.VarChar(500)
  Q_QUOTA         Float     @default(0, map: "DF_CS_SECT_AUDIT_Q_QUOTA_1")
  SEC_LAB1        Float     @default(0, map: "DF_CS_SECT_AUDIT_SEC_LAB1_1")
  LAB_CREDIT      Float     @default(0, map: "DF_CS_SECT_AUDIT_LAB_CREDIT")
  TT_CREDIT       Float     @default(0, map: "DF_CS_SECT_AUDIT_TT_CREDIT")
  LEC_HOUR        Float     @default(0, map: "DF_CS_SECT_AUDIT_LEC_HOUR_1")
  LAB_HOUR        Float     @default(0, map: "DF_CS_SECT_AUDIT_LAB_HOUR_1")
  LAB_DAY         String    @db.VarChar(100)
  LAB_TYPE        String    @db.VarChar(9)
  Q_USED          Float     @default(0, map: "DF_CS_SECT_AUDIT_Q_USED_1")
  Q_Drop          Float?    @default(0, map: "DF_CS_SECT_AUDIT_Q_Drop")
  Q_DropW         Float?    @default(0, map: "DF_CS_SECT_AUDIT_Q_DropW")
  Q_Receive       Float?    @default(0, map: "DF_CS_SECT_AUDIT_Q_Receive")
  Q_KU5           Int?      @default(0, map: "DF_CS_SECT_AUDIT_Q_KU5_1")
  Q_NOTM          Int?      @default(0, map: "DF_CS_SECT_AUDIT_Q_NOTM_1")
  CS_OWN          String    @default("-", map: "DF_CS_SECT_AUDIT_CS_OWN_1") @db.VarChar(9)
  CS_OWN_ETC      String?   @default("-", map: "DF_CS_SECT_AUDIT_CS_OWN_ETC") @db.VarChar(9)
  TEACHER         String    @default("-", map: "DF_CS_SECT_AUDIT_TEACHER_1") @db.VarChar(250)
  IDTEA           String    @default("-", map: "DF_CS_SECT_AUDIT_IDTEA_1") @db.VarChar(30)
  Acc_nontri      String?   @db.VarChar(50)
  officer_code    String?   @db.VarChar(10)
  TEACHER_ETC     String?   @db.VarChar(10)
  PRESHOW         String?   @db.VarChar(100)
  LEC_ROOM        String    @default("-", map: "DF_CS_SECT_AUDIT_LEC_ROOM_1") @db.VarChar(50)
  LAB_ROOM        String    @default("-", map: "DF_CS_SECT_AUDIT_LAB_ROOM_1") @db.VarChar(50)
  SEMESTER        String?   @db.VarChar(2)
  PRE             String    @default("-", map: "DF_CS_SECT_AUDIT_PRE_1") @db.VarChar(100)
  PRE1            String?   @db.VarChar(50)
  date_key        DateTime? @db.DateTime
  send            String    @default("N", map: "DF_CS_SECT_AUDIT_send_1") @db.VarChar(2)
  send_grade      String    @default("N", map: "DF_CS_SECT_AUDIT_send_grade_1") @db.VarChar(5)
  date_send       DateTime? @db.DateTime
  transfer        String    @default("N", map: "DF_CS_SECT_AUDIT_transfer_1") @db.VarChar(2)
  date_tran       DateTime? @db.DateTime
  user_transfer   String?   @db.VarChar(20)
  PAGE_COUNT      Int?
  PAGE_COUNTN     Int?
  T_REG           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T_REG")
  R_REG           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R_REG")
  S_REG           Int?      @default(0, map: "DF_CS_SECT_AUDIT_S_REG")
  M_REG           Int?      @default(0, map: "DF_CS_SECT_AUDIT_M_REG")
  G_REG           Int?      @default(0, map: "DF_CS_SECT_AUDIT_G_REG")
  T_POK_REG       Int?      @default(0, map: "DF_CS_SECT_AUDIT_T_POK_REG")
  T_PA_REG        Int?      @default(0, map: "DF_CS_SECT_AUDIT_T_PA_REG")
  R_PA_REG        Int?      @default(0, map: "DF_CS_SECT_AUDIT_R_PA_REG")
  R_POK_REG       Int?      @default(0, map: "DF_CS_SECT_AUDIT_R_POK_REG")
  M_PA_REG        Int?      @default(0, map: "DF_CS_SECT_AUDIT_M_PA_REG")
  M_POK_REG       Int?      @default(0, map: "DF_CS_SECT_AUDIT_M_POK_REG")
  S_PA_REG        Int?      @default(0, map: "DF_CS_SECT_AUDIT_S_PA_REG")
  S_POK_REG       Int?      @default(0, map: "DF_CS_SECT_AUDIT_S_POK_REG")
  G_PA_REG        Int?      @default(0, map: "DF_CS_SECT_AUDIT_G_PA_REG")
  G_POK_REG       Int?      @default(0, map: "DF_CS_SECT_AUDIT_G_POK_REG")
  pok             Int?
  spacial         Int?
  Selec_d         String    @default("N", map: "DF_CS_SECT_AUDIT_Selec_d_1") @db.VarChar(1)
  comment         String?   @db.VarChar(100)
  id_key          String?   @db.VarChar(30)
  supervisor      String?   @db.VarChar(100)
  print_grd       String    @default("N", map: "DF_CS_SECT_AUDIT_print_grd_1") @db.VarChar(2)
  q_d_F           Int?      @default(0, map: "DF_CS_SECT_AUDIT_q_d_F_1")
  M01_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_M01_1_1")
  M01_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_M01_2_1")
  M01_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_M01_3_1")
  M01_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_M01_4_1")
  M02_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_M02_1_1")
  M02_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_M02_2_1")
  M02_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_M02_3_1")
  M02_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_M02_4_1")
  M03_1           Int?
  M03_2           Int?
  M03_3           Int?
  M03_4           Int?
  R01_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R01_1_1")
  R01_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R01_2_1")
  R01_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R01_3_1")
  R01_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R01_4_1")
  R02_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R02_1_1")
  R02_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R02_2_1")
  R02_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R02_3_1")
  R02_4           Int?
  R03_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R03_1_1")
  R03_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R03_2_1")
  R03_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R03_3_1")
  R03_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R03_4_1")
  R04_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R04_1_1")
  R04_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R04_2_1")
  R04_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R04_3_1")
  R04_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R04_4_1")
  R05_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R05_1_1")
  R05_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R05_2_1")
  R05_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R05_3_1")
  R05_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R05_4_1")
  R06_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R06_1_1")
  R06_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R06_2_1")
  R06_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R06_3_1")
  R06_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R06_4_1")
  R07_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R07_1_1")
  R07_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R07_2_1")
  R07_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R07_3_1")
  R07_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R07_4_1")
  R08_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R08_1_1")
  R08_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R08_2_1")
  R08_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R08_3_1")
  R08_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R08_4_1")
  R09_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R09_1_1")
  R09_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R09_2_1")
  R09_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R09_3_1")
  R09_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R09_4_1")
  R10_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R10_1_1")
  R10_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R10_2_1")
  R10_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R10_3_1")
  R10_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R10_4_1")
  R11_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R11_1_1")
  R11_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R11_2_1")
  R11_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R11_3_1")
  R11_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R11_4_1")
  R12_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R12_1_1")
  R12_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R12_2_1")
  R12_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R12_3_1")
  R12_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R12_4_1")
  R13_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R13_1_1")
  R13_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R13_2_1")
  R13_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R13_3_1")
  R13_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R13_4_1")
  R14_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R14_1_1")
  R14_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R14_2_1")
  R14_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R14_3_1")
  R14_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R14_4_1")
  R15_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R15_1_1")
  R15_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R15_2_1")
  R15_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R15_3_1")
  R15_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_R15_4_1")
  T01_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T01_1_1")
  T01_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T01_2_1")
  T01_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T01_3_1")
  T01_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T01_4_1")
  T02_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T02_1_1")
  T02_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T02_2_1")
  T02_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T02_3_1")
  T02_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T02_4_1")
  T03_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T03_1_1")
  T03_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T03_2_1")
  T03_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T03_3_1")
  T03_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T03_4_1")
  T04_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T04_1_1")
  T04_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T04_2_1")
  T04_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T04_3_1")
  T04_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T04_4_1")
  T07_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T07_1_1")
  T07_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T07_2_1")
  T07_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T07_3_1")
  T07_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T07_4_1")
  T08_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T08_1_1")
  T08_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T08_2_1")
  T08_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T08_3_1")
  T08_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_T08_4_1")
  S05_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_S05_1_1")
  S05_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_S05_2_1")
  S05_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_S05_3_1")
  S05_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_S05_4_1")
  S06_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_S06_1_1")
  S06_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_S06_2_1")
  S06_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_S06_3_1")
  S06_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_S06_4_1")
  S08_1           Int?      @default(0, map: "DF_CS_SECT_AUDIT_S08_1_1")
  S08_2           Int?      @default(0, map: "DF_CS_SECT_AUDIT_S08_2_1")
  S08_3           Int?      @default(0, map: "DF_CS_SECT_AUDIT_S08_3_1")
  S08_4           Int?      @default(0, map: "DF_CS_SECT_AUDIT_S08_4_1")
  S09_1           Int?
  S09_2           Int?
  S09_3           Int?
  S09_4           Int?
  S10_1           Int?
  S10_2           Int?
  S10_3           Int?
  S10_4           Int?
  test_date       String?   @db.VarChar(30)
  test_croom      Int?      @default(0, map: "DF_CS_SECT_AUDIT_test_croom_1")
  test_room       String?   @db.VarChar(50)
  test_time       String?   @db.VarChar(30)
  approve_eval    String?   @db.VarChar(2)
  select_grade    String?   @default("N", map: "DF_CS_SECT_AUDIT_select_grade_1") @db.VarChar(2)
  select_s        String?   @default("N", map: "DF_CS_SECT_AUDIT_select_s_1") @db.VarChar(2)
  eval            Float?    @default(0, map: "DF_CS_SECT_AUDIT_eval_1")
  count_eval      Int?      @default(0, map: "DF_CS_SECT_AUDIT_count_eval_1")
  date_update     DateTime? @db.DateTime
  user_lastupdate String?   @db.VarChar(50)
  user_keygrade   String?   @db.VarChar(10)
  user_upgrade    String?   @db.VarChar(10)
  cs_status       String?   @default("Y", map: "DF_CS_SECT_AUDIT_cs_status_1") @db.VarChar(5)
  remark          String?   @db.VarChar(100)
  date_ku7        DateTime? @db.DateTime
  gencode1        String?   @db.VarChar(100)
  gencode2        String?   @db.VarChar(100)
  user_upfile     String?   @db.VarChar(10)
  importfile      String?   @db.VarChar(200)
  importdate      DateTime? @db.DateTime
  user_importfile String?   @db.VarChar(10)
  upfile          String?   @db.VarChar(200)
  upfiledate      DateTime? @db.DateTime
  ipupfile        String?   @db.VarChar(20)
  GRADE_A         Int       @default(0, map: "DF_CS_SECT_AUDIT_GRADE_A")
  GRADE_BP        Int       @default(0, map: "DF_CS_SECT_AUDIT_GRADE_BP")
  GRADE_B         Int       @default(0, map: "DF_CS_SECT_AUDIT_GRADE_B")
  GRADE_CP        Int       @default(0, map: "DF_CS_SECT_AUDIT_GRADE_CP")
  GRADE_C         Int       @default(0, map: "DF_CS_SECT_AUDIT_GRADE_C")
  GRADE_DP        Int       @default(0, map: "DF_CS_SECT_AUDIT_GRADE_DP")
  GRADE_D         Int       @default(0, map: "DF_CS_SECT_AUDIT_GRADE_D")
  GRADE_P         Int       @default(0, map: "DF_CS_SECT_AUDIT_GRADE_P")
  GRADE_NP        Int       @default(0, map: "DF_CS_SECT_AUDIT_GRADE_NP")
  GRADE_F         Int       @default(0, map: "DF_CS_SECT_AUDIT_GRADE_F")
  GRADE_I         Int       @default(0, map: "DF_CS_SECT_AUDIT_GRADE_I")
  GRADE_S         Int       @default(0, map: "DF_CS_SECT_AUDIT_GRADE_S")
  GRADE_N         Int       @default(0, map: "DF_CS_SECT_AUDIT_GRADE_N")
  GRADE_W         Int       @default(0, map: "DF_CS_SECT_AUDIT_GRADE_W")
  GRADE_U         Int       @default(0, map: "DF_CS_SECT_AUDIT_GRADE_U")
  CHECK_EVAL      String?   @db.VarChar(2)
  COURSE_NAME1    String?   @db.VarChar(500)
  sign_ku5_7      String?   @db.VarChar(50)
  SHOW            String?   @default("N", map: "DF_CS_SECT_AUDIT_SHOW") @db.VarChar(2)
  SET_TABLE       String?   @db.VarChar(2)
  ku5_id          String?   @db.VarChar(10)
  sys_user        String?   @db.VarChar(50)
  del_date        DateTime? @db.DateTime
  user_del        String?   @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model CS_SECT_BACK_60_2 {
  RUN_NO             Int
  CS_CODE            String    @db.VarChar(12)
  SM_SEM             String    @db.VarChar(2)
  SM_YR              String    @db.VarChar(4)
  N_SEM              String    @default("1", map: "DF_CS_SECT_BACK_60_2_N_SEM") @db.VarChar(2)
  STD_GRP            String    @db.VarChar(3)
  STD_GRP_FIX        String    @db.VarChar(3)
  C_LEVEL            String    @db.VarChar(20)
  Q_TYPE             String    @default("0", map: "DF_CS_SECT_BACK_60_2_Q_TYPE") @db.VarChar(3)
  RG_TYPE            String    @default("C", map: "DF_CS_SECT_BACK_60_2_RG_TYPE") @db.VarChar(2)
  SEC_LEC1           Float     @default(0, map: "DF_CS_SECT_BACK_60_2_SEC_LEC1")
  LEC_CREDIT         Float     @default(0, map: "DF_CS_SECT_BACK_60_2_LEC_CREDIT")
  ID_GROUP           String?   @db.VarChar(100)
  CS_GROUP           String?   @db.VarChar(100)
  LEC_DAY            String    @db.VarChar(100)
  STD_MAJ            String?   @db.VarChar(500)
  FIX_MAJ            String?   @db.VarChar(500)
  Q_QUOTA            Float     @default(0, map: "DF_CS_SECT_BACK_60_2_Q_QUOTA")
  SEC_LAB1           Float     @default(0, map: "DF_CS_SECT_BACK_60_2_SEC_LAB1")
  LAB_CREDIT         Float     @default(0, map: "DF_CS_SECT_BACK_60_2_LAB_CREDIT")
  TT_CREDIT          Float     @default(0, map: "DF_CS_SECT_BACK_60_2_TT_CREDIT")
  LEC_HOUR           Float     @default(0, map: "DF_CS_SECT_BACK_60_2_LEC_HOUR")
  LAB_HOUR           Float     @default(0, map: "DF_CS_SECT_BACK_60_2_LAB_HOUR")
  LAB_DAY            String    @db.VarChar(100)
  LAB_TYPE           String    @db.VarChar(9)
  Q_USED             Float     @default(0, map: "DF_CS_SECT_BACK_60_2_Q_USED")
  Q_Drop             Float?    @default(0, map: "DF_CS_SECT_BACK_60_2_Q_Drop")
  Q_DropW            Float?    @default(0, map: "DF_CS_SECT_BACK_60_2_Q_DropW")
  Q_Receive          Float?    @default(0, map: "DF_CS_SECT_BACK_60_2_Q_Receive")
  Q_KU5              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_Q_KU5")
  Q_NOTM             Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_Q_NOTM")
  CS_OWN             String    @default("-", map: "DF_CS_SECT_BACK_60_2_CS_OWN") @db.VarChar(9)
  CS_OWN_ETC         String?   @default("-", map: "DF_CS_SECT_BACK_60_2_CS_OWN_ETC") @db.VarChar(9)
  TEACHER            String    @default("-", map: "DF_CS_SECT_BACK_60_2_TEACHER") @db.VarChar(250)
  IDTEA              String    @default("-", map: "DF_CS_SECT_BACK_60_2_IDTEA") @db.VarChar(30)
  Acc_nontri         String?   @db.VarChar(50)
  TEACHER_ETC        String?   @db.VarChar(10)
  PRESHOW            String?   @db.VarChar(100)
  LEC_ROOM           String    @default("-", map: "DF_CS_SECT_BACK_60_2_LEC_ROOM") @db.VarChar(50)
  LAB_ROOM           String    @default("-", map: "DF_CS_SECT_BACK_60_2_LAB_ROOM") @db.VarChar(50)
  SEMESTER           String?   @db.VarChar(2)
  PRE                String    @default("-", map: "DF_CS_SECT_BACK_60_2_PRE") @db.VarChar(100)
  PRE1               String?   @db.VarChar(50)
  date_key           DateTime? @db.DateTime
  send               String    @default("N", map: "DF_CS_SECT_BACK_60_2_send") @db.VarChar(2)
  send_grade         String    @default("N", map: "DF_CS_SECT_BACK_60_2_send_grade") @db.VarChar(5)
  date_send          DateTime? @db.DateTime
  transfer           String    @default("N", map: "DF_CS_SECT_BACK_60_2_transfer") @db.VarChar(2)
  date_tran          DateTime? @db.DateTime
  user_transfer      String?   @db.VarChar(20)
  PAGE_COUNT         Int?
  PAGE_COUNTN        Int?
  T_REG              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T_REG")
  R_REG              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R_REG")
  S_REG              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_S_REG")
  M_REG              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_M_REG")
  G_REG              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_G_REG")
  T_POK_REG          Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T_POK_REG")
  T_PA_REG           Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T_PA_REG")
  R_PA_REG           Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R_PA_REG")
  R_POK_REG          Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R_POK_REG")
  M_PA_REG           Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_M_PA_REG")
  M_POK_REG          Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_M_POK_REG")
  S_PA_REG           Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_S_PA_REG")
  S_POK_REG          Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_S_POK_REG")
  G_PA_REG           Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_G_PA_REG")
  G_POK_REG          Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_G_POK_REG")
  pok                Int?
  spacial            Int?
  Selec_d            String    @default("N", map: "DF_CS_SECT_BACK_60_2_Selec_d") @db.VarChar(1)
  comment            String?   @db.VarChar(100)
  id_key             String?   @db.VarChar(30)
  supervisor         String?   @db.VarChar(100)
  print_grd          String    @default("N", map: "DF_CS_SECT_BACK_60_2_print_grd") @db.VarChar(2)
  q_d_F              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_q_d_F")
  M01_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_M01_1")
  M01_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_M01_2")
  M01_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_M01_3")
  M01_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_M01_4")
  M02_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_M02_1")
  M02_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_M02_2")
  M02_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_M02_3")
  M02_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_M02_4")
  M03_1              Int?
  M03_2              Int?
  M03_3              Int?
  M03_4              Int?
  R01_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R01_1")
  R01_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R01_2")
  R01_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R01_3")
  R01_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R01_4")
  R02_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R02_1")
  R02_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R02_2")
  R02_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R02_3")
  R02_4              Int?
  R03_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R03_1")
  R03_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R03_2")
  R03_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R03_3")
  R03_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R03_4")
  R04_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R04_1")
  R04_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R04_2")
  R04_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R04_3")
  R04_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R04_4")
  R05_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R05_1")
  R05_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R05_2")
  R05_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R05_3")
  R05_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R05_4")
  R06_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R06_1")
  R06_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R06_2")
  R06_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R06_3")
  R06_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R06_4")
  R07_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R07_1")
  R07_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R07_2")
  R07_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R07_3")
  R07_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R07_4")
  R08_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R08_1")
  R08_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R08_2")
  R08_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R08_3")
  R08_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R08_4")
  R09_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R09_1")
  R09_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R09_2")
  R09_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R09_3")
  R09_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R09_4")
  R10_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R10_1")
  R10_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R10_2")
  R10_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R10_3")
  R10_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R10_4")
  R11_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R11_1")
  R11_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R11_2")
  R11_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R11_3")
  R11_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R11_4")
  R12_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R12_1")
  R12_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R12_2")
  R12_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R12_3")
  R12_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R12_4")
  R13_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R13_1")
  R13_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R13_2")
  R13_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R13_3")
  R13_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R13_4")
  R14_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R14_1")
  R14_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R14_2")
  R14_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R14_3")
  R14_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R14_4")
  R15_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R15_1")
  R15_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R15_2")
  R15_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R15_3")
  R15_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_R15_4")
  T01_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T01_1")
  T01_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T01_2")
  T01_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T01_3")
  T01_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T01_4")
  T02_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T02_1")
  T02_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T02_2")
  T02_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T02_3")
  T02_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T02_4")
  T03_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T03_1")
  T03_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T03_2")
  T03_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T03_3")
  T03_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T03_4")
  T04_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T04_1")
  T04_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T04_2")
  T04_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T04_3")
  T04_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T04_4")
  T07_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T07_1")
  T07_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T07_2")
  T07_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T07_3")
  T07_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T07_4")
  T08_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T08_1")
  T08_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T08_2")
  T08_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T08_3")
  T08_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_T08_4")
  S05_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_S05_1")
  S05_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_S05_2")
  S05_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_S05_3")
  S05_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_S05_4")
  S06_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_S06_1")
  S06_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_S06_2")
  S06_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_S06_3")
  S06_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_S06_4")
  S08_1              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_S08_1")
  S08_2              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_S08_2")
  S08_3              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_S08_3")
  S08_4              Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_S08_4")
  S09_1              Int?
  S09_2              Int?
  S09_3              Int?
  S09_4              Int?
  S10_1              Int?
  S10_2              Int?
  S10_3              Int?
  S10_4              Int?
  test_date          String?   @db.VarChar(30)
  test_croom         Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_test_croom")
  test_room          String?   @db.VarChar(50)
  test_time          String?   @db.VarChar(30)
  approve_eval       String?   @db.VarChar(2)
  select_grade       String?   @default("N", map: "DF_CS_SECT_BACK_60_2_select_grade") @db.VarChar(2)
  select_s           String?   @default("N", map: "DF_CS_SECT_BACK_60_2_select_s") @db.VarChar(2)
  eval               Float?    @default(0, map: "DF_CS_SECT_BACK_60_2_eval")
  count_eval         Int?      @default(0, map: "DF_CS_SECT_BACK_60_2_count_eval")
  date_update        DateTime? @db.DateTime
  user_lastupdate    String?   @db.VarChar(50)
  user_keygrade      String?   @db.VarChar(10)
  user_upgrade       String?   @db.VarChar(10)
  cs_status          String?   @default("Y", map: "DF_CS_SECT_BACK_60_2_cs_status") @db.VarChar(5)
  remark             String?   @db.VarChar(100)
  date_ku7           DateTime? @db.DateTime
  gencode1           String?   @db.VarChar(50)
  gencode2           String?   @db.VarChar(50)
  user_upfile        String?   @db.VarChar(10)
  importfile         String?   @db.VarChar(200)
  importdate         DateTime? @db.DateTime
  user_importfile    String?   @db.VarChar(10)
  upfile             String?   @db.VarChar(200)
  upfiledate         DateTime? @db.DateTime
  ipupfile           String?   @db.VarChar(20)
  test_m_y_n         String?   @db.VarChar(2)
  date_test_m        String?   @db.VarChar(100)
  date_test_m_period String?   @db.VarChar(100)
  test_room_m        String?   @db.VarChar(50)
  test_f_y_n         String?   @db.VarChar(2)
  date_test_f        String?   @db.VarChar(100)
  date_test_f_period String?   @db.VarChar(100)
  test_room_f        String?   @db.VarChar(50)
  GRADE_A            Int       @default(0, map: "DF_CS_SECT_BACK_60_2_GRADE_A")
  GRADE_BP           Int       @default(0, map: "DF_CS_SECT_BACK_60_2_GRADE_BP")
  GRADE_B            Int       @default(0, map: "DF_CS_SECT_BACK_60_2_GRADE_B")
  GRADE_CP           Int       @default(0, map: "DF_CS_SECT_BACK_60_2_GRADE_CP")
  GRADE_C            Int       @default(0, map: "DF_CS_SECT_BACK_60_2_GRADE_C")
  GRADE_DP           Int       @default(0, map: "DF_CS_SECT_BACK_60_2_GRADE_DP")
  GRADE_D            Int       @default(0, map: "DF_CS_SECT_BACK_60_2_GRADE_D")
  GRADE_P            Int       @default(0, map: "DF_CS_SECT_BACK_60_2_GRADE_P")
  GRADE_NP           Int       @default(0, map: "DF_CS_SECT_BACK_60_2_GRADE_NP")
  GRADE_F            Int       @default(0, map: "DF_CS_SECT_BACK_60_2_GRADE_F")
  GRADE_I            Int       @default(0, map: "DF_CS_SECT_BACK_60_2_GRADE_I")
  GRADE_S            Int       @default(0, map: "DF_CS_SECT_BACK_60_2_GRADE_S")
  GRADE_N            Int       @default(0, map: "DF_CS_SECT_BACK_60_2_GRADE_N")
  GRADE_W            Int       @default(0, map: "DF_CS_SECT_BACK_60_2_GRADE_W")
  GRADE_U            Int       @default(0, map: "DF_CS_SECT_BACK_60_2_GRADE_U")
  CHECK_EVAL         String?   @db.VarChar(2)
  COURSE_NAME1       String?   @db.VarChar(500)
  sign_ku5_7         String?   @db.VarChar(50)
  SHOW               String?   @default("N", map: "DF_CS_SECT_BACK_60_2_SHOW") @db.VarChar(2)
  SET_TABLE          String?   @db.VarChar(2)
  LEC_DAY1           String?   @db.VarChar(50)
  LAB_DAY1           String?   @db.VarChar(50)
  LEC_ROOM1          String?   @db.VarChar(50)
  LAB_ROOM1          String?   @db.VarChar(50)

  @@ignore
}

model CS_SECT_EVAL {
  nno            Int     @default(autoincrement())
  RUN_NO         Int
  CS_CODE        String  @db.VarChar(12)
  COURSE_NAME    String? @db.VarChar(255)
  CYEAR          String  @db.VarChar(12)
  IDTEA          String  @db.VarChar(50)
  SEC_LEC1       Float   @default(0, map: "DF_CS_SECT_EVAL_SEC_LEC1")
  SEC_LAB1       Float   @default(0, map: "DF_CS_SECT_EVAL_SEC_LAB1")
  IDTEA_All      String? @db.VarChar(50)
  TEACHER        String? @db.VarChar(100)
  ACCOUNT_NONTRI String? @db.VarChar(50)
  eval1          Decimal @default(0, map: "DF_CS_SECT_EVAL_eval") @db.Decimal(18, 2)
  n_reg          Int     @default(0, map: "DF_CS_SECT_EVAL_n_reg")
  n_eval1        Int     @default(0, map: "DF_CS_SECT_EVAL_n_eval")
  sm_sem         String  @db.VarChar(5)
  sm_yr          String  @db.VarChar(5)
  N_SEM          String  @default("1", map: "DF_CS_SECT_EVAL_N_SEM") @db.VarChar(2)
  Fac_id         String? @db.VarChar(2)
  TT_CREDIT      Int?
  Status_tea     String? @db.VarChar(5)
  note1          String? @db.VarChar(4000)
  eval2          Decimal @default(0, map: "DF_CS_SECT_EVAL_eval1") @db.Decimal(18, 2)
  n_eval2        Int     @default(0, map: "DF_CS_SECT_EVAL_n_eval11")
  note2          String? @db.VarChar(4000)
  CHECK_EVAL     String? @db.VarChar(2)

  @@id([CS_CODE, CYEAR, IDTEA, SEC_LEC1, SEC_LAB1, sm_sem, sm_yr, N_SEM], map: "PK_CS_SECT_EVAL_1")
}

model CS_SECT_KU5 {
  RUN_NO               Int       @default(autoincrement())
  KU5_ID               Int
  CS_CODE              String    @db.VarChar(12)
  SM_SEM               String    @db.VarChar(2)
  SM_YR                String    @db.VarChar(4)
  N_SEM                String    @default("1", map: "DF_CS_SECT_KU5_N_SEM") @db.VarChar(2)
  SEC_LEC1             Float     @default(0, map: "DF_CS_SECT_KU5_SEC_LEC1")
  SEC_LAB1             Float     @default(0, map: "DF_CS_SECT_KU5_SEC_LAB1")
  CS_OWN               String    @default("-", map: "DF_CS_SECT_KU5_CS_OWN") @db.VarChar(9)
  CS_OWN_ETC           String    @default("-", map: "DF_CS_SECT_KU5_CS_OWN1") @db.VarChar(9)
  TT_CREDIT            Int       @default(0, map: "DF_CS_SECT_KU5_TT_CREDIT")
  TEACHER              String    @default("-", map: "DF_CS_SECT_KU5_TEACHER") @db.VarChar(250)
  IDTEA                String    @default("-", map: "DF_CS_SECT_KU5_IDTEA") @db.VarChar(30)
  C_LEVEL              String    @db.VarChar(20)
  send                 String    @default("N", map: "DF_CS_SECT_KU5_send") @db.VarChar(2)
  send_grade           String    @default("N", map: "DF_CS_SECT_KU5_send_grade") @db.VarChar(5)
  date_send            DateTime? @db.DateTime
  transfer             String    @default("N", map: "DF_CS_SECT_KU5_transfer") @db.VarChar(2)
  date_tran            DateTime? @db.DateTime
  user_transfer        String?   @db.VarChar(20)
  gencode1             String?   @db.VarChar(100)
  q_used               Int?      @default(0, map: "DF_CS_SECT_KU5_q_used")
  upfile               String?   @db.VarChar(200)
  upfiledate           DateTime? @db.DateTime
  ipupfile             String?   @db.VarChar(20)
  sign_ku5_7           String?   @db.VarChar(250)
  sign_ku5_user        String?   @db.VarChar(100)
  barcode_pdf          String?   @db.VarChar(30)
  upfile_pdf           String?   @db.VarChar(200)
  server_pdf           String?   @db.VarChar(50)
  upfiledate_pdf       DateTime? @db.DateTime
  ipupfile_pdf         String?   @db.VarChar(20)
  approve              String?   @db.VarChar(5)
  sign_approve         String?   @db.VarChar(250)
  sign_approve_date    DateTime? @db.DateTime
  sign_approve_ip      String?   @db.VarChar(20)
  sign_approve_name    String?   @db.VarChar(100)
  sign_approve_comment String?   @db.VarChar(250)
  sign_approve_user    String?   @db.VarChar(100)
  GRADE_A              Int       @default(0, map: "DF_CS_SECT_KU5_GRADE_A")
  GRADE_BP             Int       @default(0, map: "DF_CS_SECT_KU5_GRADE_BP")
  GRADE_B              Int       @default(0, map: "DF_CS_SECT_KU5_GRADE_B")
  GRADE_CP             Int       @default(0, map: "DF_CS_SECT_KU5_GRADE_CP")
  GRADE_C              Int       @default(0, map: "DF_CS_SECT_KU5_GRADE_C")
  GRADE_DP             Int       @default(0, map: "DF_CS_SECT_KU5_GRADE_DP")
  GRADE_D              Int       @default(0, map: "DF_CS_SECT_KU5_GRADE_D")
  GRADE_P              Int       @default(0, map: "DF_CS_SECT_KU5_GRADE_P")
  GRADE_NP             Int       @default(0, map: "DF_CS_SECT_KU5_GRADE_NP")
  GRADE_F              Int       @default(0, map: "DF_CS_SECT_KU5_GRADE_F")
  GRADE_I              Int       @default(0, map: "DF_CS_SECT_KU5_GRADE_I")
  GRADE_S              Int       @default(0, map: "DF_CS_SECT_KU5_GRADE_S_1")
  GRADE_N              Int       @default(0, map: "DF_CS_SECT_KU5_GRADE_N_1")
  GRADE_W              Int       @default(0, map: "DF_CS_SECT_KU5_GRADE_W")
  GRADE_U              Int       @default(0, map: "DF_CS_SECT_KU5_GRADE_U_1")
  SCORE_A_MAX          Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_A_MAX")
  SCORE_A_MIN          Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_A_MIN")
  SCORE_BP_MAX         Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_BP_MAX")
  SCORE_BP_MIN         Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_BP_MIN")
  SCORE_B_MAX          Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_B_MAX")
  SCORE_B_MIN          Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_B_MIN")
  SCORE_CP_MAX         Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_CP_MAX")
  SCORE_CP_MIN         Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_CP_MIN")
  SCORE_C_MAX          Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_C_MAX")
  SCORE_C_MIN          Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_C_MIN")
  SCORE_DP_MAX         Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_DP_MAX")
  SCORE_DP_MIN         Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_DP_MIN")
  SCORE_D_MAX          Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_D_MAX")
  SCORE_D_MIN          Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_D_MIN")
  SCORE_F_MAX          Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_F_MAX")
  SCORE_F_MIN          Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_F_MIN")
  SCORE_S_MAX          Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_S_MAX")
  SCORE_S_MIN          Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_S_MIN")
  SCORE_U_MAX          Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_U_MAX_1")
  SCORE_U_MIN          Int       @default(0, map: "DF_CS_SECT_KU5_SCORE_U_MIN_1")

  @@id([KU5_ID, CS_CODE, SM_SEM, SM_YR, N_SEM, SEC_LEC1, SEC_LAB1, CS_OWN], map: "PK_CS_SECT_KU5")
}

model CS_SECT_KU7 {
  RUN_NO               Int       @default(autoincrement())
  KU7_ID               Int
  CS_CODE              String    @db.VarChar(12)
  SM_SEM               String    @db.VarChar(2)
  SM_YR                String    @db.VarChar(4)
  N_SEM                String    @default("1", map: "DF_CS_SECT_KU7_N_SEM") @db.VarChar(2)
  SEC_LEC1             Float     @default(0, map: "DF_CS_SECT_KU7_SEC_LEC1")
  SEC_LAB1             Float     @default(0, map: "DF_CS_SECT_KU7_SEC_LAB1")
  CS_OWN               String    @default("-", map: "DF_CS_SECT_KU7_CS_OWN") @db.VarChar(9)
  CS_OWN_ETC           String    @default("-", map: "DF_CS_SECT_KU7_CS_OWN1") @db.VarChar(9)
  TT_CREDIT            Int       @default(0, map: "DF_CS_SECT_KU7_TT_CREDIT")
  TEACHER              String    @default("-", map: "DF_CS_SECT_KU7_TEACHER") @db.VarChar(250)
  IDTEA                String    @default("-", map: "DF_CS_SECT_KU7_IDTEA") @db.VarChar(30)
  C_LEVEL              String    @db.VarChar(20)
  send                 String    @default("N", map: "DF_CS_SECT_KU7_send") @db.VarChar(2)
  send_grade           String    @default("N", map: "DF_CS_SECT_KU7_send_grade") @db.VarChar(5)
  date_send            DateTime? @db.DateTime
  transfer             String    @default("N", map: "DF_CS_SECT_KU7_transfer") @db.VarChar(2)
  date_tran            DateTime? @db.DateTime
  user_transfer        String?   @db.VarChar(20)
  gencode1             String?   @db.VarChar(100)
  q_used               Int?      @default(0, map: "DF_CS_SECT_KU7_q_used")
  upfile               String?   @db.VarChar(200)
  upfiledate           DateTime? @db.DateTime
  ipupfile             String?   @db.VarChar(20)
  sign_ku5_7           String?   @db.VarChar(250)
  barcode_pdf          String?   @db.VarChar(30)
  upfile_pdf           String?   @db.VarChar(200)
  server_pdf           String?   @db.VarChar(50)
  upfiledate_pdf       DateTime? @db.DateTime
  ipupfile_pdf         String?   @db.VarChar(20)
  approve              String?   @db.VarChar(5)
  sign_approve         String?   @db.VarChar(250)
  sign_approve_date    DateTime? @db.DateTime
  sign_approve_ip      String?   @db.VarChar(20)
  sign_approve_name    String?   @db.VarChar(100)
  sign_approve_comment String?   @db.VarChar(250)
  remark               String?   @db.VarChar(250)

  @@id([KU7_ID, CS_CODE, SM_SEM, SM_YR, N_SEM, SEC_LEC1, SEC_LAB1, CS_OWN], map: "PK_CS_SECT_KU7")
}

model CS_SECT_OLD {
  RUN_NO             Int       @default(autoincrement())
  CS_CODE            String    @db.VarChar(12)
  SM_SEM             String    @db.VarChar(2)
  SM_YR              String    @db.VarChar(4)
  N_SEM              String    @default("1", map: "DF_CS_SECT_OLD_N_SEM") @db.VarChar(2)
  STD_GRP            String    @db.VarChar(3)
  STD_GRP_FIX        String    @db.VarChar(3)
  C_LEVEL            String    @db.VarChar(20)
  Q_TYPE             String    @default("0", map: "DF_CS_SECT_OLD_Q_TYPE") @db.VarChar(3)
  RG_TYPE            String?   @db.VarChar(2)
  SEC_LEC1           Float     @default(0, map: "DF_CS_SECT_OLD_SEC_LEC1")
  LEC_CREDIT         Float     @default(0, map: "DF_CS_SECT_OLD_LEC_CREDIT")
  ID_GROUP           String?   @db.VarChar(5)
  CS_GROUP           String?   @db.VarChar(100)
  LEC_DAY            String    @db.VarChar(100)
  STD_MAJ            String?   @db.VarChar(500)
  FIX_MAJ            String?   @db.VarChar(500)
  Q_QUOTA            Float     @default(0, map: "DF_CS_SECT_OLD_Q_QUOTA")
  SEC_LAB1           Float     @default(0, map: "DF_CS_SECT_OLD_SEC_LAB1")
  LAB_CREDIT         Float     @default(0, map: "DF_CS_SECT_OLD_LAB_CREDIT")
  TT_CREDIT          Float     @default(0, map: "DF_CS_SECT_OLD_TT_CREDIT")
  LEC_HOUR           Float     @default(0, map: "DF_CS_SECT_OLD_LEC_HOUR")
  LAB_HOUR           Float     @default(0, map: "DF_CS_SECT_OLD_LAB_HOUR")
  LAB_DAY            String    @db.VarChar(100)
  LAB_TYPE           String    @db.VarChar(9)
  Q_USED             Float     @default(0, map: "DF_CS_SECT_OLD_Q_USED")
  Q_Drop             Float?    @default(0, map: "DF_CS_SECT_OLD_Q_Drop")
  Q_DropW            Float?    @default(0, map: "DF_CS_SECT_OLD_Q_DropW")
  Q_Receive          Float?    @default(0, map: "DF_CS_SECT_OLD_Q_Receive")
  Q_KU5              Int?      @default(0, map: "DF_CS_SECT_OLD_Q_KU5")
  Q_NOTM             Int?      @default(0, map: "DF_CS_SECT_OLD_Q_NOTM")
  CS_OWN             String    @default("-", map: "DF_CS_SECT_OLD_CS_OWN") @db.VarChar(9)
  CS_OWN_ETC         String?   @default("-", map: "DF_CS_SECT_OLD_CS_OWN_ETC") @db.VarChar(9)
  TEACHER            String    @default("-", map: "DF_CS_SECT_OLD_TEACHER") @db.VarChar(250)
  IDTEA              String    @default("-", map: "DF_CS_SECT_OLD_IDTEA") @db.VarChar(30)
  Acc_nontri         String?   @db.VarChar(50)
  TEACHER_ETC        String?   @db.VarChar(10)
  PRESHOW            String?   @db.VarChar(100)
  LEC_ROOM           String    @default("-", map: "DF_CS_SECT_OLD_LEC_ROOM") @db.VarChar(50)
  LAB_ROOM           String    @default("-", map: "DF_CS_SECT_OLD_LAB_ROOM") @db.VarChar(50)
  SEMESTER           String?   @db.VarChar(2)
  PRE                String    @default("-", map: "DF_CS_SECT_OLD_PRE") @db.VarChar(100)
  date_key           DateTime? @db.DateTime
  send               String    @default("N", map: "DF_CS_SECT_OLD_send") @db.VarChar(2)
  send_grade         String    @default("N", map: "DF_CS_SECT_OLD_send_grade") @db.VarChar(5)
  date_send          DateTime? @db.DateTime
  transfer           String    @default("N", map: "DF_CS_SECT_OLD_transfer") @db.VarChar(2)
  date_tran          DateTime? @db.DateTime
  user_transfer      String?   @db.VarChar(20)
  PAGE_COUNT         Int?
  PAGE_COUNTN        Int?
  T_REG              Int?      @default(0, map: "DF_CS_SECT_OLD_T_REG")
  R_REG              Int?      @default(0, map: "DF_CS_SECT_OLD_R_REG")
  S_REG              Int?      @default(0, map: "DF_CS_SECT_OLD_S_REG")
  M_REG              Int?      @default(0, map: "DF_CS_SECT_OLD_M_REG")
  G_REG              Int?      @default(0, map: "DF_CS_SECT_OLD_G_REG")
  T_POK_REG          Int?      @default(0, map: "DF_CS_SECT_OLD_T_POK_REG")
  T_PA_REG           Int?      @default(0, map: "DF_CS_SECT_OLD_T_PA_REG")
  R_PA_REG           Int?      @default(0, map: "DF_CS_SECT_OLD_R_PA_REG")
  R_POK_REG          Int?      @default(0, map: "DF_CS_SECT_OLD_R_POK_REG")
  M_PA_REG           Int?      @default(0, map: "DF_CS_SECT_OLD_M_PA_REG")
  M_POK_REG          Int?      @default(0, map: "DF_CS_SECT_OLD_M_POK_REG")
  S_PA_REG           Int?      @default(0, map: "DF_CS_SECT_OLD_S_PA_REG")
  S_POK_REG          Int?      @default(0, map: "DF_CS_SECT_OLD_S_POK_REG")
  G_PA_REG           Int?      @default(0, map: "DF_CS_SECT_OLD_G_PA_REG")
  G_POK_REG          Int?      @default(0, map: "DF_CS_SECT_OLD_G_POK_REG")
  pok                Int?
  spacial            Int?
  Selec_d            String    @default("N", map: "DF_CS_SECT_OLD_Selec_d") @db.VarChar(1)
  comment            String?   @db.VarChar(100)
  id_key             String?   @db.VarChar(30)
  supervisor         String?   @db.VarChar(100)
  print_grd          String    @default("N", map: "DF_CS_SECT_OLD_print_grd") @db.VarChar(2)
  q_d_F              Int?      @default(0, map: "DF_CS_SECT_OLD_q_d_F")
  M01_1              Int?      @default(0, map: "DF_CS_SECT_OLD_M01_1")
  M01_2              Int?      @default(0, map: "DF_CS_SECT_OLD_M01_2")
  M01_3              Int?      @default(0, map: "DF_CS_SECT_OLD_M01_3")
  M01_4              Int?      @default(0, map: "DF_CS_SECT_OLD_M01_4")
  M02_1              Int?      @default(0, map: "DF_CS_SECT_OLD_M02_1")
  M02_2              Int?      @default(0, map: "DF_CS_SECT_OLD_M02_2")
  M02_3              Int?      @default(0, map: "DF_CS_SECT_OLD_M02_3")
  M02_4              Int?      @default(0, map: "DF_CS_SECT_OLD_M02_4")
  M03_1              Int?
  M03_2              Int?
  M03_3              Int?
  M03_4              Int?
  R01_1              Int?      @default(0, map: "DF_CS_SECT_OLD_R01_1")
  R01_2              Int?      @default(0, map: "DF_CS_SECT_OLD_R01_2")
  R01_3              Int?      @default(0, map: "DF_CS_SECT_OLD_R01_3")
  R01_4              Int?      @default(0, map: "DF_CS_SECT_OLD_R01_4")
  R02_1              Int?      @default(0, map: "DF_CS_SECT_OLD_R02_1")
  R02_2              Int?      @default(0, map: "DF_CS_SECT_OLD_R02_2")
  R02_3              Int?      @default(0, map: "DF_CS_SECT_OLD_R02_3")
  R02_4              Int?
  R03_1              Int?      @default(0, map: "DF_CS_SECT_OLD_R03_1")
  R03_2              Int?      @default(0, map: "DF_CS_SECT_OLD_R03_2")
  R03_3              Int?      @default(0, map: "DF_CS_SECT_OLD_R03_3")
  R03_4              Int?      @default(0, map: "DF_CS_SECT_OLD_R03_4")
  R04_1              Int?      @default(0, map: "DF_CS_SECT_OLD_R04_1")
  R04_2              Int?      @default(0, map: "DF_CS_SECT_OLD_R04_2")
  R04_3              Int?      @default(0, map: "DF_CS_SECT_OLD_R04_3")
  R04_4              Int?      @default(0, map: "DF_CS_SECT_OLD_R04_4")
  R05_1              Int?      @default(0, map: "DF_CS_SECT_OLD_R05_1")
  R05_2              Int?      @default(0, map: "DF_CS_SECT_OLD_R05_2")
  R05_3              Int?      @default(0, map: "DF_CS_SECT_OLD_R05_3")
  R05_4              Int?      @default(0, map: "DF_CS_SECT_OLD_R05_4")
  R06_1              Int?      @default(0, map: "DF_CS_SECT_OLD_R06_1")
  R06_2              Int?      @default(0, map: "DF_CS_SECT_OLD_R06_2")
  R06_3              Int?      @default(0, map: "DF_CS_SECT_OLD_R06_3")
  R06_4              Int?      @default(0, map: "DF_CS_SECT_OLD_R06_4")
  R07_1              Int?      @default(0, map: "DF_CS_SECT_OLD_R07_1")
  R07_2              Int?      @default(0, map: "DF_CS_SECT_OLD_R07_2")
  R07_3              Int?      @default(0, map: "DF_CS_SECT_OLD_R07_3")
  R07_4              Int?      @default(0, map: "DF_CS_SECT_OLD_R07_4")
  R08_1              Int?      @default(0, map: "DF_CS_SECT_OLD_R08_1")
  R08_2              Int?      @default(0, map: "DF_CS_SECT_OLD_R08_2")
  R08_3              Int?      @default(0, map: "DF_CS_SECT_OLD_R08_3")
  R08_4              Int?      @default(0, map: "DF_CS_SECT_OLD_R08_4")
  R09_1              Int?      @default(0, map: "DF_CS_SECT_OLD_R09_1")
  R09_2              Int?      @default(0, map: "DF_CS_SECT_OLD_R09_2")
  R09_3              Int?      @default(0, map: "DF_CS_SECT_OLD_R09_3")
  R09_4              Int?      @default(0, map: "DF_CS_SECT_OLD_R09_4")
  R10_1              Int?      @default(0, map: "DF_CS_SECT_OLD_R10_1")
  R10_2              Int?      @default(0, map: "DF_CS_SECT_OLD_R10_2")
  R10_3              Int?      @default(0, map: "DF_CS_SECT_OLD_R10_3")
  R10_4              Int?      @default(0, map: "DF_CS_SECT_OLD_R10_4")
  R11_1              Int?      @default(0, map: "DF_CS_SECT_OLD_R11_1")
  R11_2              Int?      @default(0, map: "DF_CS_SECT_OLD_R11_2")
  R11_3              Int?      @default(0, map: "DF_CS_SECT_OLD_R11_3")
  R11_4              Int?      @default(0, map: "DF_CS_SECT_OLD_R11_4")
  R12_1              Int?      @default(0, map: "DF_CS_SECT_OLD_R12_1")
  R12_2              Int?      @default(0, map: "DF_CS_SECT_OLD_R12_2")
  R12_3              Int?      @default(0, map: "DF_CS_SECT_OLD_R12_3")
  R12_4              Int?      @default(0, map: "DF_CS_SECT_OLD_R12_4")
  R13_1              Int?      @default(0, map: "DF_CS_SECT_OLD_R13_1")
  R13_2              Int?      @default(0, map: "DF_CS_SECT_OLD_R13_2")
  R13_3              Int?      @default(0, map: "DF_CS_SECT_OLD_R13_3")
  R13_4              Int?      @default(0, map: "DF_CS_SECT_OLD_R13_4")
  R14_1              Int?      @default(0, map: "DF_CS_SECT_OLD_R14_1")
  R14_2              Int?      @default(0, map: "DF_CS_SECT_OLD_R14_2")
  R14_3              Int?      @default(0, map: "DF_CS_SECT_OLD_R14_3")
  R14_4              Int?      @default(0, map: "DF_CS_SECT_OLD_R14_4")
  R15_1              Int?      @default(0, map: "DF_CS_SECT_OLD_R15_1")
  R15_2              Int?      @default(0, map: "DF_CS_SECT_OLD_R15_2")
  R15_3              Int?      @default(0, map: "DF_CS_SECT_OLD_R15_3")
  R15_4              Int?      @default(0, map: "DF_CS_SECT_OLD_R15_4")
  T01_1              Int?      @default(0, map: "DF_CS_SECT_OLD_T01_1")
  T01_2              Int?      @default(0, map: "DF_CS_SECT_OLD_T01_2")
  T01_3              Int?      @default(0, map: "DF_CS_SECT_OLD_T01_3")
  T01_4              Int?      @default(0, map: "DF_CS_SECT_OLD_T01_4")
  T02_1              Int?      @default(0, map: "DF_CS_SECT_OLD_T02_1")
  T02_2              Int?      @default(0, map: "DF_CS_SECT_OLD_T02_2")
  T02_3              Int?      @default(0, map: "DF_CS_SECT_OLD_T02_3")
  T02_4              Int?      @default(0, map: "DF_CS_SECT_OLD_T02_4")
  T03_1              Int?      @default(0, map: "DF_CS_SECT_OLD_T03_1")
  T03_2              Int?      @default(0, map: "DF_CS_SECT_OLD_T03_2")
  T03_3              Int?      @default(0, map: "DF_CS_SECT_OLD_T03_3")
  T03_4              Int?      @default(0, map: "DF_CS_SECT_OLD_T03_4")
  T04_1              Int?      @default(0, map: "DF_CS_SECT_OLD_T04_1")
  T04_2              Int?      @default(0, map: "DF_CS_SECT_OLD_T04_2")
  T04_3              Int?      @default(0, map: "DF_CS_SECT_OLD_T04_3")
  T04_4              Int?      @default(0, map: "DF_CS_SECT_OLD_T04_4")
  T07_1              Int?      @default(0, map: "DF_CS_SECT_OLD_T07_1")
  T07_2              Int?      @default(0, map: "DF_CS_SECT_OLD_T07_2")
  T07_3              Int?      @default(0, map: "DF_CS_SECT_OLD_T07_3")
  T07_4              Int?      @default(0, map: "DF_CS_SECT_OLD_T07_4")
  T08_1              Int?      @default(0, map: "DF_CS_SECT_OLD_T08_1")
  T08_2              Int?      @default(0, map: "DF_CS_SECT_OLD_T08_2")
  T08_3              Int?      @default(0, map: "DF_CS_SECT_OLD_T08_3")
  T08_4              Int?      @default(0, map: "DF_CS_SECT_OLD_T08_4")
  S05_1              Int?      @default(0, map: "DF_CS_SECT_OLD_S05_1")
  S05_2              Int?      @default(0, map: "DF_CS_SECT_OLD_S05_2")
  S05_3              Int?      @default(0, map: "DF_CS_SECT_OLD_S05_3")
  S05_4              Int?      @default(0, map: "DF_CS_SECT_OLD_S05_4")
  S06_1              Int?      @default(0, map: "DF_CS_SECT_OLD_S06_1")
  S06_2              Int?      @default(0, map: "DF_CS_SECT_OLD_S06_2")
  S06_3              Int?      @default(0, map: "DF_CS_SECT_OLD_S06_3")
  S06_4              Int?      @default(0, map: "DF_CS_SECT_OLD_S06_4")
  S08_1              Int?      @default(0, map: "DF_CS_SECT_OLD_S08_1")
  S08_2              Int?      @default(0, map: "DF_CS_SECT_OLD_S08_2")
  S08_3              Int?      @default(0, map: "DF_CS_SECT_OLD_S08_3")
  S08_4              Int?      @default(0, map: "DF_CS_SECT_OLD_S08_4")
  S09_1              Int?
  S09_2              Int?
  S09_3              Int?
  S09_4              Int?
  S10_1              Int?
  S10_2              Int?
  S10_3              Int?
  S10_4              Int?
  test_date          String?   @db.VarChar(30)
  test_croom         Int?      @default(0, map: "DF_CS_SECT_OLD_test_croom")
  test_room          String?   @db.VarChar(50)
  test_time          String?   @db.VarChar(30)
  approve_eval       String?   @db.VarChar(2)
  select_grade       String?   @default("N", map: "DF_CS_SECT_OLD_select_grade") @db.VarChar(2)
  cut_a              String?   @default("80-100", map: "DF_CS_SECT_OLD_cut_a") @db.VarChar(10)
  cut_bp             String?   @default("75-79", map: "DF_CS_SECT_OLD_cut_bp") @db.VarChar(10)
  cut_b              String?   @default("70-74", map: "DF_CS_SECT_OLD_cut_b") @db.VarChar(10)
  cut_cp             String?   @default("65-69", map: "DF_CS_SECT_OLD_cut_cp") @db.VarChar(10)
  cut_c              String?   @default("60-64", map: "DF_CS_SECT_OLD_cut_c") @db.VarChar(10)
  cut_dp             String?   @default("55-59", map: "DF_CS_SECT_OLD_cut_dp") @db.VarChar(10)
  cut_d              String?   @default("50-54", map: "DF_CS_SECT_OLD_cut_d") @db.VarChar(10)
  cut_f              String?   @default("0-49", map: "DF_CS_SECT_OLD_cut_f") @db.VarChar(10)
  cut_p              String?   @default("50-100", map: "DF_CS_SECT_OLD_cut_p") @db.VarChar(10)
  cut_np             String?   @default("0-49", map: "DF_CS_SECT_OLD_cut_np") @db.VarChar(10)
  select_s           String?   @default("N", map: "DF_CS_SECT_OLD_select_s") @db.VarChar(2)
  eval               Float?    @default(0, map: "DF_CS_SECT_OLD_eval")
  count_eval         Int?      @default(0, map: "DF_CS_SECT_OLD_count_eval")
  date_update        DateTime? @db.DateTime
  user_lastupdate    String?   @db.VarChar(50)
  user_keygrade      String?   @db.VarChar(10)
  user_upgrade       String?   @db.VarChar(10)
  cs_status          String?   @default("Y", map: "DF_CS_SECT_OLD_cs_status") @db.VarChar(5)
  remark             String?   @db.VarChar(100)
  date_ku7           DateTime? @db.DateTime
  gencode1           String?   @db.VarChar(50)
  gencode2           String?   @db.VarChar(50)
  user_upfile        String?   @db.VarChar(10)
  importfile         String?   @db.VarChar(200)
  importdate         DateTime? @db.DateTime
  user_importfile    String?   @db.VarChar(10)
  upfile             String?   @db.VarChar(200)
  upfiledate         DateTime? @db.DateTime
  ipupfile           String?   @db.VarChar(20)
  date_test_m        String?   @db.VarChar(100)
  date_test_m_period String?   @db.VarChar(100)
  date_test_f        String?   @db.VarChar(100)
  date_test_f_period String?   @db.VarChar(100)
  GRADE_A            Int       @default(0, map: "DF_CS_SECT_OLD_GRADE_A")
  GRADE_BP           Int       @default(0, map: "DF_CS_SECT_OLD_GRADE_BP")
  GRADE_B            Int       @default(0, map: "DF_CS_SECT_OLD_GRADE_B")
  GRADE_CP           Int       @default(0, map: "DF_CS_SECT_OLD_GRADE_CP")
  GRADE_C            Int       @default(0, map: "DF_CS_SECT_OLD_GRADE_C")
  GRADE_DP           Int       @default(0, map: "DF_CS_SECT_OLD_GRADE_DP")
  GRADE_D            Int       @default(0, map: "DF_CS_SECT_OLD_GRADE_D")
  GRADE_P            Int       @default(0, map: "DF_CS_SECT_OLD_GRADE_P")
  GRADE_NP           Int       @default(0, map: "DF_CS_SECT_OLD_GRADE_NP")
  GRADE_F            Int       @default(0, map: "DF_CS_SECT_OLD_GRADE_F")
  GRADE_I            Int       @default(0, map: "DF_CS_SECT_OLD_GRADE_I")
  GRADE_S            Int       @default(0, map: "DF_CS_SECT_OLD_GRADE_S")
  GRADE_N            Int       @default(0, map: "DF_CS_SECT_OLD_GRADE_N")
  GRADE_W            Int       @default(0, map: "DF_CS_SECT_OLD_GRADE_W")
  GRADE_U            Int       @default(0, map: "DF_CS_SECT_OLD_GRADE_U")
  CHECK_EVAL         String?   @db.VarChar(2)
  COURSE_NAME1       String?   @db.VarChar(500)

  @@id([CS_CODE, SM_SEM, SM_YR, N_SEM, STD_GRP, SEC_LEC1, SEC_LAB1, CS_OWN], map: "PK_CS_SECT_OLD")
}

model CS_SECT_UNIQUE {
  nno            Int     @default(autoincrement())
  RUN_NO         Int
  NUMBER_EVAL    Int
  CS_CODE        String  @db.VarChar(12)
  COURSE_NAME    String? @db.VarChar(255)
  CYEAR          String  @db.VarChar(12)
  IDTEA          String  @db.VarChar(50)
  IDTEA_All      String? @db.VarChar(50)
  TEACHER        String? @db.VarChar(100)
  TEACHER_ALL    String? @db.VarChar(255)
  ACCOUNT_NONTRI String? @db.VarChar(50)
  eval           Decimal @default(0, map: "DF_CS_SECT_UNIQUE_eval") @db.Decimal(18, 2)
  n_reg          Int     @default(0, map: "DF_CS_SECT_UNIQUE_n_reg")
  n_eval         Int     @default(0, map: "DF_CS_SECT_UNIQUE_n_eval")
  sm_sem         String  @db.VarChar(5)
  sm_yr          String  @db.VarChar(5)
  N_SEM          String  @default("1", map: "DF_CS_SECT_UNIQUE_N_SEM") @db.VarChar(2)
  Fac_id         String? @db.VarChar(2)
  TT_CREDIT      Int?
  Ans14          String? @db.Text
  Status_tea     String? @db.VarChar(5)
  note           String? @db.VarChar(4000)
  notexx         String? @db.VarChar(4000)
  CHECK_EVAL     String? @db.VarChar(2)
  C_LEVEL        String? @db.VarChar(50)

  @@id([NUMBER_EVAL, CS_CODE, CYEAR, IDTEA, sm_sem, sm_yr, N_SEM], map: "PK_CS_SECT_UNIQUE")
}

model CS_SECT_UNIQUE_INDEX {
  nno            Int     @default(autoincrement())
  RUN_NO         Int
  CS_CODE        String  @db.VarChar(12)
  COURSE_NAME    String? @db.VarChar(255)
  CYEAR          String  @db.VarChar(12)
  IDTEA          String  @db.VarChar(50)
  IDTEA_All      String? @db.VarChar(50)
  TEACHER        String? @db.VarChar(100)
  TEACHER_ALL    String? @db.VarChar(255)
  ACCOUNT_NONTRI String? @db.VarChar(50)
  eval1          Decimal @default(0, map: "DF_Table_1_eval") @db.Decimal(18, 2)
  n_reg1         Int     @default(0, map: "DF_Table_1_n_reg")
  n_eval1        Int     @default(0, map: "DF_Table_1_n_eval")
  sm_sem         String  @db.VarChar(5)
  sm_yr          String  @db.VarChar(5)
  N_SEM          String  @default("1", map: "DF_CS_SECT_UNIQUE_INDEX_N_SEM") @db.VarChar(2)
  Fac_id         String? @db.VarChar(2)
  TT_CREDIT      Int?
  Status_tea     String? @db.VarChar(5)
  note1          String? @db.VarChar(4000)
  eval2          Decimal @default(0, map: "DF_Table_1_eval11") @db.Decimal(18, 2)
  n_reg2         Int     @default(0, map: "DF_Table_1_n_reg11")
  n_eval2        Int     @default(0, map: "DF_Table_1_n_eval11")
  note2          String? @db.VarChar(4000)
  remark         String? @db.VarChar(50)
  C_LEVEL        String? @db.VarChar(50)

  @@id([CYEAR, IDTEA, sm_sem, sm_yr, N_SEM], map: "PK_CS_SECT_UNIQUE_INDEX")
}

model CS_SECT_UNIQUE_SEC {
  nno            Int
  RUN_NO         Int
  NUMBER_EVAL    Int
  CS_CODE        String  @db.VarChar(12)
  COURSE_NAME    String? @db.VarChar(255)
  CYEAR          String  @db.VarChar(12)
  SEC_LEC1       Int
  SEC_LAB1       Int
  IDTEA          String? @db.VarChar(50)
  IDTEA_All      String? @db.VarChar(50)
  TEACHER        String? @db.VarChar(100)
  TEACHER_ALL    String? @db.VarChar(255)
  ACCOUNT_NONTRI String? @db.VarChar(50)
  eval           Decimal @default(0, map: "DF_CS_SECT_UNIQUE_SEC_eval") @db.Decimal(18, 2)
  n_reg          Int     @default(0, map: "DF_CS_SECT_UNIQUE_SEC_n_reg")
  n_eval         Int     @default(0, map: "DF_CS_SECT_UNIQUE_SEC_n_eval")
  sm_sem         String  @db.VarChar(5)
  sm_yr          String  @db.VarChar(5)
  N_SEM          String  @default("1", map: "DF_CS_SECT_UNIQUE_SEC_N_SEM") @db.VarChar(2)
  Fac_id         String? @db.VarChar(2)
  TT_CREDIT      Int?
  Ans14          String? @db.Text
  Status_tea     String? @db.VarChar(5)
  note           String? @db.VarChar(4000)
  notexx         String? @db.VarChar(4000)
  CHECK_EVAL     String? @db.VarChar(2)
  C_LEVEL        String? @db.VarChar(50)

  @@id([NUMBER_EVAL, CS_CODE, CYEAR, SEC_LEC1, SEC_LAB1, sm_sem, sm_yr], map: "PK_CS_SECT_UNIQUE_SEC")
}

model CS_SET_TABLE {
  nno         Int
  id_room     String  @db.VarChar(50)
  sm_sem      String  @db.VarChar(2)
  sm_yr       String  @db.VarChar(5)
  build       String? @db.VarChar(100)
  c_learn     Int?    @default(0, map: "DF_set_table_c_learn")
  c_test      Int?
  row_learn   Int?
  row_test    Int?
  M1          String? @db.VarChar(450)
  M2          String? @db.VarChar(450)
  M3          String? @db.VarChar(450)
  M4          String? @db.VarChar(450)
  M5          String? @db.VarChar(450)
  Tu1         String? @db.VarChar(450)
  Tu2         String? @db.VarChar(450)
  Tu3         String? @db.VarChar(450)
  Tu4         String? @db.VarChar(450)
  Tu5         String? @db.VarChar(450)
  W1          String? @db.VarChar(450)
  W2          String? @db.VarChar(450)
  W3          String? @db.VarChar(450)
  W4          String? @db.VarChar(450)
  W5          String? @db.VarChar(450)
  Th1         String? @db.VarChar(450)
  Th2         String? @db.VarChar(450)
  Th3         String? @db.VarChar(450)
  Th4         String? @db.VarChar(450)
  Th5         String? @db.VarChar(450)
  F1          String? @db.VarChar(450)
  F2          String? @db.VarChar(450)
  F3          String? @db.VarChar(450)
  F4          String? @db.VarChar(450)
  F5          String? @db.VarChar(450)
  Sat1        String? @db.VarChar(450)
  Sat2        String? @db.VarChar(450)
  Sat3        String? @db.VarChar(450)
  Sat4        String? @db.VarChar(450)
  Sat5        String? @db.VarChar(450)
  Sun1        String? @db.VarChar(450)
  Sun2        String? @db.VarChar(450)
  Sun3        String? @db.VarChar(450)
  Sun4        String? @db.VarChar(450)
  Sun5        String? @db.VarChar(450)
  Status_room String? @db.VarChar(5)
  Set_hour    String? @db.VarChar(5)

  @@id([id_room, sm_sem, sm_yr], map: "PK_set_table")
}

model CURRICULUM {
  NNO        Int     @default(autoincrement())
  CUR_ID     String  @db.VarChar(15)
  c_level    String  @db.VarChar(50)
  FAC_ID     String  @db.NVarChar(2)
  MAJOR_POK  String? @db.NVarChar(50)
  MAJOR_PA   String? @db.NVarChar(50)
  DESP_T     String? @db.NVarChar(100)
  DESP_T_ETC String? @db.NVarChar(100)
  DESP_E     String? @db.NVarChar(100)
  DESP_E_ETC String? @db.NVarChar(100)
  FACULTY    String? @db.NVarChar(50)
  CURR       String? @db.NVarChar(10)
  CURR_TH    String? @db.NVarChar(10)
  FAC_T      String? @db.NVarChar(50)
  DEGREE     String? @db.NVarChar(75)
  degreeth   String? @db.NVarChar(75)
  sumcredit  Int?
  sumyear    Int?
  yr_1       String? @db.NVarChar(10)
  cre_yr_1   Int?
  yr_2       String? @db.NVarChar(10)
  cre_yr_2   Int?
  yr_3       String? @db.NVarChar(10)
  cre_yr_3   Int?
  yr_4       String? @db.NVarChar(10)
  cre_yr_4   Int?
  yr_5       String? @db.NVarChar(10)
  cre_yr_5   Int?
  plan_cur   String? @db.VarChar(10)
  status_cur String? @db.VarChar(2)

  @@id([CUR_ID, c_level, FAC_ID], map: "PK_CURRICULUM")
  @@index([CUR_ID, c_level, FAC_ID], map: "IX_CURRICULUM")
}

model Datafeed_bll {
  prc         Int?
  src         Int?
  Ord         Int?
  successcode Int?
  Ref         String  @db.VarChar(35)
  orderRef1   String? @db.VarChar(35)
  orderRef2   String? @db.VarChar(35)
  orderRef3   String? @db.VarChar(35)
  orderRef4   String? @db.VarChar(35)
  orderRef5   String? @db.VarChar(35)
  refNo1      Float
  refNo2      Float
  PayRef      Int
  Amt         Float?
  Cur         String? @db.VarChar(3)
  remark      String? @db.VarChar(200)
  sourceIp    String? @db.VarChar(15)
  ipCountry   String? @db.VarChar(3)
  sm_yr       String  @db.VarChar(4)
  sm_sem      String  @db.VarChar(2)
  std_id      String  @db.VarChar(10)

  @@id([Ref, refNo1, refNo2, PayRef, sm_yr, sm_sem, std_id], map: "PK_Datafeed_bll")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model dbo_appler_new {
  NNO         Int     @default(autoincrement())
  id_card     String? @db.NVarChar(13)
  idpassport  String? @db.NVarChar(20)
  Sname_th    String? @db.NVarChar(50)
  name_th     String? @db.NVarChar(200)
  surname_th  String? @db.NVarChar(200)
  Sname_eng   String? @db.NVarChar(20)
  name_eng    String? @db.NVarChar(200)
  surname_eng String? @db.NVarChar(200)
  nation      String? @db.NVarChar(20)
  race_ni     String? @db.NVarChar(20)
  religion    String? @db.NVarChar(20)
  domicile    String? @db.NVarChar(20)
  age_s       String? @db.NVarChar(10)
  date_both   String? @db.NVarChar(20)
  num_home    String? @db.NVarChar(200)
  mo_home     String? @db.NVarChar(200)
  ch_home     String? @db.NVarChar(200)
  road        String? @db.NVarChar(200)
  kaom        String? @db.NVarChar(200)
  amper       String? @db.NVarChar(200)
  janwat      String? @db.NVarChar(200)
  postal      String? @db.NVarChar(20)
  tel_home    String? @db.NVarChar(20)
  tel_mo      String? @db.NVarChar(20)
  email_n     String? @db.NVarChar(200)
  id_school   String? @db.NVarChar(200)
  school_name String? @db.NVarChar(200)
  school_jan  String? @db.NVarChar(50)
  GPA         String? @db.NVarChar(50)
  date_app    String? @db.NVarChar(50)
  time_app    String? @db.NVarChar(50)
  date_app2   String? @db.NVarChar(50)
  time_app2   String? @db.NVarChar(50)
  id_ku       String? @db.NVarChar(50)
  Sname_f     String? @db.NVarChar(50)
  name_f      String? @db.NVarChar(200)
  surname_f   String? @db.NVarChar(200)
  id_cardf    String? @db.NVarChar(13)
  Sname_m     String? @db.NVarChar(20)
  name_m      String? @db.NVarChar(200)
  surname_m   String? @db.NVarChar(200)
  id_cardm    String? @db.NVarChar(50)
  Status_d    String? @db.NVarChar(10)
  major1      String? @db.NVarChar(200)
  major2      String? @db.NVarChar(200)
  user_ch     String? @db.NVarChar(10)
  date_ch     String? @db.NVarChar(20)
  ra          String? @db.NVarChar(5)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model dbo_appler_new60 {
  NNO           Int      @default(autoincrement())
  id_card       String?  @db.NVarChar(13)
  idpassport    String?  @db.NVarChar(20)
  Sname_th      String?  @db.NVarChar(50)
  name_th       String?  @db.NVarChar(200)
  surname_th    String?  @db.NVarChar(200)
  Sname_eng     String?  @db.NVarChar(20)
  name_eng      String?  @db.NVarChar(200)
  surname_eng   String?  @db.NVarChar(200)
  nation        String?  @db.NVarChar(20)
  race_ni       String?  @db.NVarChar(20)
  religion      String?  @db.NVarChar(20)
  domicile      String?  @db.NVarChar(20)
  age_s         String?  @db.NVarChar(10)
  date_both     String?  @db.NVarChar(20)
  d_both        String?  @db.NVarChar(2)
  m_both        String?  @db.NVarChar(15)
  y_both        String?  @db.NVarChar(4)
  num_home      String?  @db.NVarChar(200)
  mo_home       String?  @db.NVarChar(200)
  ch_home       String?  @db.NVarChar(200)
  road          String?  @db.NVarChar(200)
  kaom          String?  @db.NVarChar(200)
  amper         String?  @db.NVarChar(200)
  janwat        String?  @db.NVarChar(200)
  postal        String?  @db.NVarChar(20)
  tel_home      String?  @db.NVarChar(20)
  tel_mo        String?  @db.NVarChar(20)
  email_n       String?  @db.NVarChar(200)
  id_school     String?  @db.NVarChar(200)
  school_name   String?  @db.NVarChar(200)
  school_jan    String?  @db.NVarChar(50)
  GPA           String?  @db.NVarChar(5)
  GPA_M         String?  @db.NVarChar(5)
  date_app      String?  @db.NVarChar(50)
  time_app      String?  @db.NVarChar(50)
  date_app2     String?  @db.NVarChar(50)
  time_app2     String?  @db.NVarChar(50)
  id_ku         String?  @db.NVarChar(50)
  stdid         String?  @db.NVarChar(50)
  Sname_f       String?  @db.NVarChar(50)
  name_f        String?  @db.NVarChar(200)
  surname_f     String?  @db.NVarChar(200)
  id_cardf      String?  @db.NVarChar(13)
  Sname_m       String?  @db.NVarChar(20)
  name_m        String?  @db.NVarChar(200)
  surname_m     String?  @db.NVarChar(200)
  id_cardm      String?  @db.NVarChar(50)
  Status_d      String?  @db.NVarChar(10)
  major1        String?  @db.NVarChar(200)
  major2        String?  @db.NVarChar(200)
  code_mj1      String?  @db.NVarChar(50)
  code_mj2      String?  @db.NVarChar(50)
  s_result      String?  @db.NVarChar(10)
  s_number      String?  @db.NVarChar(2)
  result_score  Decimal? @db.Decimal(18, 2)
  score_major1  Decimal? @db.Decimal(18, 2)
  score_major2  Decimal? @db.Decimal(18, 2)
  user_ch       String?  @db.NVarChar(10)
  date_ch       String?  @db.NVarChar(20)
  ra            String?  @db.NVarChar(5)
  remark        String?  @db.NVarChar(100)
  persent_R     Decimal? @db.Decimal(18, 2)
  persent_S     Decimal? @db.Decimal(18, 2)
  persent_T     Decimal? @db.Decimal(18, 2)
  persent_M     Decimal? @db.Decimal(18, 2)
  persent_G     Decimal? @db.Decimal(18, 2)
  paper1        String?  @db.NVarChar(10)
  paper2        String?  @db.NVarChar(10)
  paper3        String?  @db.NVarChar(10)
  remark_y      String?  @db.NVarChar(100)
  file_download String?  @db.NVarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model dbo_appler55 {
  NNO         Int     @default(autoincrement())
  id_card     String? @db.NVarChar(13)
  idpassport  String? @db.NVarChar(20)
  Sname_th    String? @db.NVarChar(50)
  name_th     String? @db.NVarChar(200)
  surname_th  String? @db.NVarChar(200)
  Sname_eng   String? @db.NVarChar(20)
  name_eng    String? @db.NVarChar(200)
  surname_eng String? @db.NVarChar(200)
  nation      String? @db.NVarChar(20)
  race_ni     String? @db.NVarChar(20)
  religion    String? @db.NVarChar(20)
  domicile    String? @db.NVarChar(20)
  age_s       String? @db.NVarChar(10)
  date_both   String? @db.NVarChar(20)
  num_home    String? @db.NVarChar(200)
  mo_home     String? @db.NVarChar(200)
  ch_home     String? @db.NVarChar(200)
  road        String? @db.NVarChar(200)
  kaom        String? @db.NVarChar(200)
  amper       String? @db.NVarChar(200)
  janwat      String? @db.NVarChar(200)
  postal      String? @db.NVarChar(20)
  tel_home    String? @db.NVarChar(20)
  tel_mo      String? @db.NVarChar(20)
  email_n     String? @db.NVarChar(200)
  id_school   String? @db.NVarChar(200)
  school_name String? @db.NVarChar(200)
  school_jan  String? @db.NVarChar(50)
  GPA         String? @db.NVarChar(50)
  date_app    String? @db.NVarChar(50)
  time_app    String? @db.NVarChar(50)
  date_app2   String? @db.NVarChar(50)
  time_app2   String? @db.NVarChar(50)
  id_ku       String? @db.NVarChar(50)
  Sname_f     String? @db.NVarChar(50)
  name_f      String? @db.NVarChar(200)
  surname_f   String? @db.NVarChar(200)
  id_cardf    String? @db.NVarChar(13)
  Sname_m     String? @db.NVarChar(20)
  name_m      String? @db.NVarChar(200)
  surname_m   String? @db.NVarChar(200)
  id_cardm    String? @db.NVarChar(50)
  Status_d    String? @db.NVarChar(10)
  major1      String? @db.NVarChar(200)
  major2      String? @db.NVarChar(200)
  user_ch     String? @db.NVarChar(10)
  date_ch     String? @db.NVarChar(20)
  ra          String? @db.NVarChar(5)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model dbo_master_scoreedxx {
  YRSM          Int?
  CS_CODE       String?   @db.NVarChar(10)
  ID            String?   @db.NVarChar(10)
  SECTION       String?   @db.NVarChar(8)
  RG_TYPE       String?   @db.NVarChar(2)
  RG_STATUS     String?   @db.NVarChar(7)
  CR_HR         String?   @db.NVarChar(2)
  GRADE         String?   @db.NVarChar(2)
  scores        Float?    @db.Money
  CR_HR_t       Float?
  codeyr        String?   @db.NVarChar(12)
  SM_SEM        String?   @db.NVarChar(2)
  SM_YR         String?   @db.NVarChar(4)
  N_SEM         String?   @db.NVarChar(2)
  DATE_UPDATE   DateTime? @db.DateTime
  code_virtual  String?   @db.NVarChar(12)
  ip_update     String?   @db.NVarChar(30)
  REMARK        String?   @db.NVarChar(50)
  AVGS          String?   @db.NVarChar(20)
  TERM          String?   @db.NVarChar(2)
  TRANSFER_ENG  String?   @db.NVarChar(100)
  TRANSFER_THAI String?   @db.NVarChar(100)
  OLD_GRADE     String?   @db.NVarChar(2)

  @@ignore
}

model Demerit_n {
  No_demerit Int
  Stu_id     String    @db.VarChar(10)
  No_Act     String    @db.VarChar(2)
  Date_act   DateTime? @db.DateTime
  cause_name String?   @db.NVarChar(100)
  act_name   String?   @db.NVarChar(100)
  sm_yr      String?   @db.VarChar(4)
  Satuts     String?   @db.VarChar(15)

  @@id([No_demerit, Stu_id, No_Act], map: "PK_Demerit_n")
  @@index([Stu_id], map: "IX_Demerit_n")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model detail_cut {
  id       String?   @db.VarChar(10)
  num      Int?
  date_c   DateTime? @db.DateTime
  date_cut String?   @db.VarChar(20)
  remark   String?   @db.VarChar(200)
  demerit  String?   @db.VarChar(200)
  score    Int?
  tm       String?   @db.VarChar(15)
  sm_yr    String?   @db.VarChar(2)
  sm_sem   String?   @db.VarChar(2)

  @@ignore
}

model download_doc {
  nno             Int     @default(autoincrement())
  id_download     String  @id(map: "PK_download_doc") @db.VarChar(20)
  title_download  String? @db.VarChar(255)
  link_download   String? @db.VarChar(255)
  status_download String? @db.VarChar(2)
  c_level         String? @db.VarChar(10)
}

model epay_krungsri {
  MERCHANTNUMBER Decimal @db.Decimal(9, 0)
  ORDERNUMBER    Decimal @db.Decimal(9, 0)
  PAYMENTTYPE    String  @db.VarChar(11)
  AMOUNT         Decimal @db.Decimal(18, 0)
  CURRENCY       Decimal @db.Decimal(3, 0)
  AMOUNTTEXP10   Decimal @db.Decimal(8, 0)
  LANGUAGE       String  @db.VarChar(5)
  REF1           String  @db.VarChar(25)
  REF2           String? @db.VarChar(25)
  REF3           String? @db.VarChar(25)
  REF4           String? @db.VarChar(25)
  REF5           String? @db.VarChar(25)
  RESPCODE       String? @db.VarChar(2)
  AUTHCODE       String? @db.VarChar(6)
  STATUS         String? @db.VarChar(10)
  SM_SEM         String  @db.VarChar(2)
  SM_YR          String  @db.VarChar(5)
  STD_ID         String  @db.VarChar(10)

  @@id([REF1, SM_SEM, SM_YR, STD_ID], map: "PK_epay_krungsri")
}

model epay_scb {
  mid            Int
  terminal       Int
  command        String   @db.VarChar(10)
  ref_no         String   @db.VarChar(20)
  ref_date       DateTime @db.DateTime
  service_id     String   @default("99", map: "DF_epay_scb_service_id") @db.VarChar(2)
  cust_id        String   @db.VarChar(20)
  currency       String   @default("THB", map: "DF_epay_scb_currency") @db.VarChar(3)
  amount         Decimal  @default(0, map: "DF_epay_scb_amount") @db.Decimal(10, 2)
  trans_no       Decimal  @db.Decimal(20, 0)
  trans_date     DateTime @db.DateTime
  payment_status String   @db.VarChar(3)
  usrdat1        String?  @db.VarChar(20)
  sm_sem         String   @db.VarChar(2)
  sm_yr          String   @db.VarChar(5)
  std_id         String   @db.VarChar(10)

  @@id([payment_status, sm_sem, sm_yr, std_id], map: "PK_epay_scb")
}

model eval_advisor {
  nno           Int     @id(map: "PK_eval_advisor") @default(autoincrement())
  ques_n        Float?
  question      String? @db.VarChar(255)
  question_e    String? @db.VarChar(255)
  group_title   String? @db.VarChar(100)
  group_title_e String? @db.VarChar(100)
  type_eval     String? @db.VarChar(5)
  sm_yr         String? @db.VarChar(5)
  ans_5         String? @db.VarChar(50)
  ans_4         String? @db.VarChar(50)
  ans_3         String? @db.VarChar(50)
  ans_2         String? @db.VarChar(50)
  ans_1         String? @db.VarChar(50)
  avgg          String? @db.VarChar(50)
  grp           String? @db.VarChar(50)
}

model eval_self_assessment {
  nno         Int     @id(map: "PK_eval_self_assessment") @default(autoincrement())
  ques_n      Float?
  question    String? @db.VarChar(255)
  group_title String? @db.VarChar(100)
  type_eval   String? @db.VarChar(5)
  sm_yr       String? @db.VarChar(5)
  ans_5       String? @db.VarChar(50)
  ans_4       String? @db.VarChar(50)
  ans_3       String? @db.VarChar(50)
  ans_2       String? @db.VarChar(50)
  ans_1       String? @db.VarChar(50)
  avgg        String? @db.VarChar(50)
  grp         String? @db.VarChar(50)
}

model eval_structure {
  nno         Int     @id(map: "PK_eval_structure") @default(autoincrement())
  ans_n       Int?
  ques_n      Int?
  question    String? @db.VarChar(255)
  group_title String? @db.VarChar(100)
  type_eval   String? @db.VarChar(5)
  sm_yr       String? @db.VarChar(5)
  ans_5       String? @db.VarChar(50)
  ans_4       String? @db.VarChar(50)
  ans_3       String? @db.VarChar(50)
  ans_2       String? @db.VarChar(50)
  ans_1       String? @db.VarChar(50)
  grp         String? @db.VarChar(5)
}

model eval_used_system {
  nno         Int     @id(map: "PK_eval_used_system") @default(autoincrement())
  ques_n      Int?
  question    String? @db.VarChar(255)
  group_title String? @db.VarChar(100)
  type_eval   String? @db.VarChar(5)
  sm_yr       String? @db.VarChar(5)
  ans_5       String? @db.VarChar(50)
  ans_4       String? @db.VarChar(50)
  ans_3       String? @db.VarChar(50)
  ans_2       String? @db.VarChar(50)
  ans_1       String? @db.VarChar(50)
  grp         String? @db.VarChar(5)

  @@index([nno, ques_n], map: "IX_eval_used_system")
}

model evaluation {
  nno        Int     @id(map: "PK_evaluation") @default(autoincrement())
  question   String? @db.VarChar(255)
  question_e String? @db.VarChar(255)
  type_eval  String? @db.VarChar(5)
  sm_yr      String? @db.VarChar(5)
  N_SEM      String  @default("1", map: "DF_evaluation_N_SEM") @db.VarChar(2)
  ans_n      String? @db.VarChar(50)
  ans_5      String? @db.VarChar(50)
  ans_4      String? @db.VarChar(50)
  ans_3      String? @db.VarChar(50)
  ans_2      String? @db.VarChar(50)
  ans_1      String? @db.VarChar(50)
  avgg       String? @db.VarChar(50)
  grp        String? @db.VarChar(2)
  ans_2_1    String? @db.VarChar(50)
  ans_2_2    String? @db.VarChar(50)
  ans_2_3    String? @db.VarChar(50)
  ans_2_4    String? @db.VarChar(50)
  ans_2_5    String? @db.VarChar(50)
  avgg2      String? @db.VarChar(50)
  grp2       String? @db.VarChar(2)
}

model evaluation_result {
  nno           Int     @default(autoincrement())
  sm_sem        String  @db.VarChar(2)
  sm_yr         String  @db.VarChar(5)
  fac_id        String  @db.VarChar(10)
  fac_name      String? @db.VarChar(500)
  question      String? @db.VarChar(500)
  ans_n         Int     @default(0, map: "DF_evaluation_result_ans_n")
  ans_5_1       Int     @default(0, map: "DF_evaluation_result_ans_5_1")
  ans_4_1       Int     @default(0, map: "DF_evaluation_result_ans_4_1")
  ans_3_1       Int     @default(0, map: "DF_evaluation_result_ans_3_1")
  ans_2_1       Int     @default(0, map: "DF_evaluation_result_ans_2_1")
  ans_1_1       Int     @default(0, map: "DF_evaluation_result_ans_1_1")
  average_4_5_1 Decimal @default(0, map: "DF_evaluation_result_average_1") @db.Decimal(18, 2)
  ans_5_2       Int     @default(0, map: "DF_evaluation_result_ans_5_2")
  ans_4_2       Int     @default(0, map: "DF_evaluation_result_ans_4_2")
  ans_3_2       Int     @default(0, map: "DF_evaluation_result_ans_3_2")
  ans_2_2       Int     @default(0, map: "DF_evaluation_result_ans_2_2")
  ans_1_2       Int     @default(0, map: "DF_evaluation_result_ans_1_2")
  average_4_5_2 Decimal @default(0, map: "DF_evaluation_result_average_2") @db.Decimal(18, 2)

  @@id([sm_sem, sm_yr, fac_id, ans_n], map: "PK_evaluation_result_1")
}

model evaluation_result_sum {
  nno                 Int      @default(autoincrement())
  sm_sem              String   @db.VarChar(2)
  sm_yr               String   @db.VarChar(5)
  fac_id              String   @db.VarChar(10)
  fac_name            String?  @db.VarChar(500)
  n_cs_reg            Int?     @default(0, map: "DF_Table_1_n_reg1")
  n_cs_eval1          Int?     @default(0, map: "DF_Table_1_n_cs_reg1")
  persent_cs_eval1    Decimal? @default(0, map: "DF_Table_1_eval11_1") @db.Decimal(18, 2)
  n_reg_unique        Int?     @default(0, map: "DF_evaluation_result_sum_n_reg_unique")
  n_reg               Int?     @default(0, map: "DF_Table_1_ans_5_1")
  n_eval1_unique      Int?     @default(0, map: "DF_evaluation_result_sum_n_eval11")
  n_eval1             Int?     @default(0, map: "DF_Table_1_ans_4_1")
  persent_n_eval1     Decimal? @default(0, map: "DF_Table_1_persent_cs1") @db.Decimal(18, 2)
  n_reg_tea           Int?     @default(0, map: "DF_evaluation_result_sum_n_reg_tea")
  n_eval_tea1         Int?     @default(0, map: "DF_evaluation_result_sum_n_eval_tea1")
  persent_n_eval_tea1 Decimal? @default(0, map: "DF_Table_1_persent_cs1_1") @db.Decimal(18, 2)
  average_1           Decimal? @default(0, map: "DF_Table_1_average_21") @db.Decimal(18, 2)
  note1               String?  @db.VarChar(4000)
  n_eval2             Int?     @default(0, map: "DF_Table_1_ans_1_1")
  n_eval2_unique      Int?     @default(0, map: "DF_evaluation_result_sum_n_eval21")
  persent_n_eval2     Decimal? @default(0, map: "DF_Table_1_persent_cs1_2") @db.Decimal(18, 2)
  eval2               Decimal? @default(0, map: "DF_Table_1_average_1") @db.Decimal(18, 2)
  n_cs_eval2          Int?     @default(0, map: "DF_Table_1_n_cs_eval11")
  persent_cs_eval2    Decimal? @default(0, map: "DF_Table_1_persent_cs_eval11") @db.Decimal(18, 2)
  n_eval_tea2         Int?     @default(0, map: "DF_evaluation_result_sum_n_eval_tea2")
  persent_n_eval_tea2 Decimal? @default(0, map: "DF_Table_1_persent_n_eval_tea11") @db.Decimal(18, 2)
  average_2           Decimal? @default(0, map: "DF_evaluation_result_sum_average_2") @db.Decimal(18, 2)
  note2               String?  @db.VarChar(4000)

  @@id([sm_sem, sm_yr, fac_id], map: "PK_evaluation_result_sum")
}

model FACBORROW {
  std_id       String  @id(map: "PK_FACBORROW") @db.VarChar(10)
  sname        String? @db.VarChar(10)
  name         String? @db.VarChar(50)
  Major        String? @db.VarChar(5)
  status       String? @db.VarChar(50)
  gpa          Float?  @db.Money
  pay_money    Float   @default(0, map: "DF_FACBORROW_pay_money") @db.Money
  note         String? @db.VarChar(255)
  sm_sem       String? @db.VarChar(2)
  sm_yr        String? @db.VarChar(5)
  N_SEM        String  @default("1", map: "DF_FACBORROW_N_SEM") @db.VarChar(2)
  code_payment String? @db.VarChar(2)

  @@index([std_id], map: "IX_FACBORROW")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model FacBorrow_R {
  No_    Int?
  Std_id String? @db.NVarChar(50)

  @@ignore
}

model FACULTY {
  NNO            Int     @default(autoincrement())
  FAC_ID         String  @id(map: "PK_FACULTY") @db.VarChar(2)
  FACULTY        String? @db.VarChar(50)
  FAC_T          String? @db.VarChar(35)
  Dean           String? @db.VarChar(250)
  Deputy_Dean    String? @db.VarChar(250)
  Deputy_Dean_8S String? @db.VarChar(250)
  COUNT_PERSON   Int?
  COUNT_STD      Int?
  COUNT_COME_B   Int?
  COUNT_COME_M   Int?
  REMARK         String? @db.VarChar(50)
  ACTIVE         String? @db.VarChar(5)
}

model FEE {
  FEE_YR       String @db.VarChar(6)
  YEAR_STD     String @db.VarChar(2)
  SM_SEM       String @db.VarChar(2)
  STD_GRP      String @db.VarChar(4)
  STD_MAJ      String @db.VarChar(50)
  NEWREGIS     Float?
  SUBSCRIPT    Float?
  LIBRARY      Float?
  FOREIGN      Float?
  CRED_LEC     Float?
  CRED_LAB1    Float?
  CRED_LAB2    Float?
  PAY_CREDIT   Float?
  ACTIVITY     Float?
  INSURANCE    Float?
  CARD         Float?
  SAFETY       Float?
  DOCUMENT     Float?
  CARD_REG     Float?
  WONT_FAC     Float? @default(0, map: "DF_FEE_WONT_FAC")
  Assurance    Float? @default(0, map: "DF_FEE_Assurance")
  TRAINING     Float? @default(0, map: "DF_FEE_TRAINING")
  FINE         Float? @default(0, map: "DF_FEE_FINE")
  PAY_CONTRACT Float? @default(0, map: "DF_FEE_PAY_CONTRACT")
  status_keep  Float? @default(0, map: "DF_FEE_status_keep")
  PAY_ALL      Float? @default(0, map: "DF_FEE_PAY_ALL")

  @@id([FEE_YR, YEAR_STD, SM_SEM, STD_GRP, STD_MAJ], map: "PK_FEE", clustered: false)
  @@index([FEE_YR, SM_SEM, STD_GRP, STD_MAJ], map: "IX_FEE")
}

model fulltime {
  nno         Int     @default(autoincrement())
  cs_code     String  @db.VarChar(12)
  cyear       String  @db.VarChar(50)
  sm_sem      String  @db.VarChar(2)
  sm_yr       String  @db.VarChar(2)
  N_SEM       String  @default("1", map: "DF_fulltime_N_SEM") @db.VarChar(2)
  credit_tt   Int?
  major       String  @db.VarChar(5)
  count_reg   Int?
  sec_lec1    Int?
  sec_lab1    Int?
  course_name String? @db.VarChar(255)
  lc_credit   Int?
  lb_credit   Int?
  cs_own      String  @db.VarChar(5)
  cam_own     String? @db.VarChar(5)
  fac_own     String  @db.VarChar(50)
  depart_own  String? @db.VarChar(50)
  major_own   String? @db.VarChar(50)
  cam_std     String? @db.VarChar(5)
  fac_std     String? @db.VarChar(5)
  type_std    String? @db.VarChar(5)
  level_std   String? @db.VarChar(5)
  c_level     String  @db.VarChar(50)

  @@id([nno, cs_code, cyear, sm_sem, sm_yr, N_SEM, major, cs_own, fac_own, c_level], map: "PK_fulltime")
}

model grade_report_mka {
  no          Int     @default(autoincrement())
  id_level    Int     @default(0, map: "DF_grade_report_mka_id_level")
  cs_code     String  @db.VarChar(12)
  course_name String  @db.VarChar(250)
  tt_credit   Int
  sm_sem      String  @db.VarChar(2)
  sm_yr       String  @db.VarChar(5)
  major       String  @db.VarChar(7)
  c_level     String? @db.VarChar(10)
  q_receive   Int?    @default(0, map: "DF_grade_report_mka_q_receive")
  a           Int?    @default(0, map: "DF_grade_report_mka_a")
  bx          Int?    @default(0, map: "DF_grade_report_mka_bx")
  b           Int?    @default(0, map: "DF_grade_report_mka_b")
  cx          Int?    @default(0, map: "DF_Table_1_b1")
  c           Int?    @default(0, map: "DF_Table_1_b1_1")
  dx          Int?    @default(0, map: "DF_Table_1_b1_2")
  d           Int?    @default(0, map: "DF_Table_1_b1_3")
  f           Int?    @default(0, map: "DF_Table_1_b1_4")
  p           Int?    @default(0, map: "DF_Table_1_b1_5")
  np          Int?    @default(0, map: "DF_Table_1_b1_6")
  s           Int?    @default(0, map: "DF_Table_1_b1_7")
  i           Int?    @default(0, map: "DF_Table_1_b1_8")
  n           Int?    @default(0, map: "DF_Table_1_b1_9")
  w           Int?    @default(0, map: "DF_Table_1_b1_10")
  u           Int?    @default(0, map: "DF_grade_report_mka_w1")

  @@id([no, id_level, cs_code, course_name, tt_credit, sm_sem, sm_yr, major], map: "PK_grade_report_mka")
}

model Graduate_src {
  DEGREE_LEVEL     Float?
  YEAR             Float?
  SEMESTER         Float?
  CAMPUS_ID        String? @db.VarChar(10)
  FAC_ID           String? @db.VarChar(255)
  MAJOR_ID         String? @db.VarChar(255)
  MAJOR_NAME       String? @db.VarChar(255)
  DEGREE_NAME      String? @db.VarChar(255)
  DEGREE_NAME_E    String? @db.VarChar(255)
  ROUND            Float?
  STD_ID           String  @id(map: "PK_Graduate_src") @db.VarChar(10)
  STD_TITLE        String? @db.VarChar(12)
  STD_NAME         String? @db.VarChar(50)
  STD_MIDDLENAME   String? @db.VarChar(50)
  STD_SURNAME      String? @db.VarChar(50)
  STD_TITLE_E      String? @db.VarChar(10)
  STD_NAME_E       String? @db.VarChar(50)
  STD_MIDDLENAME_E String? @db.VarChar(50)
  STD_SURNAME_E    String? @db.VarChar(50)
  GPA              Float?
  HONOR_NAME       String? @db.VarChar(255)
  REMARK           String? @db.VarChar(255)
  STD_SEX          String? @db.NVarChar(255)
  NATIONALITY      String? @db.VarChar(255)
  APPROVE_DATE     String? @db.VarChar(255)
  EXTRA_STATUS     String? @db.VarChar(10)
  CURRI_TH         String? @db.VarChar(255)
  CURR_INTER_ID    String? @db.VarChar(255)
  PRJ_TH           String? @db.VarChar(255)
  TYPE_C           String? @db.VarChar(255)
  NOTE             String? @db.VarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model gramm {
  ID     Int       @default(autoincrement())
  Detail String?   @db.NVarChar(255)
  date   DateTime? @db.DateTime
  statue String?   @db.NVarChar(2)

  @@ignore
}

model group_proud_to_be_ku {
  ID              String  @db.VarChar(12)
  GENDER          String? @db.VarChar(50)
  SNAME           String? @db.VarChar(50)
  NAME            String? @db.VarChar(255)
  MAJOR           String  @db.VarChar(255)
  SM_YR           String  @db.VarChar(5)
  STATUS_N        String? @db.VarChar(5)
  DESP_T          String? @db.VarChar(255)
  FAC_T           String? @db.VarChar(255)
  GROUPP          String? @db.VarChar(50)
  CONFIRMM        String? @db.VarChar(50)
  LINK_LINE       String? @db.VarChar(255)
  DATE_CONFIRM    String? @db.VarChar(50)
  MBTI            String? @db.VarChar(255)
  DATE_MBTI       String? @db.VarChar(50)
  SIZE_SHIRT      String? @db.VarChar(5)
  SIZE_SHIRT_DATE String? @db.VarChar(20)
  STATUS          String? @db.VarChar(5)

  @@id([ID, MAJOR, SM_YR], map: "PK_group_proud_to_be_ku")
}

model group_proud_to_be_ku_room {
  group_proud  String  @id(map: "PK_group_proud_to_be_ku_room") @db.VarChar(50)
  round        String? @db.VarChar(50)
  number_group Int?
  room         String? @db.VarChar(150)
  Link_line    String? @db.VarChar(250)
}

model history_all {
  ID                String    @id(map: "PK_history_all") @db.VarChar(10)
  SNAME             String?   @db.VarChar(30)
  NAME              String?   @db.VarChar(50)
  BIRTHD            DateTime? @db.DateTime
  ENTR_F            String?   @db.VarChar(8)
  BIRTHP            String?   @db.VarChar(30)
  ADMISSD           DateTime? @db.DateTime
  SEMB              String?   @db.VarChar(10)
  SEMYEARB          String?   @db.VarChar(4)
  SEME              String?   @db.VarChar(10)
  SEMYEARE          String?   @db.VarChar(4)
  FINISHD           DateTime? @db.DateTime
  BIRTH_MONTH       String?   @db.VarChar(35)
  BIRTH_D_Y         String?   @db.VarChar(10)
  ASS_MONTH         String?   @db.VarChar(10)
  ASS_D_Y           String?   @db.VarChar(50)
  FINISH_MONTH      String?   @db.VarChar(30)
  FINISH_D_Y        String?   @db.VarChar(10)
  BIRTH_D           String?   @db.VarChar(2)
  BIRTH_M           String?   @db.VarChar(25)
  BIRTH_Y           String?   @db.VarChar(4)
  ASS_D             String?   @db.VarChar(2)
  ASS_M             String?   @db.VarChar(25)
  ASS_Y             String?   @db.VarChar(4)
  FIN_D             String?   @db.VarChar(2)
  FIN_M             String?   @db.VarChar(25)
  FIN_Y             String?   @db.VarChar(4)
  PICTURE           String?   @db.VarChar(50)
  PLACE_BIRTH       String?   @db.VarChar(30)
  Print_M           String?   @db.VarChar(50)
  Print_D           String?   @db.VarChar(50)
  Event             String?   @db.VarChar(30)
  Field_WORK        String?   @db.VarChar(30)
  Field_WORK_HOUR   Int       @default(0, map: "DF_history_all_Fiele_WORK_HOUR")
  approve           String?   @db.VarChar(50)
  approve_half      String?   @db.VarChar(50)
  Country           String?   @db.VarChar(50)
  ECountry          String?   @db.VarChar(50)
  TCountry          String?   @db.VarChar(50)
  province_c        String?   @db.VarChar(50)
  province_en       String?   @db.VarChar(50)
  end_sem_yr        String?   @db.VarChar(50)
  waiting           String?   @db.VarChar(50)
  client            String?   @db.VarChar(30)
  toeic_lc          Float?    @default(0, map: "DF_history_all_toeic_lc")
  toeic_rc          Float?    @default(0, map: "DF_history_all_toeic_rc")
  toeic_ts          Float?    @default(0, map: "DF_history_all_toeic_ts")
  toeic_date_test   String?   @db.VarChar(30)
  exite_listening   Float?    @default(0, map: "DF_history_all_exite_listening")
  exite_struc_write Float?    @default(0, map: "DF_history_all_exite_struc_write")
  exite_reading     Float?    @default(0, map: "DF_history_all_exite_reading")
  exite_total       Float?    @default(0, map: "DF_history_all_exite_total")
  exite_isuu_date   String?   @db.VarChar(30)
  exite_expiry_date String?   @db.VarChar(20)
  exite_cefr        String?   @db.VarChar(5)
  id_dean           String?   @db.VarChar(10)
  id_president      String?   @db.VarChar(10)
  id_chairman       String?   @db.VarChar(10)
  ket_listening     Float?    @default(0, map: "DF_history_all_exite_listening1")
  ket_struc_write   Float?    @default(0, map: "DF_history_all_exite_struc_write1")
  ket_reading       Float?    @default(0, map: "DF_history_all_exite_reading1")
  ket_total         Float?    @default(0, map: "DF_history_all_exite_total1")
  start_eng         String?   @db.VarChar(20)

  @@index([ID], map: "IX_history_all")
}

model INBATCH {
  nno         Int     @default(autoincrement())
  BOOKID      String  @db.VarChar(8)
  COM_NO      Int?
  ITEM_NO     Int?
  CAMPUS_ID   String? @db.VarChar(1)
  SM_YR       String  @db.VarChar(2)
  SM_SEM      String  @db.VarChar(1)
  N_SEM       String  @default("1", map: "DF_INBATCH_N_SEM") @db.VarChar(1)
  STATUS_SYS  String? @db.VarChar(2)
  EMTY_CREDIT Int?
  APPROVEID   String? @db.VarChar(5)
  END_REG     String? @db.VarChar(15)
  ID_LOGIN    String? @db.VarChar(50)
  SM_TEST     String? @db.VarChar(2)
  SM_EVAL     String? @db.VarChar(2)
  SM_EVAL_N   String? @default("1", map: "DF_INBATCH_SM_NUMBER") @db.VarChar(1)
  NOTE        String? @db.VarChar(100)
  TIME_START  Float?  @default(0, map: "DF_INBATCH_TIME_START")
  TIME_STOP   Float   @default(0, map: "DF_INBATCH_TIME_STOP")
  FACUTY      String? @db.VarChar(50)
  TIME_START1 Float?  @default(0, map: "DF_INBATCH_TIME_START1")
  TIME_STOP1  Float   @default(0, map: "DF_INBATCH_TIME_STOP1")
  FACUTY1     String? @db.VarChar(50)
  C_LEVEL     String? @db.VarChar(20)
  TYPE_CURI   String? @db.VarChar(100)

  @@id([BOOKID, SM_YR, SM_SEM, N_SEM], map: "PK_INBATCH")
  @@index([BOOKID, SM_SEM, SM_YR, N_SEM, APPROVEID, nno, SM_EVAL, SM_TEST, STATUS_SYS, ID_LOGIN], map: "IX_INBATCH")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model INBATCH_ROOM {
  BOOKID     String?   @db.NVarChar(8)
  ITEM_NO    Int?
  CAMPUS_ID  String?   @db.NVarChar(1)
  SM_YR      String?   @db.NVarChar(2)
  SM_SEM     String?   @db.NVarChar(1)
  STATUS_SYS String?   @db.NVarChar(2)
  APPROVEID  String?   @db.NText
  END_REG    DateTime? @db.DateTime

  @@ignore
}

model infor {
  nno         Int       @id(map: "PK_infor") @default(autoincrement())
  date_in     String?   @db.VarChar(20)
  date_out    String?   @db.VarChar(20)
  subject     String?   @db.VarChar(500)
  detail      String?   @db.VarChar(2000)
  Link_url    String?   @db.VarChar(255)
  file_link   String?   @db.VarChar(255)
  approve     String?   @db.VarChar(2)
  login_show  String?   @db.VarChar(2)
  from_name   String?   @db.VarChar(50)
  from_email  String?   @db.VarChar(30)
  ip          String?   @db.VarChar(30)
  type_n      String    @db.VarChar(2)
  readd       Int?      @default(0, map: "DF_infor_readd")
  popupp      String?   @default("N", map: "DF_infor_popupp") @db.VarChar(2)
  date_outx   DateTime? @db.DateTime
  date_inx    DateTime? @db.DateTime
  user_drop   String?   @db.VarChar(50)
  date_update DateTime? @default(now(), map: "DF_infor_date_update") @db.DateTime
  c_level     String?   @default("Bachelor", map: "DF_infor_c_level") @db.VarChar(20)

  @@index([nno, date_inx, date_outx, date_in, date_out, approve, type_n], map: "IX_infor")
}

model infot {
  nno        Int     @id(map: "PK_infor_lelation") @default(autoincrement())
  date_in    String? @db.VarChar(20)
  date_out   String? @db.VarChar(20)
  subject    String? @db.VarChar(255)
  detail     String?
  Link_url   String? @db.VarChar(100)
  file_link  String? @db.VarChar(200)
  approve    String? @db.VarChar(2)
  from_name  String? @db.VarChar(50)
  from_email String? @db.VarChar(30)
  ip         String? @db.VarChar(30)
  type_n     String? @db.VarChar(2)
}

model inquiry_request {
  mid            Int?
  terminal       Int?
  command        String?   @default("DRDBINQ", map: "DF_inquiry_request_command") @db.VarChar(10)
  ref_no         String    @db.VarChar(20)
  ref_date       DateTime? @db.DateTime
  service_id     String?   @db.VarChar(2)
  cust_id        String    @db.VarChar(20)
  cur_abbr       String?   @db.VarChar(3)
  amount         Int       @default(0, map: "DF_inquiry_request_amount")
  sm_sem         String    @db.VarChar(2)
  sm_yr          String    @db.VarChar(5)
  payment_status String?   @db.VarChar(3)
  acc_no         String?   @db.VarChar(10)
  cust_lname     String?   @db.VarChar(80)
  cust_fname     String?   @db.VarChar(80)
  cust_email     String?   @db.VarChar(100)
  cust_country   String?   @default("TH", map: "DF_inquiry_request_cust_country") @db.VarChar(2)
  cust_address1  String?   @db.VarChar(80)
  cust_city      String?   @db.VarChar(80)
  cust_province  String?   @db.VarChar(60)
  cust_zip       String?   @db.VarChar(10)

  @@id([cust_id, sm_sem, sm_yr], map: "PK_inquiry_request")
}

model inquiry_request_response {
  mid            Int?
  terminal       Int?
  command        String?   @db.VarChar(10)
  ref_no         String    @db.VarChar(20)
  cust_id        String    @db.VarChar(20)
  trans_no       Int?
  trans_date     DateTime? @db.DateTime
  service_id     String?   @db.VarChar(2)
  payment_status String?   @db.VarChar(3)
  amount         Int       @default(0, map: "DF_inquiry_request_response_amount")
  sm_sem         String    @db.VarChar(2)
  sm_yr          String    @db.VarChar(5)
  acc_no         String?   @db.VarChar(10)

  @@id([cust_id, sm_sem, sm_yr], map: "PK_inquiry_request_response")
}

model isea_coursenew {
  run_no         Int     @default(autoincrement())
  CS_CODE        String  @db.VarChar(20)
  SUBJECT_CODE   String  @db.VarChar(20)
  ISEA           String? @db.VarChar(50)
  SM_SEM         String  @db.VarChar(1)
  SM_YR          String  @db.VarChar(2)
  CS_NUMBER      String? @db.VarChar(5)
  COURSE_NAM     String? @db.VarChar(255)
  TH_NAME        String? @db.VarChar(255)
  EN_NAME        String? @db.VarChar(255)
  B_CRE_LEC      Float?
  B_CRE_LAB      Float?
  TT_CREDIT      Float?
  DEP_CODE       String? @db.VarChar(10)
  CAM_OWN        String? @db.VarChar(3)
  FAC_OWN        String? @db.VarChar(50)
  DEPART_OWN     String? @db.VarChar(50)
  MAJOR_OWN      String? @db.VarChar(60)
  LEVEL_PLAN     String? @db.VarChar(50)
  CS_OWN         String? @db.VarChar(3)
  FAC_CODE       String? @db.VarChar(10)
  LAB_TYPE       String? @db.VarChar(1)
  CYEAR          String  @id(map: "PK_coursenew_isea_1") @db.VarChar(12)
  YEAR           String? @db.VarChar(5)
  p_id           Int?
  eval           Float?  @default(0, map: "DF_coursenew_isea_eval")
  count_eval     Int?    @default(0, map: "DF_coursenew_isea_count_eval")
  persent        Float?  @default(0, map: "DF_coursenew_isea_persent")
  cs_eval        String? @db.VarChar(2)
  PRE            String? @db.VarChar(100)
  GROUP_SUBJECT  String? @db.VarChar(250)
  PRE_SHOW       String? @db.VarChar(100)
  DETAIL_SUBJECT String? @db.VarChar(5000)
  DETAIL_CURDIT  String? @db.VarChar(10)
  status_course  String? @default("Y", map: "DF_coursenew_isea_status_course") @db.VarChar(2)
  GROP_SUBJECT   String? @db.VarChar(250)
  PLAN_YR        String? @db.VarChar(20)
  MAJOR_PLAN     String? @db.VarChar(20)
  C_LEVEL        String? @db.VarChar(15)
  GROUP_GENED    String? @db.VarChar(250)
}

model isea_CS_SECT {
  RUN_NO               Int       @default(autoincrement())
  CS_CODE              String    @db.VarChar(12)
  PLAN_YR              String?   @db.VarChar(50)
  CS_NUMBER            String?   @db.VarChar(5)
  SM_SEM               String    @db.VarChar(2)
  SM_YR                String    @db.VarChar(4)
  N_SEM                String    @default("1", map: "DF_isea_CS_SECT_N_SEM") @db.VarChar(2)
  STD_GRP              String    @db.VarChar(3)
  STD_GRP_FIX          String    @db.VarChar(3)
  C_LEVEL              String    @db.VarChar(20)
  Q_TYPE               String    @default("0", map: "DF_isea_CS_SECT_Q_TYPE") @db.VarChar(3)
  RG_TYPE              String    @default("C", map: "DF_isea_CS_SECT_RG_TYPE") @db.VarChar(2)
  SEC_LEC1             Float     @default(0, map: "DF_isea_CS_SECT_SEC_LEC1")
  LEC_CREDIT           Float     @default(0, map: "DF_isea_CS_SECT_LEC_CREDIT")
  ID_GROUP             String?   @db.VarChar(100)
  CS_GROUP             String?   @db.VarChar(100)
  LEC_DAY              String    @db.VarChar(100)
  STD_MAJ              String?   @db.VarChar(500)
  FIX_MAJ              String?   @db.VarChar(500)
  Q_QUOTA              Float     @default(0, map: "DF_isea_CS_SECT_Q_QUOTA")
  SEC_LAB1             Float     @default(0, map: "DF_isea_CS_SECT_SEC_LAB1")
  LAB_CREDIT           Float     @default(0, map: "DF_isea_CS_SECT_LAB_CREDIT")
  TT_CREDIT            Float     @default(0, map: "DF_isea_CS_SECT_TT_CREDIT")
  LEC_HOUR             Float     @default(0, map: "DF_isea_CS_SECT_LEC_HOUR")
  LAB_HOUR             Float     @default(0, map: "DF_isea_CS_SECT_LAB_HOUR")
  LAB_DAY              String    @db.VarChar(100)
  LAB_TYPE             String    @db.VarChar(9)
  Q_USED               Float     @default(0, map: "DF_isea_CS_SECT_Q_USED")
  Q_Drop               Float?    @default(0, map: "DF_isea_CS_SECT_Q_Drop")
  Q_DropW              Float?    @default(0, map: "DF_isea_CS_SECT_Q_DropW")
  Q_Receive            Float?    @default(0, map: "DF_isea_CS_SECT_Q_Receive")
  Q_KU5                Int?      @default(0, map: "DF_isea_CS_SECT_Q_KU5")
  Q_NOTM               Int?      @default(0, map: "DF_isea_CS_SECT_Q_NOTM")
  CS_OWN               String    @default("-", map: "DF_isea_CS_SECT_CS_OWN") @db.VarChar(9)
  CS_OWN_ETC           String    @default("-", map: "DF_isea_CS_SECT_CS_OWN_ETC") @db.VarChar(9)
  TEACHER              String    @default("-", map: "DF_isea_CS_SECT_TEACHER") @db.VarChar(250)
  IDTEA                String    @default("-", map: "DF_isea_CS_SECT_IDTEA") @db.VarChar(30)
  Acc_nontri           String?   @db.VarChar(50)
  officer_code         String?   @db.VarChar(10)
  TEACHER_ETC          String?   @db.VarChar(10)
  PRESHOW              String?   @db.VarChar(100)
  LEC_ROOM             String    @default("-", map: "DF_isea_CS_SECT_LEC_ROOM") @db.VarChar(50)
  LAB_ROOM             String    @default("-", map: "DF_isea_CS_SECT_LAB_ROOM") @db.VarChar(50)
  SEMESTER             String?   @db.VarChar(2)
  PRE                  String    @default("-", map: "DF_isea_CS_SECT_PRE") @db.VarChar(100)
  PRE1                 String?   @db.VarChar(50)
  date_key             DateTime? @db.DateTime
  send                 String    @default("N", map: "DF_isea_CS_SECT_send") @db.VarChar(2)
  send_grade           String    @default("N", map: "DF_isea_CS_SECT_send_grade") @db.VarChar(5)
  date_send            DateTime? @db.DateTime
  transfer             String    @default("N", map: "DF_isea_CS_SECT_transfer") @db.VarChar(2)
  date_tran            DateTime? @db.DateTime
  user_transfer        String?   @db.VarChar(20)
  PAGE_COUNT           Int?
  PAGE_COUNTN          Int?
  T_REG                Int?      @default(0, map: "DF_isea_CS_SECT_T_REG")
  R_REG                Int?      @default(0, map: "DF_isea_CS_SECT_R_REG")
  S_REG                Int?      @default(0, map: "DF_isea_CS_SECT_S_REG")
  M_REG                Int?      @default(0, map: "DF_isea_CS_SECT_M_REG")
  G_REG                Int?      @default(0, map: "DF_isea_CS_SECT_G_REG")
  T_POK_REG            Int?      @default(0, map: "DF_isea_CS_SECT_T_POK_REG")
  T_PA_REG             Int?      @default(0, map: "DF_isea_CS_SECT_T_PA_REG")
  R_PA_REG             Int?      @default(0, map: "DF_isea_CS_SECT_R_PA_REG")
  R_POK_REG            Int?      @default(0, map: "DF_isea_CS_SECT_R_POK_REG")
  M_PA_REG             Int?      @default(0, map: "DF_isea_CS_SECT_M_PA_REG")
  M_POK_REG            Int?      @default(0, map: "DF_isea_CS_SECT_M_POK_REG")
  S_PA_REG             Int?      @default(0, map: "DF_isea_CS_SECT_S_PA_REG")
  S_POK_REG            Int?      @default(0, map: "DF_isea_CS_SECT_S_POK_REG")
  G_PA_REG             Int?      @default(0, map: "DF_isea_CS_SECT_G_PA_REG")
  G_POK_REG            Int?      @default(0, map: "DF_isea_CS_SECT_G_POK_REG")
  pok                  Int?
  spacial              Int?
  Selec_d              String    @default("N", map: "DF_isea_CS_SECT_Selec_d") @db.VarChar(1)
  comment              String?   @db.VarChar(100)
  id_key               String?   @db.VarChar(30)
  supervisor           String?   @db.VarChar(100)
  print_grd            String    @default("N", map: "DF_isea_CS_SECT_print_grd") @db.VarChar(2)
  q_d_F                Int?      @default(0, map: "DF_isea_CS_SECT_q_d_F")
  test_date            String?   @db.VarChar(30)
  test_croom           Int?      @default(0, map: "DF_isea_CS_SECT_test_croom")
  test_room            String?   @db.VarChar(50)
  test_time            String?   @db.VarChar(30)
  approve_eval         String?   @db.VarChar(2)
  select_grade         String?   @default("N", map: "DF_isea_CS_SECT_select_grade") @db.VarChar(2)
  select_s             String?   @default("N", map: "DF_isea_CS_SECT_select_s") @db.VarChar(2)
  eval                 Float?    @default(0, map: "DF_isea_CS_SECT_eval")
  count_eval           Int?      @default(0, map: "DF_isea_CS_SECT_count_eval")
  date_update          DateTime? @db.DateTime
  user_lastupdate      String?   @db.VarChar(50)
  user_keygrade        String?   @db.VarChar(10)
  user_upgrade         String?   @db.VarChar(10)
  cs_status            String?   @default("Y", map: "DF_isea_CS_SECT_cs_status") @db.VarChar(5)
  remark               String?   @db.VarChar(100)
  date_ku7             DateTime? @db.DateTime
  gencode1             String?   @db.VarChar(100)
  gencode2             String?   @db.VarChar(100)
  user_upfile          String?   @db.VarChar(10)
  importfile           String?   @db.VarChar(200)
  importdate           DateTime? @db.DateTime
  user_importfile      String?   @db.VarChar(10)
  upfile               String?   @db.VarChar(200)
  upfiledate           DateTime? @db.DateTime
  ipupfile             String?   @db.VarChar(20)
  date_test_m          String?   @db.VarChar(100)
  date_test_m_period   String?   @db.VarChar(100)
  test_f_y_n           String?   @db.VarChar(2)
  date_test_f          String?   @db.VarChar(100)
  date_test_f_period   String?   @db.VarChar(100)
  GRADE_A              Int       @default(0, map: "DF_isea_CS_SECT_GRADE_A")
  GRADE_BP             Int       @default(0, map: "DF_isea_CS_SECT_GRADE_BP")
  GRADE_B              Int       @default(0, map: "DF_isea_CS_SECT_GRADE_B")
  GRADE_CP             Int       @default(0, map: "DF_isea_CS_SECT_GRADE_CP")
  GRADE_C              Int       @default(0, map: "DF_isea_CS_SECT_GRADE_C")
  GRADE_DP             Int       @default(0, map: "DF_isea_CS_SECT_GRADE_DP")
  GRADE_D              Int       @default(0, map: "DF_isea_CS_SECT_GRADE_D")
  GRADE_P              Int       @default(0, map: "DF_isea_CS_SECT_GRADE_P")
  GRADE_NP             Int       @default(0, map: "DF_isea_CS_SECT_GRADE_NP")
  GRADE_F              Int       @default(0, map: "DF_isea_CS_SECT_GRADE_F")
  GRADE_I              Int       @default(0, map: "DF_isea_CS_SECT_GRADE_I")
  GRADE_S              Int       @default(0, map: "DF_isea_CS_SECT_GRADE_S")
  GRADE_N              Int       @default(0, map: "DF_isea_CS_SECT_GRADE_N")
  GRADE_W              Int       @default(0, map: "DF_isea_CS_SECT_GRADE_W")
  GRADE_U              Int       @default(0, map: "DF_isea_CS_SECT_GRADE_U")
  SCORE_A_MAX          Int       @default(0, map: "DF_isea_CS_SECT_SCORE_A_MAX")
  SCORE_A_MIN          Int       @default(0, map: "DF_isea_CS_SECT_SCORE_A_MIN")
  SCORE_BP_MAX         Int       @default(0, map: "DF_isea_CS_SECT_SCORE_BP_MAX")
  SCORE_BP_MIN         Int       @default(0, map: "DF_isea_CS_SECT_SCORE_BP_MIN")
  SCORE_B_MAX          Int       @default(0, map: "DF_isea_CS_SECT_SCORE_B_MAX")
  SCORE_B_MIN          Int       @default(0, map: "DF_isea_CS_SECT_SCORE_B_MIN")
  SCORE_CP_MAX         Int       @default(0, map: "DF_isea_CS_SECT_SCORE_CP_MAX")
  SCORE_CP_MIN         Int       @default(0, map: "DF_isea_CS_SECT_SCORE_CP_MIN")
  SCORE_C_MAX          Int       @default(0, map: "DF_isea_CS_SECT_SCORE_C_MAX")
  SCORE_C_MIN          Int       @default(0, map: "DF_isea_CS_SECT_SCORE_C_MIN")
  SCORE_DP_MAX         Int       @default(0, map: "DF_isea_CS_SECT_SCORE_DP_MAX")
  SCORE_DP_MIN         Int       @default(0, map: "DF_isea_CS_SECT_SCORE_DP_MIN")
  SCORE_D_MAX          Int       @default(0, map: "DF_isea_CS_SECT_SCORE_D_MAX")
  SCORE_D_MIN          Int       @default(0, map: "DF_isea_CS_SECT_SCORE_D_MIN")
  SCORE_F_MAX          Int       @default(0, map: "DF_isea_CS_SECT_SCORE_F_MAX")
  SCORE_F_MIN          Int       @default(0, map: "DF_isea_CS_SECT_SCORE_F_MIN")
  SCORE_S_MAX          Int       @default(0, map: "DF_isea_CS_SECT_SCORE_S_MAX")
  SCORE_S_MIN          Int       @default(0, map: "DF_isea_CS_SECT_SCORE_S_MIN")
  SCORE_U_MAX          Int       @default(0, map: "DF_isea_CS_SECT_SCORE_U_MAX")
  SCORE_U_MIN          Int       @default(0, map: "DF_isea_CS_SECT_SCORE_U_MIN")
  CHECK_EVAL           String?   @db.VarChar(2)
  COURSE_NAME1         String?   @db.VarChar(500)
  sign_ku5_7           String?   @db.VarChar(250)
  SHOW                 String?   @default("N", map: "DF_isea_CS_SECT_SHOW") @db.VarChar(2)
  SET_TABLE            String?   @db.VarChar(2)
  ku5_id               String?   @db.VarChar(10)
  barcode_pdf          String?   @db.VarChar(30)
  upfile_pdf           String?   @db.VarChar(200)
  server_pdf           String?   @db.VarChar(50)
  upfiledate_pdf       DateTime? @db.DateTime
  ipupfile_pdf         String?   @db.VarChar(20)
  class_online         String?   @db.VarChar(250)
  approve              String?   @db.VarChar(5)
  sign_approve         String?   @db.VarChar(250)
  sign_approve_date    DateTime? @db.DateTime
  sign_approve_ip      String?   @db.VarChar(20)
  sign_approve_name    String?   @db.VarChar(100)
  sign_approve_comment String?   @db.VarChar(250)
  isea                 String?   @db.VarChar(50)
  LEC_DAY1             String?   @db.VarChar(100)
  LAB_DAY1             String?   @db.VarChar(100)
  LEC_ROOM1            String?   @default("-", map: "DF_isea_CS_SECT_LEC_ROOM1") @db.VarChar(50)
  LAB_ROOM1            String?   @default("-", map: "DF_isea_CS_SECT_LAB_ROOM1") @db.VarChar(50)

  @@id([CS_CODE, SM_SEM, SM_YR, N_SEM, STD_GRP, SEC_LEC1, SEC_LAB1], map: "PK_isea_CS_SECT")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ke_money {
  stu_id String? @db.VarChar(50)
  sm_yr  String? @db.VarChar(50)
  sm_sem String? @db.VarChar(50)
  title  String? @db.VarChar(200)
  money  String? @db.VarChar(50)
  date_R String? @db.VarChar(50)
  date_T String? @db.VarChar(50)
  date_P String? @db.VarChar(50)

  @@ignore
}

model ku_srirachar_run {
  no                 String  @db.VarChar(255)
  id                 String? @db.VarChar(50)
  yr                 String  @db.VarChar(50)
  name               String? @db.VarChar(100)
  lname              String? @db.VarChar(100)
  email              String? @db.VarChar(100)
  tel                String? @db.VarChar(50)
  type_person        String? @db.VarChar(100)
  place_run          String? @db.VarChar(100)
  size_shirt         String? @db.VarChar(50)
  send_shirt         String? @db.VarChar(100)
  disease            String? @db.VarChar(255)
  status_run         String? @db.VarChar(50)
  confirm_run        String? @db.VarChar(50)
  date_confirm       String? @db.VarChar(50)
  approve            String? @db.VarChar(50)
  date_approve       String? @db.VarChar(50)
  recrive_shirt      String? @db.VarChar(5)
  recrive_shirt_date String? @db.VarChar(15)

  @@id([no, yr], map: "PK_ku_srirachar_run")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model kumrong {
  tm   String?   @db.VarChar(20)
  id   String?   @db.VarChar(8)
  date DateTime? @db.DateTime

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model list_com1 {
  id   String  @db.VarChar(5)
  desp String? @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model list_com2 {
  id   String  @db.VarChar(5)
  desp String? @db.VarChar(50)

  @@ignore
}

model loan {
  id               String  @id(map: "PK_loan") @db.VarChar(10)
  yborrow          String? @db.VarChar(2)
  timeb            String? @db.VarChar(2)
  borrowid         String? @db.VarChar(7)
  date_b           String? @db.VarChar(8)
  date_ap          String? @db.VarChar(2)
  ap_month         String? @db.VarChar(20)
  ap_year          String? @db.VarChar(4)
  add_con          String? @db.VarChar(255)
  add_con1         String? @db.VarChar(255)
  id_card          String? @db.VarChar(13)
  date_idc         String? @db.VarChar(2)
  idc_m            String? @db.VarChar(20)
  idc_y            String? @db.VarChar(4)
  place_idc        String? @db.VarChar(50)
  b_y              String? @db.VarChar(1)
  secur_s          String? @db.VarChar(10)
  secur_name       String? @db.VarChar(70)
  secur_idc        String? @db.VarChar(13)
  secur_idt        String? @db.VarChar(13)
  idt_s_fac        String? @db.VarChar(1)
  add_secur        String? @db.VarChar(255)
  add_s_con        String? @db.VarChar(255)
  add_province_con String? @db.VarChar(50)
  incom_sec        Float?  @db.Money
  couple_s         String? @db.VarChar(10)
  couple_name      String? @db.VarChar(70)
  instead_s        String? @db.VarChar(10)
  instead_name     String? @db.VarChar(70)
  year_instead     Int?
  instead_idc      String? @db.VarChar(13)
  ins_fac          String? @db.VarChar(1)
  ins_idt          String? @db.VarChar(13)
  add_ins          String? @db.VarChar(255)
  incom_ins        Float?  @db.Money
  relate           String? @db.VarChar(100)
  BIRTH_D          String? @db.VarChar(2)
  BIRTH_M          String? @db.VarChar(25)
  BIRTH_Y          String? @db.VarChar(4)
}

model Madjom {
  name   String? @db.VarChar(50)
  major  String? @db.VarChar(4)
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // เลขบัตรประชาชน String? @map("เลขบัตรประชาชน") @db.VarChar(13)
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // ปีที่รับเข้า String? @map("ปีที่รับเข้า") @db.VarChar(4)
  amount Float?  @db.Money
  No     Int     @id(map: "PK_Madjom")
}

model MAJOR {
  NNO           Int     @default(autoincrement())
  MID           String  @id(map: "PK_MAJOR") @db.VarChar(5)
  CUR_ID        String? @db.VarChar(15)
  PLAN_YR       String? @db.VarChar(5)
  DESP_T        String? @db.VarChar(255)
  DESP_T1       String? @db.VarChar(255)
  DESP_T_ETC    String? @db.VarChar(255)
  DESP_E        String? @db.VarChar(255)
  DESP_ETC      String? @db.VarChar(255)
  FACULTY       String? @db.VarChar(255)
  CURR          String? @db.VarChar(10)
  CURR_DEGREE   String  @db.VarChar(255)
  CURRTH        String? @db.VarChar(10)
  CURR_DEGREETH String  @db.VarChar(255)
  FAC_T         String? @db.VarChar(255)
  DEGREE        String? @db.VarChar(255)
  DEGREE_DESP   String  @db.VarChar(255)
  DEGREE_eng    String? @db.VarChar(255)
  degreeth      String? @db.VarChar(255)
  DEGREE_DESPTH String  @db.VarChar(255)
  degreeth_haft String? @db.VarChar(255)
  FAC_ID        String? @db.VarChar(2)
  desp          String? @db.VarChar(255)
  std_grp       String? @db.VarChar(10)
  count_eval    Int?    @default(0, map: "DF_MAJOR_count_eval")
  eval          Float?  @default(0, map: "DF_MAJOR_eval")
  showw         String? @db.VarChar(2)
  C_LEVEL       String? @db.VarChar(50)
  eval2         Float?  @default(0, map: "DF_MAJOR_eval2")
  CAMPUS_E      String? @db.VarChar(30)
  CAMPUS_T      String? @db.VarChar(30)
  semeter       String? @db.VarChar(2)
  FAC_MASTER_T  String? @db.VarChar(100)
  FAC_MASTER_E  String? @db.VarChar(100)
  ACTIVEX       String? @db.VarChar(2)
  USER_ACTIVE   String? @db.VarChar(10)
  C_LEVEL_TH    String? @db.VarChar(50)
  LINK_FEES     String? @db.VarChar(100)
  TYPE_CURI     String? @db.VarChar(100)

  @@index([MID, C_LEVEL, FAC_ID, showw, NNO, std_grp, semeter], map: "IX_MAJOR")
}

model MAJOR_ALL {
  NNO          Int
  MID          String  @db.VarChar(5)
  PLAN_YR      String  @db.VarChar(7)
  DESP_T       String? @db.VarChar(100)
  DESP_E       String? @db.VarChar(100)
  FACULTY      String? @db.VarChar(50)
  CURR         String? @db.VarChar(255)
  CURRTH       String? @db.VarChar(255)
  CURRTH_ANU   String? @db.VarChar(255)
  FAC_T        String? @db.VarChar(50)
  DEGREE       String? @db.VarChar(100)
  DEGREE_eng   String? @db.VarChar(100)
  degreeth     String? @db.VarChar(100)
  FAC_ID       String? @db.VarChar(2)
  desp         String? @db.VarChar(100)
  std_grp      String? @db.VarChar(10)
  showw        String? @db.VarChar(2)
  C_LEVEL      String? @db.VarChar(50)
  C_LEVEL_THAI String? @db.VarChar(50)
  SEMETER      Int?

  @@id([MID, PLAN_YR], map: "PK_MAJOR_ALL")
  @@index([NNO, C_LEVEL, MID, std_grp, FAC_ID, PLAN_YR], map: "IX_MAJOR_ALL")
}

model MAJOR1 {
  MID          String  @id(map: "PK_MAJOR1") @db.VarChar(5)
  FAC          String? @db.VarChar(2)
  DESP_T       String? @db.VarChar(80)
  DESP_E       String? @db.VarChar(80)
  FACULTY      String? @db.VarChar(50)
  CURR         String? @db.VarChar(10)
  CURR_DEGREE  String? @db.VarChar(255)
  FAC_T        String? @db.VarChar(35)
  STD_GRP      String? @db.VarChar(5)
  STATUS_MID   String? @db.VarChar(20)
  count_e      Int?
  count_q      Int?
  count_qo     Int?
  count_qp     Int?
  yr           String? @db.VarChar(4)
  C_LEVEL      String? @db.VarChar(50)
  semeter      String? @db.VarChar(2)
  Curr_F       String? @db.VarChar(100)
  Curr_F_TH    String? @db.VarChar(100)
  EXTRA_STATUS String? @db.NChar(10)
  TYPE_CURI    String? @db.VarChar(100)

  @@index([MID, C_LEVEL, STD_GRP, semeter], map: "IX_MAJOR1")
}

model Master_Activex_major {
  NNO          Int     @default(autoincrement())
  MID          String  @db.VarChar(5)
  DESP_T       String? @db.VarChar(60)
  DESP_T1      String? @db.VarChar(60)
  DESP_T_ETC   String? @db.VarChar(60)
  DESP_E       String? @db.VarChar(60)
  DESP_ETC     String? @db.VarChar(60)
  FACULTY      String? @db.VarChar(50)
  CURR         String? @db.VarChar(10)
  CURRTH       String? @db.VarChar(10)
  FAC_T        String? @db.VarChar(50)
  DEGREE       String? @db.VarChar(75)
  DEGREE_eng   String? @db.VarChar(75)
  degreeth     String? @db.VarChar(75)
  FAC_ID       String? @db.VarChar(2)
  desp         String? @db.VarChar(50)
  std_grp      String? @db.VarChar(10)
  count_eval   Int?    @default(0, map: "DF_Activex_major_count_eval")
  eval         Float?  @default(0, map: "DF_Activex_major_eval")
  showw        String? @db.VarChar(2)
  C_LEVEL      String? @db.VarChar(50)
  eval2        Float?  @default(0, map: "DF_Activex_major_eval2")
  CAMPUS_E     String? @db.VarChar(30)
  CAMPUS_T     String? @db.VarChar(30)
  semeter      String? @db.VarChar(2)
  FAC_MASTER_T String? @db.VarChar(100)
  FAC_MASTER_E String? @db.VarChar(100)
  ACTIVEX      String? @db.VarChar(2)
  USER_ACTIVE  String  @db.VarChar(10)

  @@id([MID, USER_ACTIVE], map: "PK_Activex_major")
}

model Master_course {
  run_no         Int     @default(autoincrement())
  CS_CODE        String  @db.VarChar(10)
  SUBJECT_CODE   String  @db.VarChar(20)
  COURSE_NAM     String? @db.VarChar(255)
  TH_NAME        String? @db.VarChar(255)
  EN_NAME        String? @db.VarChar(255)
  B_CRE_LEC      Float?
  B_CRE_LAB      Float?
  TT_CREDIT      Float?
  DEP_CODE       String? @db.VarChar(12)
  CAM_OWN        String? @db.VarChar(3)
  FAC_OWN        String? @db.VarChar(50)
  DEPART_OWN     String? @db.VarChar(50)
  MAJOR_OWN      String? @db.VarChar(60)
  LEVEL_PLAN     String? @db.VarChar(50)
  CS_OWN         String? @db.VarChar(3)
  FAC_CODE       String? @db.VarChar(10)
  LAB_TYPE       String? @db.VarChar(2)
  CYEAR          String  @id(map: "PK_Master_course") @db.VarChar(15)
  YEAR           String? @db.VarChar(5)
  p_id           Int?
  eval           Float?
  count_eval     Int?
  persent        Float?
  cs_eval        String? @db.VarChar(2)
  PRE            String? @db.VarChar(50)
  GROUP_SUBJECT  String? @db.VarChar(50)
  PRE_SHOW       String? @db.VarChar(100)
  DETAIL_SUBJECT String? @db.VarChar(4000)
  DETAIL_CURDIT  String? @db.VarChar(10)
  status_course  String? @db.VarChar(2)
  GROP_SUBJECT   String? @db.VarChar(50)
  PLAN_YR        String? @db.VarChar(20)
  MAJOR_PLAN     String? @db.VarChar(20)
  C_LEVEL        String? @db.VarChar(15)
  GROUP_GENED    String? @db.VarChar(250)

  @@index([run_no, COURSE_NAM, CS_CODE, CYEAR, CS_OWN], map: "IX_Master_course")
}

model Master_FEE {
  NNO          Int    @default(autoincrement())
  FEE_YR       String @db.VarChar(6)
  YEAR_STD     String @db.VarChar(3)
  SM_SEM       String @db.VarChar(2)
  STD_GRP      String @db.VarChar(4)
  STD_MAJ      String @db.VarChar(50)
  PLAN_YR      String @db.VarChar(10)
  NEWREGIS     Float?
  SUBSCRIPT    Float?
  LIBRARY      Float?
  FOREIGN      Float?
  CRED_LEC     Float?
  CRED_LAB1    Float?
  CRED_LAB2    Float?
  PAY_CREDIT   Float?
  ACTIVITY     Float?
  INSURANCE    Float?
  CARD         Float?
  SAFETY       Float?
  DOCUMENT     Float?
  CARD_REG     Float?
  WONT_FAC     Float? @default(0, map: "DF_Master_FEE_WONT_FAC")
  Assurance    Float? @default(0, map: "DF_Master_FEE_Assurance")
  TRAINING     Float? @default(0, map: "DF_Master_FEE_TRAINING")
  FINE         Float? @default(0, map: "DF_Master_FEE_FINE")
  PAY_CONTRACT Float? @default(0, map: "DF_Master_FEE_PAY_CONTRACT")
  status_keep  Float? @default(0, map: "DF_Master_FEE_status_keep")
  PAY_ALL      Float? @default(0, map: "DF_Master_FEE_PAY_ALL")
  REG_ENG      Float? @default(0, map: "DF_Master_FEE_REG_ENG")
  REG_PRE      Float? @default(0, map: "DF_Master_FEE_REG_PRE")

  @@id([FEE_YR, YEAR_STD, SM_SEM, STD_GRP, STD_MAJ, PLAN_YR], map: "PK_Master_FEE")
}

model Master_INBATCH {
  nno         Int     @default(autoincrement())
  BOOKID      String  @db.VarChar(8)
  COM_NO      Int?
  ITEM_NO     Int?
  CAMPUS_ID   String? @db.VarChar(1)
  SM_YR       String  @db.VarChar(2)
  SM_SEM      String  @db.VarChar(1)
  N_SEM       String? @default("1", map: "DF_Master_INBATCH_N_SEM") @db.VarChar(1)
  STATUS_SYS  String? @db.VarChar(2)
  EMTY_CREDIT Int?
  APPROVEID   String? @db.VarChar(5)
  END_REG     String? @db.VarChar(15)
  ID_LOGIN    String  @db.VarChar(50)
  SM_TEST     String? @db.VarChar(2)
  SM_EVAL     String? @db.VarChar(2)
  SM_EVAL_N   String? @default("1", map: "DF_Master_INBATCH_SM_EVAL_N") @db.VarChar(1)
  NOTE        String? @db.VarChar(100)
  TIME_START  Float?  @default(0, map: "DF_Master_INBATCH_TIME_START")
  TIME_STOP   Float   @default(0, map: "DF_Master_INBATCH_TIME_STOP")
  FACUTY_OPEN String? @db.VarChar(25)

  @@id([nno, BOOKID, SM_YR, SM_SEM, ID_LOGIN], map: "PK_Master_INBATCH")
  @@index([nno, BOOKID, APPROVEID, SM_YR, SM_SEM, N_SEM, SM_TEST, ID_LOGIN, TIME_START, TIME_STOP, STATUS_SYS], map: "IX_Master_INBATCH")
}

model Master_infor {
  nno         Int       @id(map: "PK_infor_master") @default(autoincrement())
  subject     String?   @db.VarChar(500)
  detail      String?   @db.VarChar(2000)
  Link_url    String?   @db.VarChar(200)
  file_link   String?   @db.VarChar(200)
  approve     String?   @db.VarChar(2)
  login_show  String?   @db.VarChar(2)
  from_name   String?   @db.VarChar(50)
  from_email  String?   @db.VarChar(30)
  ip          String?   @db.VarChar(30)
  type_n      String    @db.VarChar(2)
  readd       Int?      @default(0, map: "DF_infor_master_readd")
  popupp      String?   @default("N", map: "DF_infor_master_popupp") @db.VarChar(2)
  date_outx   DateTime? @db.DateTime
  date_inx    DateTime? @db.DateTime
  user_drop   String?   @db.VarChar(50)
  date_update DateTime? @default(now(), map: "DF_infor_master_date_update") @db.DateTime

  @@index([nno, subject, type_n, date_inx, date_outx, approve], map: "IX_Master_infor")
}

model Master_register {
  NNO            Int       @default(autoincrement())
  STD_ID         String    @db.VarChar(10)
  SM_SEM         String    @db.VarChar(2)
  SM_YR          String    @db.VarChar(4)
  N_SEM          String?   @default("1", map: "DF_Master_register_N_SEM") @db.VarChar(2)
  ATTR           String    @db.VarChar(2)
  ATTR_OLD       String?   @db.VarChar(2)
  RG_TYPE        String?   @db.VarChar(2)
  CS_CODE        String    @db.VarChar(15)
  PLAN_YR        String?   @db.VarChar(50)
  LC_SECTION     Int
  LC_CREDIT      Int?
  LB_SECTION     Int
  LB_CREDIT      Int?
  LB_TYPE        Int?
  TT_CREDIT      Int?      @default(0, map: "DF_Master_register_TT_CREDIT")
  MON_LEC        Float?    @default(0, map: "DF_Master_register_MON_LEC") @db.Money
  MON_LAB        Float?    @default(0, map: "DF_Master_register_MON_LAB") @db.Money
  COURSE_FEE     Int?
  FLAG           String?   @db.VarChar(1)
  CAMPUS_ID      String?   @db.VarChar(1)
  TYPE_STUD      String?   @db.VarChar(1)
  RG_STAT        String?   @db.VarChar(1)
  GRAD           String?   @db.VarChar(2)
  G_CONFIRM      String?   @db.VarChar(2)
  CS_MONEY       Float?    @default(0, map: "DF_Master_register_CS_MONEY") @db.Money
  CODE_PAYME     String?   @db.VarChar(1)
  FEE_LEC        Float?    @default(0, map: "DF_Master_register_FEE_LEC") @db.Money
  FEE_LAB        Float?    @default(0, map: "DF_Master_register_FEE_LAB") @db.Money
  IDKU5          Int?      @default(0, map: "DF_Master_register_IDKU5")
  NOREC          Int?      @default(0, map: "DF_Master_register_NOREC")
  SCORE          Float?    @default(0, map: "DF_Master_register_SCORE")
  KEYGRAD1       String?   @db.VarChar(3)
  KEYGRAD2       String?   @db.VarChar(3)
  CHECKGRAD      String?   @db.VarChar(20)
  DATE_KEY       DateTime? @db.DateTime
  DATE_TRAN      DateTime? @db.DateTime
  LEC_DAY        String?   @db.VarChar(100)
  LAB_DAY        String?   @db.VarChar(100)
  APPROVE        String?   @db.VarChar(3)
  APPROVE_W      String?   @db.VarChar(3)
  DATE_REG       DateTime? @db.DateTime
  DATE_Drop      DateTime? @db.DateTime
  LATE           String?   @db.VarChar(2)
  KU5            String?   @db.VarChar(2)
  TEMP_NO        Int?      @default(0, map: "DF_Master_register_TEMP_NO")
  PAGEKU5        Int?      @default(0, map: "DF_Master_register_PAGEKU5")
  KU_REPORT      String?   @db.VarChar(3)
  REMARK         String?   @db.VarChar(255)
  cat            String?   @db.VarChar(2)
  selec_d        String?   @db.VarChar(1)
  status_test    String?   @db.VarChar(2)
  note           String?   @db.VarChar(255)
  CHECK_EVAL     String?   @db.VarChar(2)
  score_temp     Float?    @default(0, map: "DF_Master_register_score_temp")
  PAGE_NET       Int?      @default(0, map: "DF_Master_register_PAGE_NET")
  ID_NET         Int?      @default(0, map: "DF_Master_register_ID_NET")
  user_Drop      String?   @db.VarChar(30)
  HOST_NAME_Drop String?   @db.VarChar(50)
  user_save      String?   @db.VarChar(50)
  IP_SAVE        String?   @db.VarChar(50)
  CHECK_CS       String?   @db.VarChar(50)
  user_upgrade   String?   @db.VarChar(50)
  ip_upgrade     String?   @db.VarChar(50)
  user_unDrop    String?   @db.VarChar(50)
  date_undrop    DateTime? @db.DateTime
  KEYGRADKU71    String?   @db.VarChar(3)
  KEYGRADKU72    String?   @db.VarChar(3)
  CHECKGRADEKU7  String?   @db.VarChar(20)
  NUMBER_KU7     String?   @db.VarChar(10)
  DATESEND_KU7   String?   @db.VarChar(20)
  DATE_KU7       DateTime? @db.DateTime
  IP_SAVE_KU7    String?   @db.VarChar(20)
  MAJOR          String?   @db.VarChar(5)
  KU7_ID         String?   @default("0", map: "DF_Master_register_KU7_ID") @db.VarChar(10)
  KU5_ID         String    @default("0", map: "DF_Master_register_KU5_ID") @db.VarChar(10)
  DATE_KU5       DateTime? @db.DateTime
  gencode1       String?   @db.VarChar(50)

  @@id([STD_ID, SM_SEM, SM_YR, ATTR, CS_CODE, LC_SECTION, LB_SECTION], map: "PK_Master_register")
  @@index([NNO, STD_ID, SM_SEM, SM_YR, ATTR, CS_CODE, LC_SECTION, LB_SECTION, FLAG, N_SEM], map: "IX_Master_register")
}

model Master_scoreed {
  YRSM          Int
  CS_CODE       String    @db.VarChar(12)
  PLAN_YR       String?   @db.VarChar(50)
  ID            String    @db.VarChar(10)
  SECTION       String?   @db.VarChar(8)
  RG_TYPE       String?   @db.VarChar(2)
  RG_STATUS     String?   @db.VarChar(7)
  CR_HR         String    @db.VarChar(2)
  GRADE         String?   @db.VarChar(2)
  scores        Float?
  CR_HR_t       Float?
  codeyr        String    @db.VarChar(15)
  SM_SEM        String    @db.VarChar(2)
  SM_YR         String    @db.VarChar(4)
  N_SEM         String    @db.VarChar(2)
  DATE_UPDATE   DateTime? @db.DateTime
  code_virtual  String?   @db.VarChar(10)
  ip_update     String?   @db.VarChar(30)
  REMARK        String?   @db.VarChar(50)
  AVGS          String?   @db.VarChar(20)
  TERM          String?   @db.VarChar(2)
  TRANSFER_ENG  String?   @db.VarChar(100)
  TRANSFER_THAI String?   @db.VarChar(100)
  OLD_GRADE     String?   @db.VarChar(2)
  LC_SECTION    Int       @default(0, map: "DF_Master_scoreed_LC_SECTION")
  LB_SECTION    Int       @default(0, map: "DF_Master_scoreed_LB_SECTION")

  @@id([YRSM, CS_CODE, ID, codeyr, SM_SEM, SM_YR, N_SEM], map: "PK_Master_scoreed")
  @@index([YRSM, CS_CODE, ID, codeyr, code_virtual, N_SEM, SM_SEM, SM_YR, RG_TYPE], map: "IX_Master_scoreed")
}

model Master_scoreed_audit {
  NNO                  Int       @id(map: "PK_Master_scoreed_audit") @default(autoincrement())
  YRSM                 Int?
  CS_CODE              String?   @db.VarChar(12)
  ID                   String?   @db.VarChar(10)
  SECTION              String?   @db.VarChar(8)
  RG_TYPE              String?   @db.VarChar(2)
  CR_HR                String?   @db.VarChar(2)
  GRADE                String?   @db.VarChar(2)
  codeyr               String?   @db.VarChar(15)
  ip_update            String?   @db.VarChar(30)
  REMARK               String?   @db.VarChar(50)
  OLD_GRADE            String?   @db.VarChar(2)
  Insert_Delete_Update String?   @db.VarChar(3)
  Modified_User        String?   @db.VarChar(30)
  Modified_Date        DateTime? @db.DateTime
  Modified_IP          String?   @default("host_name()", map: "DF_Master_scoreed_audit_Modified_IP") @db.VarChar(30)
}

model Master_studentsiracha {
  STUDENT_ID         String    @id(map: "PK_studentsiracha_master") @db.VarChar(10)
  SEX                String?   @db.VarChar(2)
  PRENAME_C          String?   @db.VarChar(6)
  PRENAME_TH         String?   @db.VarChar(20)
  NAME_TH            String?   @db.VarChar(45)
  SURNAME_TH         String?   @db.VarChar(70)
  PRENAME_EN         String?   @db.VarChar(20)
  NAME_EN            String?   @db.VarChar(35)
  SURNAME_EN         String?   @db.VarChar(40)
  SEQ                Float?
  CURRI_TH           String    @db.VarChar(100)
  CURRI_EN           String?   @db.VarChar(100)
  TYPE_C             String?   @db.VarChar(20)
  PRJ_TH             String?   @db.VarChar(8)
  MAJOR_C            String?   @db.VarChar(8)
  MAJOR_TH           String?   @db.VarChar(100)
  MAJOR_EN           String?   @db.VarChar(100)
  DEGREE_C           Float?
  PRECIS_TH          String?   @db.VarChar(150)
  PRECIS_EN          String?   @db.VarChar(150)
  DEGREE_EN          String?   @db.VarChar(150)
  DEGREE_TH          String?   @db.VarChar(150)
  FACULTY_C          String?   @db.VarChar(2)
  FACULTY_TH         String?   @db.VarChar(100)
  FACULTY_EN         String?   @db.VarChar(100)
  CAMPUS_C           String?   @db.VarChar(2)
  CLASS_YR           Float?
  SEMESTER           String?   @db.VarChar(10)
  STUDENT_ACTIVE     String?   @db.VarChar(10)
  ENTRANCE_D         DateTime? @db.DateTime
  BIRTHDAY           String?   @db.VarChar(20)
  BIRTH_PROVINCE_C   String?   @db.VarChar(100)
  BIRTH_COUNTRY_C    String?   @db.VarChar(100)
  NATIONALITY_C      String?   @db.VarChar(100)
  CARD_ID            String?   @db.VarChar(20)
  BIRTH_PROVINCE_CEN String?   @db.VarChar(100)
  BIRTH_COUNTRY_CEN  String?   @db.VarChar(100)
  NATIONALITY_CEN    String?   @db.VarChar(100)
  ADDRESS            String?   @db.VarChar(200)
  MOO                String?   @db.VarChar(10)
  SOI                String?   @db.VarChar(100)
  ROAD               String?   @db.VarChar(100)
  TUMBON             String?   @db.VarChar(100)
  AMPHUR             String?   @db.VarChar(100)
  PROVINCE           String?   @db.VarChar(100)
  ZIPCODE            String?   @db.VarChar(7)
  COUNTRY            String?   @db.VarChar(50)
  TEL                String?   @db.VarChar(30)
  FAX                String?   @db.VarChar(20)
  E_MAIL             String?   @db.VarChar(100)
  MOBILE             String?   @db.VarChar(30)
}

model Master_Studentthesis {
  STUDENT_ID  String  @db.VarChar(10)
  TIME_NO     Float   @default(1, map: "DF_Master_Studentthesis_TIME_NO")
  THESIS_TH   String? @db.VarChar(255)
  THESIS_EN   String? @db.VarChar(255)
  SEND_D      String? @db.VarChar(50)
  CANCEL_FLAG String? @db.VarChar(5)

  @@id([STUDENT_ID, TIME_NO], map: "PK_Master_Studentthesis")
}

model Master_Studycomplete {
  STU_ID      String   @id(map: "PK_Master_Studycomplete") @db.VarChar(10)
  CLASS_YR    String?  @db.VarChar(10)
  SEMESTER    String?  @db.VarChar(15)
  APPROVE_D   String?  @db.VarChar(15)
  GRADE       Decimal? @db.Decimal(10, 4)
  CANCLE_FLAG String?  @db.VarChar(10)
}

model Master_sys_open {
  sm_yr       String    @db.VarChar(5)
  sm_sem      String    @db.VarChar(5)
  n_sem       String    @default("1", map: "DF_Master_sys_open_n_sem") @db.VarChar(2)
  date_start  DateTime? @db.DateTime
  date_stop   DateTime? @db.DateTime
  type_open   String    @db.VarChar(2)
  id_prove    String?   @db.VarChar(50)
  status_sys  String?   @db.VarChar(2)
  remark      String?   @db.VarChar(50)
  end_reg     DateTime? @db.DateTime
  run_bll     Int?
  end_pay     String?   @db.VarChar(50)
  FACUTY_OPEN String    @db.VarChar(20)
  end_pay2    String?   @db.VarChar(50)
  end_pay3    String?   @db.VarChar(50)

  @@id([sm_yr, sm_sem, n_sem, type_open, FACUTY_OPEN], map: "PK_Master_sys_open")
}

model MasterStudent_properties {
  STUDENT_ID     String    @db.VarChar(10)
  SEQ            Float     @default(1, map: "DF_MasterStudent_properties_SEQ")
  DEGREE_C       String?   @db.VarChar(5)
  PRECIS_TH      String?   @db.VarChar(255)
  UNIVERSITY_TH  String?   @db.VarChar(255)
  PRECIS_EN      String?   @db.VarChar(255)
  UNIVERSITY_EN  String?   @db.VarChar(255)
  UNIVERSITY_EN1 String?   @db.Char(255)
  END_YR         String?   @db.VarChar(20)
  GRADE          Float?
  END_D          DateTime? @db.DateTime
  END_DD         String?   @db.VarChar(20)

  @@id([STUDENT_ID, SEQ], map: "PK_MasterStudent_properties")
}

model meeting {
  nno             Int     @default(autoincrement())
  sm_sem          String  @db.VarChar(2)
  sm_yr           String  @db.VarChar(5)
  subject_meeting String? @db.VarChar(255)
  round_meeting   String? @db.VarChar(50)
  meeting_date    String? @db.VarChar(50)
  empty_room      Int?    @default(0, map: "DF_meeting_empty_room")

  @@id([nno, sm_sem, sm_yr], map: "PK_meeting")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model MemoWeb {
  ID       Int?
  ParentID Int?
  Topics   String?   @db.VarChar(255)
  Data     String?   @db.VarChar(5000)
  usern    String?   @db.VarChar(50)
  Email    String?   @db.VarChar(50)
  Date     DateTime? @db.DateTime
  Replies  Int?
  ip_sent  String?   @db.VarChar(15)
  readed   Int       @default(0, map: "DF_MemoWeb_readed")

  @@ignore
}

model message_edu {
  nno           Int       @default(autoincrement())
  subject_m     String?   @db.VarChar(500)
  detail_m      String?   @db.VarChar(1000)
  Link_url      String?   @db.VarChar(200)
  file_link     String?   @db.VarChar(200)
  from_name     String?   @db.VarChar(50)
  from_id       String?   @db.VarChar(10)
  ip            String?   @db.VarChar(30)
  priorlity_m   Int?      @default(0, map: "DF_message_edu_priorlity")
  group_display String    @db.VarChar(10)
  fac_id        String?   @db.VarChar(10)
  cs_code       String?   @db.VarChar(10)
  sec_lec1      Int?
  sec_lab1      Int?
  sm_sem        String?   @db.VarChar(2)
  sm_yr         String?   @db.VarChar(2)
  std_id        String    @db.VarChar(10)
  readd         Int?      @default(0, map: "DF_message_edu_readd")
  end_date      DateTime? @db.DateTime
  start_date    DateTime? @db.DateTime
  date_update   DateTime? @default(now(), map: "DF_message_edu_date_update") @db.DateTime
  date_save     String?   @db.VarChar(30)

  @@id([nno, group_display, std_id], map: "PK_message_edu")
  @@index([std_id, group_display], map: "IX_message_edu")
}

model MODIFY_CURRICULUM {
  NNO          Int     @default(autoincrement())
  CUR_ID       String  @db.VarChar(15)
  SUMCREDIT    Int?
  SUMYEAR      Int?
  YR_MODIFY    String  @db.VarChar(7)
  ID_STU       String? @db.VarChar(50)
  LANGUAGE_CUR String? @db.VarChar(50)
  PLAN_CUR     String? @db.VarChar(50)
  TYPE_CUR     String? @db.VarChar(10)
  DESP_T       String? @db.VarChar(100)
  DESP_T_ETC   String? @db.VarChar(100)
  DESP_E       String? @db.VarChar(100)
  DESP_E_ETC   String? @db.VarChar(100)
  FAC_ID       String? @db.VarChar(5)
  FACULTY      String? @db.VarChar(50)
  CURR         String? @db.VarChar(50)
  CURR_TH      String? @db.VarChar(50)
  FAC_T        String? @db.VarChar(50)
  DEGREE       String? @db.VarChar(75)
  DEGREETH     String? @db.VarChar(75)
  DATE_APPROVE String? @db.VarChar(50)
  DATE_START   String? @db.VarChar(50)
  STATUS_CUR   String? @db.NChar(10)

  @@id([CUR_ID, YR_MODIFY], map: "PK_MODIFY_CURRICULUM_1")
  @@index([CUR_ID, YR_MODIFY], map: "IX_MODIFY_CURRICULUM")
}

model MONEY_KU {
  nno               Int       @default(autoincrement())
  STD_ID            String    @default("0", map: "DF_MONEY_KU_STD_ID") @db.VarChar(10)
  SM_YR             String    @default("0", map: "DF_MONEY_KU_SM_YR") @db.VarChar(4)
  SM_SEM            String    @default("0", map: "DF_MONEY_KU_SM_SEM") @db.VarChar(2)
  N_SEM             String    @default("1", map: "DF_MONEY_KU_N_SEM") @db.VarChar(2)
  MAJOR_ID          String?   @db.VarChar(5)
  ATTR              String    @default("R", map: "DF_MONEY_KU_ATTR") @db.VarChar(2)
  RUN_BLL           String?   @db.VarChar(20)
  ORDER_ID          Int?
  BOOK_DATE         DateTime? @db.DateTime
  RG_TIME           String?   @db.VarChar(15)
  BOOK_ID           Int?
  RUN_NO            Int?
  M1                Float     @default(0, map: "DF_MONEY_KU_M1")
  M2                Float     @default(0, map: "DF_MONEY_KU_M2")
  M3                Float     @default(0, map: "DF_MONEY_KU_M3")
  M4                Float     @default(0, map: "DF_MONEY_KU_M4")
  M5                Float     @default(0, map: "DF_MONEY_KU_M5")
  M6                Float     @default(0, map: "DF_MONEY_KU_M6")
  M7                Float     @default(0, map: "DF_MONEY_KU_M7")
  M8                Float     @default(0, map: "DF_MONEY_KU_M8")
  M9                Float     @default(0, map: "DF_MONEY_KU_M9")
  M10               Float     @default(0, map: "DF_MONEY_KU_M10")
  M11               Float     @default(0, map: "DF_MONEY_KU_M11")
  M12               Float     @default(0, map: "DF_MONEY_KU_M12")
  M13               Float     @default(0, map: "DF_MONEY_KU_M13")
  M14               Float     @default(0, map: "DF_MONEY_KU_M14")
  M_TOTAL           Float     @default(0, map: "DF_MONEY_KU_M_TOTAL")
  M_STORE           Float     @default(0, map: "DF_MONEY_KU_M_STORE")
  M_CASH            Float     @default(0, map: "DF_MONEY_KU_M_CASH")
  M_DRAFT           Float     @default(0, map: "DF_MONEY_KU_M_DRAFT")
  FLAG              String?   @db.VarChar(2)
  CODE_PAYMENT      String?   @default("1", map: "DF_MONEY_KU_CODE_PAYMENT") @db.VarChar(1)
  PAYMENT           String?   @db.VarChar(10)
  PAYMENT_BORROW    String?   @db.VarChar(100)
  PAYMENT_DRAFT     String?   @db.VarChar(10)
  PAYMENT170        String?   @db.VarChar(10)
  sum170            String?   @db.VarChar(10)
  M_RESERVE         Float?    @default(0, map: "DF_MONEY_KU_M_RESERVE")
  OLD_CREDIT        Int       @default(0, map: "DF_MONEY_KU_OLD_CREDIT")
  NEW_CREDIT        Int       @default(0, map: "DF_MONEY_KU_NEW_CREDIT")
  W_CREDIT          Int?      @default(0, map: "DF_MONEY_KU_W_CREDIT")
  BANK              String?   @db.VarChar(5)
  BANK_NAME         String?   @db.VarChar(100)
  Draft_no          String?   @db.VarChar(30)
  BOOK_NO_FAC       String?   @db.VarChar(100)
  remark            String?   @db.VarChar(250)
  late              String?   @db.VarChar(2)
  count_late        Int?      @default(0, map: "DF_MONEY_KU_count_late")
  count_reg         Int?      @default(0, map: "DF_MONEY_KU_count_reg")
  count_add         Int?      @default(0, map: "DF_MONEY_KU_count_add")
  count_appr        Int?      @default(0, map: "DF_MONEY_KU_count_appr")
  count_appn        Int?      @default(0, map: "DF_MONEY_KU_count_appn")
  approve           String?   @db.VarChar(2)
  approve_w         String?   @db.VarChar(2)
  note_r            String?   @db.VarChar(200)
  note_w            String?   @db.VarChar(200)
  date_app_w        DateTime? @db.DateTime
  date_app_r        DateTime? @db.DateTime
  date_late         DateTime? @db.DateTime
  money1            Float?    @default(0, map: "DF_MONEY_KU_money1")
  tran_money1       Float?    @default(0, map: "DF_MONEY_KU_tran_money1")
  tran_flag         String?   @db.VarChar(5)
  money2            Float?    @default(0, map: "DF_MONEY_KU_money2")
  tran_money2       Float?    @default(0, map: "DF_MONEY_KU_tran_money2")
  tran_flag2        String?   @db.VarChar(5)
  money3            Float?    @default(0, map: "DF_MONEY_KU_money3")
  tran_money3       Float?    @default(0, map: "DF_MONEY_KU_tran_money21")
  tran_flag3        String?   @db.VarChar(5)
  tran_money4       Float?    @default(0, map: "DF_MONEY_KU_tran_money21_1")
  tran_flag4        String?   @db.VarChar(5)
  tran_money5       Float?    @default(0, map: "DF_MONEY_KU_tran_money21_2")
  tran_flag5        String?   @db.VarChar(5)
  print_date        DateTime? @db.DateTime
  M_SM              Float?    @default(0, map: "DF_MONEY_KU_M_SM")
  M_DEBT            Float?    @default(0, map: "DF_MONEY_KU_M_DEBT")
  RG_DATE           DateTime? @default(now(), map: "DF_MONEY_KU_RG_DATE") @db.DateTime
  success           String?   @default("N", map: "DF_MONEY_KU_success") @db.VarChar(2)
  accept_date       String?   @db.VarChar(10)
  accept_date170    String?   @db.VarChar(10)
  cat               String?   @db.VarChar(5)
  BOOK_ID_M13       Int?      @default(0, map: "DF_MONEY_KU_BOOK_ID_M13")
  RUN_NO_M13        Int?      @default(0, map: "DF_MONEY_KU_RUN_NO_M13")
  BOOK_DAY_M13      String?   @db.VarChar(20)
  CUT_M13           String?   @db.VarChar(5)
  success_ku2       String?   @default("N", map: "DF_MONEY_KU_success_ku2") @db.VarChar(2)
  M_TEMP            Float?    @default(0, map: "DF_MONEY_KU_M_TEMP")
  count_print       Int?      @default(0, map: "DF_MONEY_KU_count_print")
  BOOK_ID_MRESERVE  Int?
  RUN_NO_MRESERVE   Int?
  BOOK_DAY_MRESERVE String?   @db.VarChar(20)
  CUT_MRESERVE      String?   @db.VarChar(5)
  JSAN              String?   @db.VarChar(50)
  M_ENG             Float?    @default(0, map: "DF_MONEY_KU_M_TEMP1")
  CUT_MENG          String?   @db.VarChar(5)
  BOOK_ID_MENG      Int?
  RUN_NO_MENG       Int?
  BOOK_DAY_MENG     String?   @db.VarChar(20)
  USER_UP_BANK      String?   @db.VarChar(10)
  account_sign      String?   @db.VarChar(50)
  account_position  String?   @db.VarChar(50)
  barcode_line      String?   @db.VarChar(100)
  END_PAY           String?   @db.VarChar(50)

  @@id([STD_ID, SM_YR, SM_SEM, N_SEM, ATTR], map: "PK_MONEY_KU", clustered: false)
  @@index([STD_ID, SM_SEM, SM_YR, ATTR, N_SEM, CODE_PAYMENT, BANK, FLAG, nno, JSAN], map: "IX_MONEY_KU")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model MONEY_KU_C {
  nno               Int
  STD_ID            String    @db.VarChar(10)
  SM_YR             String    @db.VarChar(2)
  SM_SEM            String    @db.VarChar(2)
  N_SEM             String    @default("1", map: "DF_MONEY_KU_C_N_SEM") @db.VarChar(2)
  MAJOR_ID          String?   @db.VarChar(5)
  ATTR              String    @db.VarChar(2)
  RUN_BLL           String?   @db.VarChar(20)
  ORDER_ID          Int?
  BOOK_DATE         DateTime? @db.DateTime
  RG_TIME           String?   @db.VarChar(15)
  BOOK_ID           Int?
  RUN_NO            Int?
  M1                Float?    @default(0, map: "DF_MONEY_KU_C_M1_1")
  M2                Float?    @default(0, map: "DF_MONEY_KU_C_M2_1")
  M3                Float?    @default(0, map: "DF_MONEY_KU_C_M3_1")
  M4                Float?    @default(0, map: "DF_MONEY_KU_C_M4_1")
  M5                Float?    @default(0, map: "DF_MONEY_KU_C_M5_1")
  M6                Float?    @default(0, map: "DF_MONEY_KU_C_M6_1")
  M7                Float?    @default(0, map: "DF_MONEY_KU_C_M7_1")
  M8                Float?    @default(0, map: "DF_MONEY_KU_C_M8_1")
  M9                Float?    @default(0, map: "DF_MONEY_KU_C_M9_1")
  M10               Float?    @default(0, map: "DF_MONEY_KU_C_M10_1")
  M11               Float?    @default(0, map: "DF_MONEY_KU_C_M11_1")
  M12               Float?    @default(0, map: "DF_MONEY_KU_C_M12_1")
  M13               Float?
  M14               Float?    @default(0, map: "DF_MONEY_KU_C_M14_1")
  M_TOTAL           Float?    @default(0, map: "DF_MONEY_KU_C_M_TOTAL_1")
  M_STORE           Float?    @default(0, map: "DF_MONEY_KU_C_M_STORE_1")
  M_CASH            Float?    @default(0, map: "DF_MONEY_KU_C_M_CASH_1")
  M_DRAFT           Float?    @default(0, map: "DF_MONEY_KU_C_M_DRAFT_1")
  FLAG              String?   @db.VarChar(2)
  CODE_PAYMENT      String?   @db.VarChar(1)
  PAYMENT           String?   @db.VarChar(10)
  PAYMENT_BORROW    String?   @db.VarChar(100)
  PAYMENT_DRAFT     String?   @db.VarChar(10)
  PAYMENT170        String?   @db.VarChar(10)
  sum170            String?   @db.VarChar(10)
  M_RESERVE         Float?    @default(0, map: "DF_MONEY_KU_C_M_RESERVE_1")
  OLD_CREDIT        Int?      @default(0, map: "DF_MONEY_KU_C_OLD_CREDIT_1")
  NEW_CREDIT        Int?      @default(0, map: "DF_MONEY_KU_C_NEW_CREDIT_1")
  W_CREDIT          Int?      @default(0, map: "DF_MONEY_KU_C_W_CREDIT")
  BANK              String?   @db.VarChar(5)
  BANK_NAME         String?   @db.VarChar(100)
  Draft_no          String?   @db.VarChar(30)
  remark            String?   @db.VarChar(50)
  late              String?   @db.VarChar(2)
  count_late        Int?      @default(0, map: "DF_MONEY_KU_C_count_late_1")
  count_reg         Int?      @default(0, map: "DF_MONEY_KU_C_count_reg_1")
  count_add         Int?      @default(0, map: "DF_MONEY_KU_C_count_add_1")
  count_appr        Int?      @default(0, map: "DF_MONEY_KU_C_count_appr_1")
  count_appn        Int?      @default(0, map: "DF_MONEY_KU_C_count_appn_1")
  approve           String?   @db.VarChar(2)
  approve_w         String?   @db.VarChar(2)
  note_r            String?   @db.VarChar(100)
  note_w            String?   @db.VarChar(100)
  date_app_w        DateTime? @db.DateTime
  date_app_r        DateTime? @db.DateTime
  date_late         DateTime? @db.DateTime
  tran_money1       Float?    @default(0, map: "DF_MONEY_KU_C_tran_money1_1")
  tran_flag         String?   @db.VarChar(5)
  tran_money2       Float?    @default(0, map: "DF_MONEY_KU_C_tran_money2_1")
  print_date        DateTime? @db.DateTime
  M_SM              Float?    @default(0, map: "DF_MONEY_KU_C_M_SM_1")
  M_DEBT            Float?    @default(0, map: "DF_MONEY_KU_C_M_DEBT_1")
  RG_DATE           DateTime? @default(now(), map: "DF_MONEY_KU_C_RG_DATE_1") @db.DateTime
  success           String?   @default("N", map: "DF_MONEY_KU_C_success_1") @db.VarChar(2)
  accept_date       String?   @db.VarChar(10)
  accept_date170    String?   @db.VarChar(10)
  cat               String?   @db.VarChar(5)
  BOOK_ID_M13       Int?      @default(0, map: "DF_MONEY_KU_C_BOOK_ID_M13_1")
  RUN_NO_M13        Int?      @default(0, map: "DF_MONEY_KU_C_RUN_NO_M13_1")
  BOOK_DAY_M13      String?   @db.VarChar(20)
  CUT_M13           String?   @db.VarChar(5)
  success_ku2       String?   @default("N", map: "DF_MONEY_KU_C_success_ku2_1") @db.VarChar(2)
  M_TEMP            Float?    @default(0, map: "DF_MONEY_KU_C_M_TEMP_1")
  count_print       Int?      @default(0, map: "DF_MONEY_KU_C_count_print_1")
  BOOK_ID_MRESERVE  Int?
  RUN_NO_MRESERVE   Int?
  BOOK_DAY_MRESERVE String?   @db.VarChar(20)
  CUT_MRESERVE      String?   @db.VarChar(5)
  JSAN              String?   @db.VarChar(50)

  @@index([nno, SM_SEM, SM_YR, STD_ID, ATTR, CODE_PAYMENT], map: "IX_MONEY_KU_C")
  @@ignore
}

model money_loan {
  nno        Int?    @default(1, map: "DF_money_loan_nno")
  id         String  @db.VarChar(10)
  id_borrow  String? @db.VarChar(8)
  DATE_br    String? @db.VarChar(2)
  Month_br   String? @db.VarChar(30)
  Year_br    String? @db.VarChar(5)
  reg1       Float?  @db.Money
  reg2       Float?  @db.Money
  own1       Float?  @db.Money
  own2       Float?  @db.Money
  total_reg  Float?  @db.Money
  total_own  Float?  @db.Money
  room1      Float?  @db.Money
  room2      Float?  @db.Money
  total_room Float?  @db.Money
  loan_m     Float?  @db.Money
  use_m      Float?  @db.Money
  total_use  Float?  @db.Money
  month_use  Int?
  idbank_src String? @db.VarChar(10)
  idbank_b   String? @db.VarChar(10)
  bank_name  String? @db.VarChar(15)
  ym_loan    String  @db.VarChar(2)
  register1  Float?  @db.Money
  register2  Float?  @db.Money
  differ1    Float?  @db.Money
  differ2    Float?  @db.Money
  b_y        String? @db.VarChar(1)

  @@id([id, ym_loan], map: "PK_money_loan")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model NUMBER_KU {
  Book         String @db.VarChar(5)
  sm_sem       String @db.VarChar(2)
  sm_yr        String @db.VarChar(3)
  order_id     Int?
  book_id      Int?
  book_no      Int?
  run_gencode1 Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model NUMBER_RUBRONG {
  order_id Int  @default(autoincrement())
  book_id  Int?

  @@ignore
}

model OSS_STUDENT_EVALUATION_TEMP {
  NO                    Int       @id(map: "PK_OSS_STUDENT_EVALUATION_TEMP") @default(autoincrement())
  STD_CODE              String?   @db.VarChar(10)
  SECTION_EN            String?   @db.VarChar(8)
  REGISTRATION_YEAR     String?   @db.VarChar(5)
  REGISTRATION_SEMESTER String?   @db.VarChar(5)
  SUBJECT_CODE          String?   @db.VarChar(255)
  SUBJECT_NAME_TH       String?   @db.VarChar(255)
  SUBJECT_NAME_EN       String?   @db.VarChar(255)
  TT_CREDIT             String?   @db.VarChar(5)
  REGISTRATION_TYPE_EN  String?   @db.VarChar(5)
  GRADE                 String?   @db.VarChar(5)
  FLAG_TRANSFER_GRADE   String?   @db.VarChar(5)
  UPDATE_DT             DateTime? @db.DateTime
  RECORD_STATUS         String?   @db.VarChar(10)
  UPDATE_BY             String?   @db.VarChar(50)
  N_SEM                 String?   @db.VarChar(5)
  CODE_VIRTUAL          String?   @db.VarChar(15)
  CODEYR                String?   @db.VarChar(15)
}

model OSS_STUDENT_GPA {
  STD_ID     String   @db.VarChar(10)
  YR         Int
  SM         Int
  SEM_GPA    Decimal? @db.Decimal(18, 2)
  SEM_CREDIT Int?
  CUM_GPA    Decimal? @db.Decimal(18, 2)
  CUM_CREDIT Int?
  C_LEVEL    String?  @db.VarChar(50)

  @@id([STD_ID, YR, SM], map: "PK_SRC_GPA")
}

model parent_address {
  STD_ID           String  @id(map: "PK_parent_address") @db.VarChar(10)
  STD_TITLE        String? @db.VarChar(20)
  STD_NAME         String? @db.VarChar(50)
  STD_SURNAME      String? @db.VarChar(50)
  STD_ENAME        String? @db.VarChar(50)
  STD_ESURNAME     String? @db.VarChar(50)
  MAJOR_ID         String? @db.VarChar(5)
  CAMPUS_ID        String? @db.VarChar(2)
  STD_SEX          String? @db.VarChar(2)
  IDCODE           String? @db.VarChar(13)
  SEX              String? @db.VarChar(2)
  RELIGION_OTHER   String? @db.VarChar(50)
  BIRTHDAY         String? @db.VarChar(20)
  AGE              Int?
  BORN_PLACE       String? @db.VarChar(100)
  COUNTRY          String? @db.VarChar(100)
  NATION_OTHER     String? @db.VarChar(50)
  ORIGIN_OTHER     String? @db.VarChar(50)
  SON_NUM          Int?
  SON_STDNUM       Int?
  TALENT           String? @db.VarChar(500)
  BORROW_TYPE      String? @db.VarChar(10)
  RELIGION         String? @db.VarChar(5)
  NATION           String? @db.VarChar(5)
  ORIGIN           String? @db.VarChar(5)
  PASSPORT_ID      String? @db.VarChar(20)
  EDU_PAY          String? @db.VarChar(2)
  ADDRESS          String? @db.VarChar(100)
  MOO              String? @db.VarChar(100)
  SOI              String? @db.VarChar(100)
  ROAD             String? @db.VarChar(100)
  TUMBON           String? @db.VarChar(100)
  AMPHUR           String? @db.VarChar(100)
  PROVINCE         String? @db.VarChar(100)
  ZIPCODE          String? @db.VarChar(10)
  TEL              String? @db.VarChar(50)
  FAX              String? @db.VarChar(20)
  E_MAIL           String? @db.VarChar(100)
  CURRENT_ADDRESS  String? @db.VarChar(100)
  CURRENT_MOO      String? @db.VarChar(100)
  CURRENT_SOI      String? @db.VarChar(100)
  CURRENT_ROAD     String? @db.VarChar(100)
  CURRENT_TUMBON   String? @db.VarChar(100)
  CURRENT_AMPHUR   String? @db.VarChar(100)
  CURRENT_PROVINCE String? @db.VarChar(100)
  CURRENT_ZIPCODE  String? @db.VarChar(10)
  CURRENT_TEL      String? @db.VarChar(100)
  CURRENT_FAX      String? @db.VarChar(20)
  PARENT_TITLE     String? @db.VarChar(30)
  PARENT_FNAME     String? @db.VarChar(50)
  PARENT_LNAME     String? @db.VarChar(50)
  RELATIONSHIP     String? @db.VarChar(50)
  PARENT_AGE       Int?
  PARENT_PERSON_ID String? @db.VarChar(50)
  PARENT_ADDRESS   String? @db.VarChar(100)
  PARENT_MOO       String? @db.VarChar(100)
  PARENT_SOI       String? @db.VarChar(100)
  PARENT_ROAD      String? @db.VarChar(100)
  PARENT_TUMBON    String? @db.VarChar(100)
  PARENT_AMPHUR    String? @db.VarChar(100)
  PARENT_PROVINCE  String? @db.VarChar(100)
  PARENT_ZIPCODE   String? @db.VarChar(10)
  MOT_FNAME        String? @db.VarChar(50)
  MOT_LNAME        String? @db.VarChar(50)
  MOT_AGE          String? @db.VarChar(50)
  MOTHER_PERSON_ID String? @db.VarChar(50)
  MOTHER_ADDRESS   String? @db.VarChar(100)
  MOTHER_MOO       String? @db.VarChar(100)
  MOTHER_SOI       String? @db.VarChar(100)
  MOTHER_ROAD      String? @db.VarChar(100)
  MOTHER_TUMBON    String? @db.VarChar(100)
  MOTHER_AMPHUR    String? @db.VarChar(100)
  MOTHER_PROVINCE  String? @db.VarChar(50)
  FAT_FNAME        String? @db.VarChar(50)
  FAT_LNAME        String? @db.VarChar(50)
  FAT_AGE          Int?
  FATHER_PERSON_ID String? @db.VarChar(50)
  FATHER_ADDRESS   String? @db.VarChar(100)
  FATHER_MOO       String? @db.VarChar(100)
  FATHER_SOI       String? @db.VarChar(100)
  FATHER_ROAD      String? @db.VarChar(100)
  FATHER_TUMBON    String? @db.VarChar(100)
  FATHER_AMPHUR    String? @db.VarChar(100)
  FATHER_PROVINCE  String? @db.VarChar(50)
  DEGEE_SCHOOL     String? @db.VarChar(100)
  NAME_SCHOOL      String? @db.VarChar(100)
  NAME_E_SCHOOL    String? @db.VarChar(100)
  AMPHUR_SCHOOL    String? @db.VarChar(100)
  PROVINCE_SCHOOL  String? @db.VarChar(50)
  COUNTRY_SCHOOL   String? @db.VarChar(100)
  GPA_SCHOOL       String? @db.VarChar(7)
  YEAR_END_SCHOOL  String? @db.VarChar(5)
  CODE_SCHOOL      String? @db.VarChar(20)

  @@index([STD_ID], map: "IX_parent_address")
}

model parent_reg {
  id            String  @id(map: "PK_parent_reg") @db.VarChar(10)
  h_pay         String? @db.VarChar(1)
  sr            String? @db.VarChar(8)
  pfname        String? @db.VarChar(50)
  plname        String? @db.VarChar(50)
  occuption     String? @db.VarChar(50)
  add1          String? @db.VarChar(255)
  add2          String? @db.VarChar(255)
  soi           String? @db.VarChar(255)
  road          String? @db.VarChar(255)
  tumbon        String? @db.VarChar(255)
  amphur        String? @db.VarChar(255)
  city          String? @db.VarChar(255)
  post          String? @db.VarChar(5)
  tel           String? @db.VarChar(30)
  relate        String? @db.VarChar(15)
  major         String? @db.VarChar(3)
  position_p    String? @db.VarChar(255)
  place_p       String? @db.VarChar(255)
  income_p      Int?
  status_parent String? @db.VarChar(1)
  relatives_u   Int?
  work_u        Int?
  study_u       Int?
  client        String? @db.VarChar(30)

  @@index([id], map: "IX_parent_reg")
}

model pay_all {
  no          Int       @default(autoincrement())
  ref_no      String    @db.VarChar(50)
  id          String    @db.VarChar(50)
  sm_sem      String    @db.VarChar(5)
  sm_yr       String    @db.VarChar(5)
  sname       String?   @db.VarChar(7)
  name        String?   @db.VarChar(100)
  fac         String?   @db.VarChar(255)
  major_name  String?   @db.VarChar(255)
  major       String?   @db.VarChar(50)
  amount      Float?
  remark      String?   @db.VarChar(255)
  count_print Int?      @default(0, map: "DF_pay_all_count_print")
  flag        String?   @db.VarChar(2)
  c_level     String?   @db.VarChar(10)
  pay_list    String    @db.VarChar(250)
  pay_money   Float?    @db.Money
  PAY_DATE    DateTime? @db.DateTime

  @@id([ref_no, id, sm_sem, sm_yr, pay_list], map: "PK_pay_all_1")
}

model pay_back_creditcard {
  no          Int       @id(map: "PK_pay_back_creditcard") @default(autoincrement())
  orderN      String?   @db.VarChar(50)
  productD    String?   @db.VarChar(100)
  controll    String?   @db.VarChar(100)
  date_back   DateTime? @db.DateTime
  status_back String?   @db.VarChar(50)
}

model pay_creditcard {
  no          Int       @default(autoincrement())
  orderN      String    @db.VarChar(50)
  id          String    @db.VarChar(50)
  sm_sem      String    @db.VarChar(5)
  sm_yr       String    @db.VarChar(5)
  sname       String?   @db.VarChar(7)
  name        String?   @db.VarChar(100)
  fac         String?   @db.VarChar(255)
  card_name   String?   @db.VarChar(250)
  card_number String?   @db.VarChar(20)
  cvv         String?   @db.VarChar(5)
  major_name  String?   @db.VarChar(255)
  major       String?   @db.VarChar(50)
  amount      Float?    @default(0, map: "DF_pay_creditcard_amount")
  rate_fee    Float?
  fee         Float?    @default(0, map: "DF_pay_creditcard_fee")
  total       Float?    @default(0, map: "DF_pay_creditcard_total")
  count_print Int?      @default(0, map: "DF_pay_creditcard_count_print")
  flag        String?   @db.VarChar(2)
  c_level     String?   @db.VarChar(10)
  pay_list    String    @db.VarChar(250)
  PAY_DATE    DateTime? @db.DateTime
  pay_status  String?   @db.VarChar(5)
  remark      String?   @db.VarChar(255)

  @@id([orderN, id, sm_sem, sm_yr, pay_list], map: "PK_pay_creditcard")
}

model pay_list {
  nno        Int     @default(autoincrement())
  pay_id     String  @id(map: "PK_pay_list") @db.VarChar(5)
  pay_list   String? @db.VarChar(100)
  pay_amount Float?
  pay_status String  @default("Y", map: "DF_pay_list_pay_status") @db.VarChar(5)
  pay_group  String? @db.VarChar(50)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model person_car {
  id          String?  @db.NVarChar(50)
  sname       String?  @db.NChar(10)
  uname       String?  @db.VarChar(50)
  major       String?  @db.VarChar(5)
  Fac_id      String?  @db.VarChar(2)
  uid         String?  @db.VarChar(9)
  upwd        String?  @db.VarChar(6)
  group1      String?  @db.VarChar(10)
  level1      String?  @db.VarChar(2)
  Login       String?  @db.VarChar(7)
  lock        String?  @db.VarChar(255)
  count_std   Int?     @default(0, map: "DF_person_car_count_std")
  count_login Int?     @default(0, map: "DF_person_car_count_login")
  count_eval  Int?     @default(0, map: "DF_person_car_count_eval")
  eval        Decimal? @default(0, map: "DF_person_car_eval") @db.Decimal(18, 2)
  status_tea  String?  @db.VarChar(5)
  read_eval   Int?     @default(0, map: "DF_person_car_read_eval")
  client      String?  @db.VarChar(15)
  ku5         String?  @db.VarChar(1)
  note        String?  @db.VarChar(100)
  pic         String?  @db.VarChar(100)
  macadd_last String?  @db.VarChar(50)

  @@ignore
}

model PERSON_EDU {
  id                String    @id(map: "PK_PERSON_EDU_1") @db.VarChar(10)
  id_old            String?   @db.VarChar(20)
  id_new            String?   @db.VarChar(20)
  sname             String?   @db.VarChar(50)
  sname_position    String?   @db.VarChar(20)
  uname             String    @db.VarChar(50)
  major             String?   @db.VarChar(5)
  Fac_id            String    @db.VarChar(2)
  uid               String    @db.VarChar(15)
  officer_code      String?   @db.VarChar(10)
  upwd              String?   @db.VarChar(15)
  upw0rd            String?   @db.VarChar(50)
  group1            String?   @db.VarChar(10)
  level1            String?   @db.VarChar(2)
  Login             String    @db.VarChar(7)
  status_work       String?   @default("Y", map: "DF_PERSON_EDU_status_work") @db.VarChar(5)
  lock              String?   @db.VarChar(255)
  Acc_nontri        String?   @db.VarChar(50)
  Acc_name          String?   @db.VarChar(100)
  Email_nontri      String?   @db.VarChar(255)
  Acc_gmail         String?   @db.VarChar(100)
  count_std         Int?      @default(0, map: "DF_PERSON_EDU_count_std")
  count_login       Int?      @default(0, map: "DF_PERSON_EDU_count_login")
  count_eval        Int?      @default(0, map: "DF_PERSON_EDU_count_eval")
  eval              Decimal?  @default(0, map: "DF_PERSON_EDU_eval") @db.Decimal(18, 2)
  status_tea        String?   @db.VarChar(5)
  read_eval         Int?      @default(0, map: "DF_PERSON_EDU_read_eval")
  client            String?   @db.VarChar(30)
  ku5               String?   @db.VarChar(2)
  note              String?   @db.VarChar(100)
  pic               String?   @db.VarChar(20)
  macadd_last       String?   @db.VarChar(50)
  user_online       Int       @default(0, map: "DF_PERSON_EDU_user_online")
  register_std      String?   @default("N", map: "DF_PERSON_EDU_reg_std") @db.VarChar(1)
  edit_cs_sect      String?   @default("N", map: "DF_PERSON_EDU_edit_cs_sect") @db.VarChar(1)
  eval_teacher      String?   @default("N", map: "DF_PERSON_EDU_eval_teacher") @db.VarChar(1)
  key_grade         String?   @default("N", map: "DF_PERSON_EDU_keygrade") @db.VarChar(1)
  check_grade       String?   @default("N", map: "DF_PERSON_EDU_key_grade1") @db.VarChar(1)
  lock_system       String?   @default("N", map: "DF_PERSON_EDU_lock_sys") @db.VarChar(1)
  status_nisit      String?   @default("N", map: "DF_PERSON_EDU_status_nisit") @db.VarChar(1)
  end_std           String?   @default("N", map: "DF_PERSON_EDU_end_std") @db.VarChar(1)
  ponpun_std        String?   @default("N", map: "DF_PERSON_EDU_ponpun_std") @db.VarChar(1)
  time_table        String?   @default("N", map: "DF_PERSON_EDU_time_table") @db.VarChar(1)
  approve_news      String?   @default("N", map: "DF_PERSON_EDU_approve_news") @db.VarChar(1)
  check_atk         String?   @db.VarChar(1)
  curriculum        String?   @default("N", map: "DF_PERSON_EDU_curriculum") @db.VarChar(1)
  email             String?   @db.VarChar(100)
  mobile            String?   @db.VarChar(20)
  tel_in            String?   @db.VarChar(20)
  position_edu      String?   @db.VarChar(50)
  changpass         DateTime? @default(now(), map: "DF_PERSON_EDU_changpass") @db.DateTime
  c_level           String?   @db.VarChar(10)
  changpass_status  String?   @db.VarChar(1)
  changpass_date    DateTime? @db.DateTime
  changpass_user    String?   @db.VarChar(50)
  os                String?   @db.VarChar(250)
  lineid            String?   @db.VarChar(250)
  line_email        String?   @db.VarChar(250)
  line_name         String?   @db.VarChar(250)
  line_tel          String?   @db.VarChar(50)
  line_otp          String?   @db.VarChar(5)
  approve_pdpa      String?   @db.VarChar(5)
  date_approve_pdpa String?   @db.VarChar(30)

  @@index([uname, uid, upw0rd, Login, Acc_nontri, c_level, Fac_id, id, level1, major, status_tea], map: "IX_PERSON_EDU")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model PLAN_COURSE {
  cs_code   String  @db.VarChar(6)
  link      String? @db.VarChar(8)
  cs_nameT  String? @db.VarChar(255)
  cs_nameE  String? @db.VarChar(255)
  credit    String? @db.VarChar(15)
  disc_thai String? @db.VarChar(4000)
  disc_Eng  String? @db.VarChar(4000)

  @@ignore
}

model plan_detail {
  RUN_NO            Int     @default(autoincrement())
  CUR_ID            String  @db.VarChar(15)
  MAJOR             String  @db.VarChar(15)
  GROUP_ID          String  @db.VarChar(5)
  CS_CODE           String  @db.VarChar(10)
  PLAN_YR           String  @db.VarChar(10)
  COURSE_NAME       String? @db.VarChar(255)
  COURSE_NAME_TH    String? @db.VarChar(255)
  CREDIT            Int?
  P_CREDIT          String? @db.VarChar(15)
  P_NO              Float
  pre               String? @db.VarChar(200)
  TYPE_C            String? @db.VarChar(20)
  G_SELECT_ONLY     String? @db.VarChar(5)
  G_SELECT_ONLY_CRE Int?

  @@id([RUN_NO, CUR_ID, GROUP_ID, CS_CODE, PLAN_YR, P_NO], map: "PK_plan_detail")
  @@index([RUN_NO, CUR_ID, GROUP_ID, PLAN_YR, COURSE_NAME, MAJOR, CS_CODE, P_NO], map: "IX_plan_detail")
}

model PLAN_DETAIL_TEMP {
  MAJOR       String? @db.VarChar(8)
  GROUP_P     String? @db.VarChar(5)
  DESCC       String? @db.VarChar(255)
  S_IF        String? @db.VarChar(50)
  UNIT        String? @db.VarChar(16)
  CREDIT_DIS  String? @db.VarChar(10)
  CS_CODE     String  @db.VarChar(10)
  COURSE_NAME String? @db.VarChar(255)
  CREDIT      Int?
  SEM         String? @db.VarChar(5)
  NO_CREDIT   Int?
  SM_SEM      String  @db.VarChar(2)
  PLAN_YR     String  @db.VarChar(5)
  SUM_CREDIT  Int?
  RUN_NO      Int?
  P_ID        String  @db.VarChar(5)
  P_CREDIT    String? @db.VarChar(15)
  STD_ID      String  @db.VarChar(10)

  @@id([CS_CODE, SM_SEM, PLAN_YR, P_ID, STD_ID], map: "PK_PLAN_TEMP")
  @@index([MAJOR, CS_CODE, SM_SEM, STD_ID, PLAN_YR, P_ID], map: "IX_PLAN_DETAIL_TEMP")
}

model plan_group {
  NNO      Int     @default(autoincrement())
  CUR_ID   String  @db.VarChar(15)
  MAJOR    String  @db.VarChar(15)
  MAIN_ID  String  @db.VarChar(5)
  GROUP_ID String  @db.VarChar(5)
  G_DESCC  String? @db.VarChar(255)
  G_CREDIT Int?
  G_UNIT   String? @db.VarChar(16)
  PLAN_YR  String  @db.VarChar(10)
  TYPE_C   String? @db.VarChar(20)

  @@id([CUR_ID, MAIN_ID, GROUP_ID, PLAN_YR], map: "PK_plan_group_1")
  @@index([CUR_ID, MAIN_ID, GROUP_ID, PLAN_YR, G_DESCC], map: "IX_plan_group")
}

model plan_group_temp {
  NNO      Int     @default(autoincrement())
  STD_ID   String  @db.VarChar(10)
  CUR_ID   String  @db.VarChar(15)
  MAJOR    String  @db.VarChar(15)
  MAIN_ID  String  @db.VarChar(5)
  GROUP_ID String  @db.VarChar(5)
  G_DESCC  String? @db.VarChar(255)
  G_CREDIT Int?
  G_UNIT   String? @db.VarChar(16)
  PLAN_YR  String  @db.VarChar(7)
  G_USED   Int?    @default(0, map: "DF_plan_group_temp_G_USED")
  G_PASS   String? @default("N", map: "DF_plan_group_temp_G_PASS") @db.VarChar(1)
  M_DESCC  String? @db.VarChar(255)
  M_CREDIT Int?
  M_UNIT   String? @db.VarChar(16)

  @@id([STD_ID, CUR_ID, MAIN_ID, GROUP_ID, PLAN_YR], map: "PK_plan_group_temp")
  @@index([NNO, CUR_ID, STD_ID, PLAN_YR, GROUP_ID, MAIN_ID], map: "IX_plan_group_temp")
}

model plan_main {
  NNO      Int     @default(autoincrement())
  CUR_ID   String  @db.VarChar(15)
  MAJOR    String  @db.VarChar(15)
  MAIN_ID  String  @db.VarChar(5)
  M_DESCC  String? @db.VarChar(255)
  M_CREDIT Int?
  M_UNIT   String? @db.VarChar(16)
  PLAN_YR  String  @db.VarChar(10)
  TYPE_C   String? @db.VarChar(20)

  @@id([CUR_ID, MAJOR, MAIN_ID, PLAN_YR], map: "PK_plan_main")
  @@index([CUR_ID, MAJOR, MAIN_ID, PLAN_YR], map: "IX_plan_main")
}

model plan_major {
  nno            Int     @default(autoincrement())
  cur_id         String  @db.VarChar(15)
  major          String? @db.VarChar(15)
  cs_code        String  @db.VarChar(10)
  course_name    String? @db.VarChar(255)
  course_name_th String? @db.VarChar(255)
  credit         Int?
  sem            Int
  no_credit      Int?
  sm_sem         String  @db.VarChar(5)
  sm_y           String  @db.VarChar(5)
  p_id           Int?
  plan_yr        String  @db.VarChar(10)

  @@id([cur_id, cs_code, sem, sm_sem, sm_y, plan_yr], map: "PK_plan_major")
  @@index([cur_id, cs_code, sem, sm_sem, sm_y, plan_yr], map: "IX_plan_major")
}

model plan_major_analyze {
  nno            Int     @default(autoincrement())
  cur_id         String  @db.VarChar(15)
  major          String  @db.VarChar(15)
  cs_code        String  @db.VarChar(12)
  course_name    String? @db.VarChar(255)
  course_name_th String? @db.VarChar(255)
  credit         Int?
  sem            Int
  no_credit      Int?
  sm_sem         String  @db.VarChar(5)
  sm_yr          String  @db.VarChar(5)
  p_id           Int?
  sm_y           String  @db.VarChar(5)
  plan_yr        String  @db.VarChar(10)
  student_id     String  @db.VarChar(5)
  number_nisit   Int?    @default(0, map: "DF_plan_major_analyze_number_nisit")
  pass_course    Int?    @default(0, map: "DF_plan_major_analyze_pass_course")
  notpass_course Int?    @default(0, map: "DF_plan_major_analyze_notpass_course")

  @@id([cur_id, major, cs_code, sem, sm_sem, sm_yr, plan_yr, student_id], map: "PK_plan_major_analyze")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model project {
  pro_id     String? @db.VarChar(10)
  pro_name   String? @db.VarChar(100)
  pro_type   String? @db.VarChar(4)
  pro_statuc String? @db.VarChar(100)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Project_rub {
  NoProject    Int?
  ProjectName  String? @db.NVarChar(100)
  ProjectCode  String? @db.NVarChar(5)
  ProjectOwner String? @db.NVarChar(20)
  Note         String? @db.NVarChar(255)

  @@ignore
}

model province {
  province_id   Int     @id(map: "PK_province")
  province_name String? @db.VarChar(100)

  @@index([province_id], map: "IX_province")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model RecWeb {
  pno      Int?
  ParentID Int?
  Name     String?   @db.VarChar(50)
  Email    String?   @db.VarChar(50)
  DateTime DateTime? @db.DateTime
  Message  String?   @db.VarChar(5000)
  Link     String?   @db.VarChar(255)
  ipp      String?   @db.VarChar(30)

  @@ignore
}

model refund {
  id           String  @id(map: "PK_refund") @db.VarChar(10)
  id_card      String? @db.VarChar(13)
  name         String? @db.VarChar(100)
  major        String? @db.VarChar(10)
  status_std   String? @db.VarChar(5)
  checked      String? @db.VarChar(5)
  citizenNo    String? @db.VarChar(13)
  refcode      String? @db.VarChar(50)
  createTime   String? @db.VarChar(100)
  discountCode String? @db.VarChar(5)
  discountName String? @db.VarChar(250)
  regCount     Int?
  status       String? @db.VarChar(5)
  refund       String? @db.VarChar(5)
  m_refund     Float?  @default(0, map: "DF_refund_m_refund")
  m_report     String? @db.VarChar(50)
  m_av         Float?
  m_ku         Float?
}

model reg_calender {
  C_TITLE       String?   @db.VarChar(2)
  ID            Int
  DATE_START    String?   @db.VarChar(50)
  DATE_STOP     String?   @db.VarChar(50)
  EVEN_CALEN    String?   @db.VarChar(1000)
  SM_YR         Int
  SM_SEM        Int
  END_SENDGRADE DateTime? @db.DateTime

  @@id([ID, SM_YR, SM_SEM], map: "PK_reg_calender")
}

model reg_saraban {
  nno      Int       @default(autoincrement())
  id_n     String    @id(map: "PK_reg_saraban") @db.NVarChar(50)
  name     String?   @db.NVarChar(255)
  url      String?   @db.NVarChar(255)
  status_y String?   @db.NVarChar(5)
  datee    DateTime? @db.DateTime
  c_level  String?   @db.VarChar(50)
}

model REG_T_REGISTER {
  NO                Int       @id(map: "PK_REG_T_REGISTER") @default(autoincrement())
  STD_ID            String    @db.VarChar(32)
  SM_SEM            String    @db.VarChar(2)
  SM_YR             String    @db.VarChar(12)
  RG_TYPE           String    @db.VarChar(10)
  CS_CODE           String    @db.VarChar(32)
  ATTR              String    @db.VarChar(1)
  LC_SECTION        String?   @db.VarChar(10)
  LC_CREDIT         Int?
  LB_SECTION        String?   @db.VarChar(10)
  LB_CREDIT         Int?
  TT_CREDIT         Int?
  CAMPUS_ID         String?   @db.VarChar(5)
  RG_STAT           String?   @db.VarChar(1)
  REGIS_STATUS      String?   @default("Y", map: "DF_REG_T_REGISTER_REGIS_STATUS") @db.VarChar(1)
  REGISTER_COMPLETE String?   @default("Y", map: "DF_REG_T_REGISTER_REGISTER_COMPLETE") @db.VarChar(1)
  REGIS_WEB         String?   @db.VarChar(1)
  UPDATED_DT        String?   @db.VarChar(19)
  ROW_ORDER         Int?
  FINAL_FLAG        String?   @db.VarChar(1)
  FLAG_UPDATE       String?   @db.VarChar(1)
  LAST_SYNC_DATE    DateTime? @db.DateTime
  SUBJECT_CODE      String?   @db.VarChar(20)

  @@index([NO, STD_ID, SUBJECT_CODE, CS_CODE, LC_SECTION, LB_SECTION, ATTR, SM_SEM, SM_YR, RG_TYPE], map: "IX_REG_T_REGISTER")
}

model REG_T_REGISTER_RESULT {
  no               Int     @id(map: "PK_REG_T_REGISTER_RESULT") @default(autoincrement())
  sm_sem           String? @db.VarChar(5)
  sm_yr            String? @db.VarChar(5)
  campus_name_th   String? @db.VarChar(100)
  student_code     String? @db.VarChar(12)
  first_name_th    String? @db.VarChar(100)
  last_name_th     String? @db.VarChar(100)
  subject_code     String? @db.VarChar(15)
  subject_name_th  String? @db.VarChar(250)
  subject_name_en  String? @db.VarChar(250)
  section_code     String? @db.VarChar(10)
  section_type     String? @db.VarChar(20)
  enroll_credit    String? @db.VarChar(5)
  enroll_status    String? @db.VarChar(5)
  enroll_status_th String? @db.VarChar(20)
  updated_dt       String? @db.VarChar(50)
  oon              String? @db.VarChar(5)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model REG_V_ALL_COURSE {
  SUBJECT_CODE String  @db.VarChar(32)
  CS_CODE      String  @db.VarChar(32)
  CS_VERSION   String? @db.VarChar(10)
  CS_OWN       String  @db.VarChar(20)
  YR           String  @db.VarChar(12)
  SM           String  @db.VarChar(2)
  COURSE_NAME  String? @db.VarChar(255)
  CREDIT_LEC   String? @db.VarChar(40)
  CREDIT_LAB   String? @db.VarChar(40)
  CURR_YR      String? @db.VarChar(5)
  COURSE_TNAME String? @db.VarChar(255)
  FLAG_UPDATE  String? @db.VarChar(1)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model REG_V_COURSE_TIME {
  CS_CODE     String  @db.VarChar(32)
  YR          String  @db.VarChar(12)
  SEMESTER    String  @db.VarChar(2)
  SECT        String  @db.VarChar(10)
  CS_TIME     String? @db.VarChar(171)
  ROOM        String? @db.VarChar(1000)
  TYPE        Int?
  CAMPUS_ID   String  @db.VarChar(5)
  FLAG_UPDATE String? @db.VarChar(1)
  FACULTY     String? @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model REG_V_TEACHER {
  Q_CODE      String? @db.VarChar(32)
  SEMESTER    String? @db.VarChar(2)
  Q_TYPE      String? @db.VarChar(1)
  Q_SEC       String? @db.VarChar(10)
  ADVISOR_ID  String? @db.VarChar(20)
  YR          String? @db.VarChar(12)
  RUN_NO      Int?
  FLAG_UPDATE String? @db.VarChar(1)

  @@ignore
}

model reg165_1 {
  no               Int
  student_code     String  @db.VarChar(15)
  student_id       String  @db.VarChar(15)
  subject_code     String  @db.VarChar(15)
  section_code     Int
  section_type     String  @db.VarChar(10)
  enroll_credit    Int?
  enroll_status    String  @db.VarChar(25)
  enroll_status_th String? @db.NVarChar(55)
  oon              String? @db.VarChar(5)

  @@id([no, student_code, student_id, subject_code, section_code, section_type, enroll_status], map: "PK_reg165_1")
}

model reg65_g_able {
  cs_code     String  @db.VarChar(50)
  course_thai String? @db.NVarChar(255)
  course_eng  String? @db.NVarChar(255)
  sec         Int
  type_sec    String? @db.NVarChar(255)
  tt_credit   Int?
  std_id      String  @db.VarChar(50)
  sname       String? @db.NVarChar(255)
  name        String? @db.NVarChar(255)
  lname       String? @db.NVarChar(255)
  attr        String  @db.VarChar(50)
  result_reg  String? @db.NVarChar(255)
  oon         String? @db.VarChar(5)

  @@id([cs_code, sec, std_id, attr], map: "PK_reg65_g_able")
}

model register {
  NNO            Int       @default(autoincrement())
  STD_ID         String    @db.VarChar(10)
  SM_SEM         String    @db.VarChar(2)
  SM_YR          String    @db.VarChar(4)
  N_SEM          String    @default("1", map: "DF_register_N_SEM") @db.VarChar(2)
  ATTR           String    @db.VarChar(2)
  ATTR_OLD       String    @db.VarChar(2)
  RG_TYPE        String?   @db.VarChar(2)
  CS_CODE        String    @db.VarChar(12)
  SUBJECT_CODE   String?   @db.VarChar(20)
  CS_CODE_ISEA   String?   @db.VarChar(20)
  PLAN_YR        String?   @db.VarChar(50)
  LC_SECTION     Int       @default(0, map: "DF_register_LC_SECTION")
  LC_CREDIT      Int?      @default(0, map: "DF_register_LC_CREDIT")
  LB_SECTION     Int       @default(0, map: "DF_register_LB_SECTION")
  LB_CREDIT      Int?      @default(0, map: "DF_register_LB_CREDIT")
  LB_TYPE        Int?      @default(0, map: "DF_register_LB_TYPE")
  TT_CREDIT      Int?      @default(0, map: "DF_register_TT_CREDIT")
  MON_LEC        Float?    @default(0, map: "DF_register_MON_LEC") @db.Money
  MON_LAB        Float?    @default(0, map: "DF_register_MON_LAB") @db.Money
  COURSE_FEE     Int?      @default(0, map: "DF_register_COURSE_FEE")
  FLAG           String?   @db.VarChar(1)
  CAMPUS_ID      String?   @db.VarChar(1)
  TYPE_STUD      String?   @db.VarChar(1)
  RG_STAT        String?   @db.VarChar(1)
  GRAD           String?   @db.VarChar(2)
  G_CONFIRM      String?   @db.VarChar(2)
  CS_MONEY       Float?    @default(0, map: "DF_register_CS_MONEY") @db.Money
  CODE_PAYME     String?   @db.VarChar(1)
  FEE_LEC        Float?    @default(0, map: "DF_register_FEE_LEC") @db.Money
  FEE_LAB        Float?    @default(0, map: "DF_register_FEE_LAB") @db.Money
  IDKU5          Int?
  NOREC          Int?
  SCORE          Float?
  KEYGRAD1       String?   @db.VarChar(3)
  KEYGRAD2       String?   @db.VarChar(3)
  CHECKGRAD      String?   @db.VarChar(20)
  DATE_KEY       DateTime? @db.DateTime
  DATE_TRAN      DateTime? @db.DateTime
  LEC_DAY        String?   @db.VarChar(100)
  LAB_DAY        String?   @db.VarChar(100)
  APPROVE        String?   @db.VarChar(3)
  APPROVE_W      String?   @db.VarChar(4)
  DATE_REG       DateTime? @default(now(), map: "DF_register_DATE_REG") @db.DateTime
  DATE_Drop      DateTime? @db.DateTime
  LATE           String?   @db.VarChar(2)
  KU5            String?   @db.VarChar(2)
  TEMP_NO        Int?      @default(0, map: "DF_register_TEMP_NO")
  PAGEKU5        Int?      @default(0, map: "DF_register_PAGEKU5")
  KU_REPORT      String?   @db.VarChar(3)
  REMARK         String?   @db.VarChar(255)
  cat            String?   @db.VarChar(2)
  selec_d        String?   @db.VarChar(1)
  status_test    String?   @default("Y", map: "DF_register_status_test") @db.VarChar(2)
  note           String?   @db.VarChar(255)
  CHECK_EVAL     String?   @db.VarChar(2)
  score_temp     Float?
  PAGE_NET       Int?      @default(0, map: "DF_register_PAGE_NET")
  ID_NET         Int?      @default(0, map: "DF_register_ID_NET")
  user_Drop      String?   @db.VarChar(30)
  HOST_NAME_Drop String?   @db.VarChar(50)
  user_save      String?   @db.VarChar(50)
  IP_SAVE        String?   @db.VarChar(20)
  CHECK_CS       String?   @db.VarChar(2)
  user_upgrade   String?   @db.VarChar(50)
  ip_upgrade     String?   @db.VarChar(50)
  user_unDrop    String?   @db.VarChar(30)
  date_undrop    DateTime? @db.DateTime
  KEYGRADKU71    String?   @db.VarChar(3)
  KEYGRADKU72    String?   @db.VarChar(3)
  CHECKGRADEKU7  String?   @db.VarChar(20)
  NUMBER_KU7     String?   @db.VarChar(10)
  DATESEND_KU7   String?   @db.VarChar(20)
  DATE_KU7       DateTime? @db.DateTime
  IP_SAVE_KU7    String?   @db.VarChar(20)
  MAJOR          String?   @db.VarChar(5)
  KU7_ID         String?   @db.VarChar(10)
  test_room      String?   @db.VarChar(20)
  test_date_time String?   @db.VarChar(50)
  KU5_ID         String    @default("0", map: "DF_register_KU5_ID") @db.VarChar(10)
  DATE_KU5       DateTime? @db.DateTime
  gencode1       String?   @db.VarChar(100)
  SUBJECT_CODE1  String?   @db.VarChar(20)
  ISEA           String?   @db.VarChar(50)

  @@id([STD_ID, SM_SEM, SM_YR, N_SEM, ATTR, CS_CODE, LC_SECTION, LB_SECTION], map: "PK_register")
  @@index([NNO, STD_ID, CS_CODE, LC_SECTION, LB_SECTION, SM_SEM, SM_YR, ATTR, ATTR_OLD, FLAG, status_test, N_SEM], map: "IX_register_1")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model register_48_50 {
  NNO            Int
  STD_ID         String    @db.VarChar(10)
  SM_SEM         String    @db.VarChar(2)
  SM_YR          String    @db.VarChar(4)
  N_SEM          String    @default("1", map: "DF_register_48_50_N_SEM") @db.VarChar(2)
  ATTR           String    @db.VarChar(2)
  ATTR_OLD       String    @db.VarChar(2)
  RG_TYPE        String?   @db.VarChar(2)
  CS_CODE        String    @db.VarChar(12)
  LC_SECTION     Int       @default(0, map: "DF_register_48_50_LC_SECTION")
  LC_CREDIT      Int?      @default(0, map: "DF_register_48_50_LC_CREDIT")
  LB_SECTION     Int       @default(0, map: "DF_register_48_50_LB_SECTION")
  LB_CREDIT      Int?      @default(0, map: "DF_register_48_50_LB_CREDIT")
  LB_TYPE        Int?      @default(0, map: "DF_register_48_50_LB_TYPE")
  TT_CREDIT      Int?      @default(0, map: "DF_register_48_50_TT_CREDIT")
  MON_LEC        Float?    @default(0, map: "DF_register_48_50_MON_LEC") @db.Money
  MON_LAB        Float?    @default(0, map: "DF_register_48_50_MON_LAB") @db.Money
  COURSE_FEE     Int?      @default(0, map: "DF_register_48_50_COURSE_FEE")
  FLAG           String?   @db.VarChar(1)
  CAMPUS_ID      String?   @db.VarChar(1)
  TYPE_STUD      String?   @db.VarChar(1)
  RG_STAT        String?   @db.VarChar(1)
  GRAD           String?   @db.VarChar(2)
  G_CONFIRM      String?   @db.VarChar(2)
  CS_MONEY       Float?    @default(0, map: "DF_register_48_50_CS_MONEY") @db.Money
  CODE_PAYME     String?   @db.VarChar(1)
  FEE_LEC        Float?    @default(0, map: "DF_register_48_50_FEE_LEC") @db.Money
  FEE_LAB        Float?    @default(0, map: "DF_register_48_50_FEE_LAB") @db.Money
  IDKU5          Int?
  NOREC          Int?
  SCORE          Float?
  KEYGRAD1       String?   @db.VarChar(3)
  KEYGRAD2       String?   @db.VarChar(3)
  CHECKGRAD      String?   @db.VarChar(20)
  DATE_KEY       DateTime? @db.DateTime
  DATE_TRAN      DateTime? @db.DateTime
  LEC_DAY        String?   @db.VarChar(100)
  LAB_DAY        String?   @db.VarChar(100)
  APPROVE        String?   @db.VarChar(3)
  APPROVE_W      String?   @db.VarChar(3)
  DATE_REG       DateTime? @default(now(), map: "DF_register_48_50_DATE_REG") @db.DateTime
  DATE_Drop      DateTime? @db.DateTime
  LATE           String?   @db.VarChar(2)
  KU5            String?   @db.VarChar(2)
  TEMP_NO        Int?      @default(0, map: "DF_register_48_50_TEMP_NO")
  PAGEKU5        Int?      @default(0, map: "DF_register_48_50_PAGEKU5")
  KU_REPORT      String?   @db.VarChar(3)
  REMARK         String?   @db.VarChar(255)
  cat            String?   @db.VarChar(2)
  selec_d        String?   @db.VarChar(1)
  status_test    String?   @default("Y", map: "DF_register_48_50_status_test") @db.VarChar(2)
  note           String?   @db.VarChar(255)
  CHECK_EVAL     String?   @db.VarChar(2)
  score_temp     Float?
  PAGE_NET       Int?      @default(0, map: "DF_register_48_50_PAGE_NET")
  ID_NET         Int?      @default(0, map: "DF_register_48_50_ID_NET")
  user_Drop      String?   @db.VarChar(30)
  HOST_NAME_Drop String?   @db.VarChar(50)
  user_save      String?   @db.VarChar(50)
  IP_SAVE        String?   @db.VarChar(20)
  CHECK_CS       String?   @db.VarChar(2)
  user_upgrade   String?   @db.VarChar(50)
  ip_upgrade     String?   @db.VarChar(50)
  user_unDrop    String?   @db.VarChar(30)
  date_undrop    DateTime? @db.DateTime
  KEYGRADKU71    String?   @db.VarChar(3)
  KEYGRADKU72    String?   @db.VarChar(3)
  CHECKGRADEKU7  String?   @db.VarChar(20)
  NUMBER_KU7     String?   @db.VarChar(10)
  DATESEND_KU7   String?   @db.VarChar(20)
  DATE_KU7       DateTime? @db.DateTime
  IP_SAVE_KU7    String?   @db.VarChar(20)
  MAJOR          String?   @db.VarChar(5)
  KU7_ID         String?   @db.VarChar(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model register_back_60_2 {
  NNO            Int
  STD_ID         String    @db.VarChar(10)
  SM_SEM         String    @db.VarChar(2)
  SM_YR          String    @db.VarChar(4)
  N_SEM          String    @default("1", map: "DF_register_back_60_2_N_SEM") @db.VarChar(2)
  ATTR           String    @db.VarChar(2)
  ATTR_OLD       String    @db.VarChar(2)
  RG_TYPE        String?   @db.VarChar(2)
  CS_CODE        String    @db.VarChar(12)
  LC_SECTION     Int       @default(0, map: "DF_register_back_60_2_LC_SECTION")
  LC_CREDIT      Int?      @default(0, map: "DF_register_back_60_2_LC_CREDIT")
  LB_SECTION     Int       @default(0, map: "DF_register_back_60_2_LB_SECTION")
  LB_CREDIT      Int?      @default(0, map: "DF_register_back_60_2_LB_CREDIT")
  LB_TYPE        Int?      @default(0, map: "DF_register_back_60_2_LB_TYPE")
  TT_CREDIT      Int?      @default(0, map: "DF_register_back_60_2_TT_CREDIT")
  MON_LEC        Float?    @default(0, map: "DF_register_back_60_2_MON_LEC") @db.Money
  MON_LAB        Float?    @default(0, map: "DF_register_back_60_2_MON_LAB") @db.Money
  COURSE_FEE     Int?      @default(0, map: "DF_register_back_60_2_COURSE_FEE")
  FLAG           String?   @db.VarChar(1)
  CAMPUS_ID      String?   @db.VarChar(1)
  TYPE_STUD      String?   @db.VarChar(1)
  RG_STAT        String?   @db.VarChar(1)
  GRAD           String?   @db.VarChar(2)
  G_CONFIRM      String?   @db.VarChar(2)
  CS_MONEY       Float?    @default(0, map: "DF_register_back_60_2_CS_MONEY") @db.Money
  CODE_PAYME     String?   @db.VarChar(1)
  FEE_LEC        Float?    @default(0, map: "DF_register_back_60_2_FEE_LEC") @db.Money
  FEE_LAB        Float?    @default(0, map: "DF_register_back_60_2_FEE_LAB") @db.Money
  IDKU5          Int?
  NOREC          Int?
  SCORE          Float?
  KEYGRAD1       String?   @db.VarChar(3)
  KEYGRAD2       String?   @db.VarChar(3)
  CHECKGRAD      String?   @db.VarChar(20)
  DATE_KEY       DateTime? @db.DateTime
  DATE_TRAN      DateTime? @db.DateTime
  LEC_DAY        String?   @db.VarChar(100)
  LAB_DAY        String?   @db.VarChar(100)
  APPROVE        String?   @db.VarChar(3)
  APPROVE_W      String?   @db.VarChar(4)
  DATE_REG       DateTime? @default(now(), map: "DF_register_back_60_2_DATE_REG") @db.DateTime
  DATE_Drop      DateTime? @db.DateTime
  LATE           String?   @db.VarChar(2)
  KU5            String?   @db.VarChar(2)
  TEMP_NO        Int?      @default(0, map: "DF_register_back_60_2_TEMP_NO")
  PAGEKU5        Int?      @default(0, map: "DF_register_back_60_2_PAGEKU5")
  KU_REPORT      String?   @db.VarChar(3)
  REMARK         String?   @db.VarChar(255)
  cat            String?   @db.VarChar(2)
  selec_d        String?   @db.VarChar(1)
  status_test    String?   @default("Y", map: "DF_register_back_60_2_status_test") @db.VarChar(2)
  note           String?   @db.VarChar(255)
  CHECK_EVAL     String?   @db.VarChar(2)
  score_temp     Float?
  PAGE_NET       Int?      @default(0, map: "DF_register_back_60_2_PAGE_NET")
  ID_NET         Int?      @default(0, map: "DF_register_back_60_2_ID_NET")
  user_Drop      String?   @db.VarChar(30)
  HOST_NAME_Drop String?   @db.VarChar(50)
  user_save      String?   @db.VarChar(50)
  IP_SAVE        String?   @db.VarChar(20)
  CHECK_CS       String?   @db.VarChar(2)
  user_upgrade   String?   @db.VarChar(50)
  ip_upgrade     String?   @db.VarChar(50)
  user_unDrop    String?   @db.VarChar(30)
  date_undrop    DateTime? @db.DateTime
  KEYGRADKU71    String?   @db.VarChar(3)
  KEYGRADKU72    String?   @db.VarChar(3)
  CHECKGRADEKU7  String?   @db.VarChar(20)
  NUMBER_KU7     String?   @db.VarChar(10)
  DATESEND_KU7   String?   @db.VarChar(20)
  DATE_KU7       DateTime? @db.DateTime
  IP_SAVE_KU7    String?   @db.VarChar(20)
  MAJOR          String?   @db.VarChar(5)
  KU7_ID         String?   @db.VarChar(10)
  test_room      String?   @db.VarChar(20)
  test_date_time String?   @db.VarChar(50)
  KU5_ID         String?   @db.VarChar(10)
  DATE_KU5       DateTime? @db.DateTime

  @@ignore
}

model register_d {
  NNO            Int       @id(map: "PK_register_d") @default(autoincrement())
  STD_ID         String?   @db.VarChar(10)
  SM_SEM         String?   @db.VarChar(2)
  SM_YR          String?   @db.VarChar(4)
  N_SEM          String?   @default("1", map: "DF_register_d_N_SEM") @db.VarChar(2)
  ATTR           String?   @db.VarChar(5)
  ATTR_OLD       String?   @db.VarChar(5)
  RG_TYPE        String?   @db.VarChar(2)
  CS_CODE        String?   @db.VarChar(12)
  PLAN_YR        String?   @db.VarChar(50)
  LC_SECTION     Int?
  LC_CREDIT      Int?
  LB_SECTION     Int?
  LB_CREDIT      Int?
  LB_TYPE        Int?
  TT_CREDIT      Int?
  MON_LEC        Float?    @db.Money
  MON_LAB        Float?    @db.Money
  COURSE_FEE     Int?
  FLAG           String?   @db.VarChar(1)
  CAMPUS_ID      String?   @db.VarChar(1)
  TYPE_STUD      String?   @db.VarChar(1)
  RG_STAT        String?   @db.VarChar(1)
  GRAD           String?   @db.VarChar(2)
  G_CONFIRM      String?   @db.VarChar(2)
  CS_MONEY       Float?    @db.Money
  CODE_PAYME     String?   @db.VarChar(1)
  FEE_LEC        Float?    @db.Money
  FEE_LAB        Float?    @db.Money
  IDKU5          Int?
  NOREC          Int?
  SCORE          Float?
  KEYGRAD1       String?   @db.VarChar(3)
  KEYGRAD2       String?   @db.VarChar(3)
  CHECKGRAD      String?   @db.VarChar(20)
  DATE_KEY       DateTime? @db.DateTime
  DATE_TRAN      DateTime? @db.DateTime
  LEC_DAY        String?   @db.VarChar(100)
  LAB_DAY        String?   @db.VarChar(100)
  APPROVE        String?   @db.VarChar(3)
  APPROVE_W      String?   @db.VarChar(3)
  DATE_REG       DateTime? @db.DateTime
  DATE_Drop      DateTime? @default(now(), map: "DF_register_d_DATE_Drop") @db.DateTime
  LATE           String?   @db.VarChar(2)
  KU5            String?   @db.VarChar(2)
  TEMP_NO        Int?
  PAGEKU5        Int?
  KU_REPORT      String?   @db.VarChar(3)
  REMARK         String?   @db.VarChar(255)
  cat            String?   @db.VarChar(2)
  selec_d        String?   @db.VarChar(1)
  status_test    String?   @db.VarChar(2)
  note           String?   @db.VarChar(255)
  CHECK_EVAL     String?   @db.VarChar(2)
  score_temp     Float?
  PAGE_NET       Int?      @default(0, map: "DF_register_d_PAGE_NET")
  ID_NET         Int?      @default(0, map: "DF_register_d_ID_NET")
  user_Drop      String?   @db.VarChar(30)
  HOST_NAME_Drop String?   @db.VarChar(50)
  user_save      String?   @db.VarChar(50)
  IP_SAVE        String?   @db.VarChar(50)
  CHECK_CS       String?   @db.VarChar(2)
  user_upgrade   String?   @db.VarChar(50)
  user_unDrop    String?   @db.VarChar(30)
  date_undrop    DateTime? @db.DateTime
  KEYGRADKU71    String?   @db.VarChar(3)
  KEYGRADKU72    String?   @db.VarChar(3)
  CHECKGRADEKU7  String?   @db.VarChar(20)
  NUMBER_KU7     String?   @db.VarChar(10)
  DATESEND_KU7   String?   @db.VarChar(20)
  DATE_KU7       DateTime? @db.DateTime
  IP_SAVE_KU7    String?   @db.VarChar(20)
  MAJOR          String?   @db.VarChar(5)
  KU7_ID         String?   @db.VarChar(10)
  test_room      String?   @db.VarChar(20)
  test_date_time String?   @db.VarChar(50)
  KU5_ID         String?   @db.VarChar(10)
  DATE_KU5       DateTime? @db.DateTime
  gencode1       String?   @db.VarChar(100)

  @@index([NNO], map: "IX_register_d")
}

model register_end {
  NNO           Int
  STD_ID        String    @db.VarChar(10)
  SM_SEM        String    @db.VarChar(2)
  SM_YR         String    @db.VarChar(2)
  N_SEM         String    @default("1", map: "DF_register_end_N_SEM") @db.VarChar(2)
  ATTR          String    @db.VarChar(2)
  ATTR_OLD      String    @db.VarChar(2)
  RG_TYPE       String?   @db.VarChar(2)
  CS_CODE       String    @db.VarChar(12)
  LC_SECTION    Int       @default(0, map: "DF_register_end_LC_SECTION")
  LC_CREDIT     Int?      @default(0, map: "DF_register_end_LC_CREDIT")
  LB_SECTION    Int       @default(0, map: "DF_register_end_LB_SECTION")
  LB_CREDIT     Int?      @default(0, map: "DF_register_end_LB_CREDIT")
  LB_TYPE       Int?      @default(0, map: "DF_register_end_LB_TYPE")
  TT_CREDIT     Int?      @default(0, map: "DF_register_end_TT_CREDIT")
  MON_LEC       Float?    @default(0, map: "DF_register_end_MON_LEC") @db.Money
  MON_LAB       Float?    @default(0, map: "DF_register_end_MON_LAB") @db.Money
  COURSE_FEE    Int?      @default(0, map: "DF_register_end_COURSE_FEE")
  FLAG          String?   @db.VarChar(1)
  CAMPUS_ID     String?   @db.VarChar(1)
  TYPE_STUD     String?   @db.VarChar(1)
  RG_STAT       String?   @db.VarChar(1)
  GRAD          String?   @db.VarChar(2)
  G_CONFIRM     String?   @db.VarChar(2)
  CS_MONEY      Float?    @default(0, map: "DF_register_end_CS_MONEY") @db.Money
  CODE_PAYME    String?   @db.VarChar(1)
  FEE_LEC       Float?    @default(0, map: "DF_register_end_FEE_LEC") @db.Money
  FEE_LAB       Float?    @default(0, map: "DF_register_end_FEE_LAB") @db.Money
  IDKU5         Int?
  NOREC         Int?
  SCORE         Float?
  KEYGRAD1      String?   @db.VarChar(3)
  KEYGRAD2      String?   @db.VarChar(3)
  CHECKGRAD     String?   @db.VarChar(20)
  DATE_KEY      DateTime? @db.DateTime
  DATE_TRAN     DateTime? @db.DateTime
  LEC_DAY       String?   @db.VarChar(100)
  LAB_DAY       String?   @db.VarChar(100)
  APPROVE       String?   @db.VarChar(3)
  APPROVE_W     String?   @db.VarChar(3)
  DATE_REG      DateTime? @default(now(), map: "DF_register_end_DATE_REG") @db.DateTime
  DATE_Drop     DateTime? @db.DateTime
  LATE          String?   @db.VarChar(2)
  KU5           String?   @db.VarChar(2)
  TEMP_NO       Int?      @default(0, map: "DF_register_end_TEMP_NO")
  PAGEKU5       Int?      @default(0, map: "DF_register_end_PAGEKU5")
  KU_REPORT     String?   @db.VarChar(3)
  REMARK        String?   @db.VarChar(255)
  cat           String?   @db.VarChar(2)
  selec_d       String?   @db.VarChar(1)
  status_test   String?   @default("Y", map: "DF_register_end_status_test") @db.VarChar(2)
  note          String?   @db.VarChar(255)
  CHECK_EVAL    String?   @db.VarChar(2)
  score_temp    Float?
  PAGE_NET      Int?      @default(0, map: "DF_register_end_PAGE_NET")
  ID_NET        Int?      @default(0, map: "DF_register_end_ID_NET")
  user_Drop     String?   @db.VarChar(30)
  HOST_NAME     String?   @db.VarChar(50)
  user_save     String?   @db.VarChar(30)
  IP_SAVE       String?   @db.VarChar(20)
  CHECK_CS      String?   @db.VarChar(2)
  user_upgrade  String?   @db.VarChar(50)
  ip_upgrade    String?   @db.VarChar(50)
  user_unDrop   String?   @db.VarChar(30)
  date_undrop   DateTime? @db.DateTime
  KEYGRADKU71   String?   @db.VarChar(3)
  KEYGRADKU72   String?   @db.VarChar(3)
  CHECKGRADEKU7 String?   @db.VarChar(20)
  NUMBER_KU7    String?   @db.VarChar(10)
  DATESEND_KU7  String?   @db.VarChar(20)
  DATE_KU7      DateTime? @db.DateTime
  IP_SAVE_KU7   String?   @db.VarChar(20)
  MAJOR         String?   @db.VarChar(5)
  KU7_ID        String?   @db.VarChar(10)

  @@id([NNO, STD_ID, SM_SEM, SM_YR, N_SEM, ATTR, ATTR_OLD, CS_CODE, LC_SECTION, LB_SECTION], map: "PK_register_end")
}

model register_isea {
  NNO            Int       @default(autoincrement())
  STD_ID         String    @db.VarChar(10)
  SM_SEM         String    @db.VarChar(2)
  SM_YR          String    @db.VarChar(4)
  N_SEM          String    @default("1", map: "DF_register_isea_N_SEM") @db.VarChar(2)
  ATTR           String    @db.VarChar(2)
  ATTR_OLD       String    @db.VarChar(2)
  RG_TYPE        String?   @db.VarChar(2)
  CS_CODE        String    @db.VarChar(12)
  SUBJECT_CODE   String?   @db.VarChar(20)
  PLAN_YR        String?   @db.VarChar(50)
  LC_SECTION     Int       @default(0, map: "DF_register_isea_LC_SECTION")
  LC_CREDIT      Int?      @default(0, map: "DF_register_isea_LC_CREDIT")
  LB_SECTION     Int       @default(0, map: "DF_register_isea_LB_SECTION")
  LB_CREDIT      Int?      @default(0, map: "DF_register_isea_LB_CREDIT")
  LB_TYPE        Int?      @default(0, map: "DF_register_isea_LB_TYPE")
  TT_CREDIT      Int?      @default(0, map: "DF_register_isea_TT_CREDIT")
  MON_LEC        Float?    @default(0, map: "DF_register_isea_MON_LEC") @db.Money
  MON_LAB        Float?    @default(0, map: "DF_register_isea_MON_LAB") @db.Money
  COURSE_FEE     Int?      @default(0, map: "DF_register_isea_COURSE_FEE")
  FLAG           String?   @db.VarChar(1)
  CAMPUS_ID      String?   @db.VarChar(1)
  TYPE_STUD      String?   @db.VarChar(1)
  RG_STAT        String?   @db.VarChar(1)
  GRAD           String?   @db.VarChar(2)
  G_CONFIRM      String?   @db.VarChar(2)
  CS_MONEY       Float?    @default(0, map: "DF_register_isea_CS_MONEY") @db.Money
  CODE_PAYME     String?   @db.VarChar(1)
  FEE_LEC        Float?    @default(0, map: "DF_register_isea_FEE_LEC") @db.Money
  FEE_LAB        Float?    @default(0, map: "DF_register_isea_FEE_LAB") @db.Money
  IDKU5          Int?
  NOREC          Int?
  SCORE          Float?
  KEYGRAD1       String?   @db.VarChar(3)
  KEYGRAD2       String?   @db.VarChar(3)
  CHECKGRAD      String?   @db.VarChar(20)
  DATE_KEY       DateTime? @db.DateTime
  DATE_TRAN      DateTime? @db.DateTime
  LEC_DAY        String?   @db.VarChar(100)
  LAB_DAY        String?   @db.VarChar(100)
  APPROVE        String?   @db.VarChar(3)
  APPROVE_W      String?   @db.VarChar(4)
  DATE_REG       DateTime? @default(now(), map: "DF_register_isea_DATE_REG") @db.DateTime
  DATE_Drop      DateTime? @db.DateTime
  LATE           String?   @db.VarChar(2)
  KU5            String?   @db.VarChar(2)
  TEMP_NO        Int?      @default(0, map: "DF_register_isea_TEMP_NO")
  PAGEKU5        Int?      @default(0, map: "DF_register_isea_PAGEKU5")
  KU_REPORT      String?   @db.VarChar(3)
  REMARK         String?   @db.VarChar(255)
  cat            String?   @db.VarChar(2)
  selec_d        String?   @db.VarChar(1)
  status_test    String?   @default("Y", map: "DF_register_isea_status_test") @db.VarChar(2)
  note           String?   @db.VarChar(255)
  CHECK_EVAL     String?   @db.VarChar(2)
  score_temp     Float?
  PAGE_NET       Int?      @default(0, map: "DF_register_isea_PAGE_NET")
  ID_NET         Int?      @default(0, map: "DF_register_isea_ID_NET")
  user_Drop      String?   @db.VarChar(30)
  HOST_NAME_Drop String?   @db.VarChar(50)
  user_save      String?   @db.VarChar(50)
  IP_SAVE        String?   @db.VarChar(20)
  CHECK_CS       String?   @db.VarChar(2)
  user_upgrade   String?   @db.VarChar(50)
  ip_upgrade     String?   @db.VarChar(50)
  user_unDrop    String?   @db.VarChar(30)
  date_undrop    DateTime? @db.DateTime
  KEYGRADKU71    String?   @db.VarChar(3)
  KEYGRADKU72    String?   @db.VarChar(3)
  CHECKGRADEKU7  String?   @db.VarChar(20)
  NUMBER_KU7     String?   @db.VarChar(10)
  DATESEND_KU7   String?   @db.VarChar(20)
  DATE_KU7       DateTime? @db.DateTime
  IP_SAVE_KU7    String?   @db.VarChar(20)
  MAJOR          String?   @db.VarChar(5)
  KU7_ID         String?   @db.VarChar(10)
  test_room      String?   @db.VarChar(20)
  test_date_time String?   @db.VarChar(50)
  KU5_ID         String    @default("0", map: "DF_register_isea_KU5_ID") @db.VarChar(10)
  DATE_KU5       DateTime? @db.DateTime
  gencode1       String?   @db.VarChar(100)
  ISEA           String?   @db.VarChar(50)

  @@id([NNO, STD_ID, SM_SEM, SM_YR, N_SEM, ATTR, CS_CODE, LC_SECTION, LB_SECTION], map: "PK_register_isea")
}

model register_old {
  NNO            Int       @default(autoincrement())
  STD_ID         String    @db.VarChar(10)
  SM_SEM         String    @db.VarChar(2)
  SM_YR          String    @db.VarChar(4)
  N_SEM          String    @default("1", map: "DF_register_now_N_SEM") @db.VarChar(2)
  ATTR           String    @db.VarChar(5)
  ATTR_OLD       String    @db.VarChar(5)
  RG_TYPE        String?   @db.VarChar(2)
  CS_CODE        String    @db.VarChar(12)
  LC_SECTION     Int       @default(0, map: "DF_register_now_LC_SECTION")
  LC_CREDIT      Int?      @default(0, map: "DF_register_now_LC_CREDIT")
  LB_SECTION     Int       @default(0, map: "DF_register_now_LB_SECTION")
  LB_CREDIT      Int?      @default(0, map: "DF_register_now_LB_CREDIT")
  LB_TYPE        Int?      @default(0, map: "DF_register_now_LB_TYPE")
  TT_CREDIT      Int?      @default(0, map: "DF_register_now_TT_CREDIT")
  MON_LEC        Float?    @default(0, map: "DF_register_now_MON_LEC") @db.Money
  MON_LAB        Float?    @default(0, map: "DF_register_now_MON_LAB") @db.Money
  COURSE_FEE     Int?      @default(0, map: "DF_register_now_COURSE_FEE")
  FLAG           String?   @db.VarChar(1)
  CAMPUS_ID      String?   @db.VarChar(1)
  TYPE_STUD      String?   @db.VarChar(1)
  RG_STAT        String?   @db.VarChar(1)
  GRAD           String?   @db.VarChar(2)
  G_CONFIRM      String?   @db.VarChar(2)
  CS_MONEY       Float?    @default(0, map: "DF_register_now_CS_MONEY") @db.Money
  CODE_PAYME     String?   @db.VarChar(1)
  FEE_LEC        Float?    @default(0, map: "DF_register_now_FEE_LEC") @db.Money
  FEE_LAB        Float?    @default(0, map: "DF_register_now_FEE_LAB") @db.Money
  IDKU5          Int?
  NOREC          Int?
  SCORE          Float?
  KEYGRAD1       String?   @db.VarChar(3)
  KEYGRAD2       String?   @db.VarChar(3)
  CHECKGRAD      String?   @db.VarChar(20)
  DATE_KEY       DateTime? @db.DateTime
  DATE_TRAN      DateTime? @db.DateTime
  LEC_DAY        String?   @db.VarChar(100)
  LAB_DAY        String?   @db.VarChar(100)
  APPROVE        String?   @db.VarChar(3)
  APPROVE_W      String?   @db.VarChar(3)
  DATE_REG       DateTime? @default(now(), map: "DF_register_now_DATE_REG") @db.DateTime
  DATE_Drop      DateTime? @db.DateTime
  LATE           String?   @db.VarChar(2)
  KU5            String?   @db.VarChar(2)
  TEMP_NO        Int?      @default(0, map: "DF_register_now_TEMP_NO")
  PAGEKU5        Int?      @default(0, map: "DF_register_now_PAGEKU5")
  KU_REPORT      String?   @db.VarChar(3)
  REMARK         String?   @db.VarChar(255)
  cat            String?   @db.VarChar(2)
  selec_d        String?   @db.VarChar(1)
  status_test    String?   @default("Y", map: "DF_register_now_status_test") @db.VarChar(2)
  note           String?   @db.VarChar(255)
  CHECK_EVAL     String?   @db.VarChar(2)
  score_temp     Float?
  PAGE_NET       Int?      @default(0, map: "DF_register_now_PAGE_NET")
  ID_NET         Int?      @default(0, map: "DF_register_now_ID_NET")
  user_Drop      String?   @db.VarChar(30)
  HOST_NAME_Drop String?   @db.VarChar(50)
  user_save      String?   @db.VarChar(50)
  IP_SAVE        String?   @db.VarChar(20)
  CHECK_CS       String?   @db.VarChar(2)
  user_upgrade   String?   @db.VarChar(50)
  ip_upgrade     String?   @db.VarChar(50)
  user_unDrop    String?   @db.VarChar(30)
  date_undrop    DateTime? @db.DateTime
  KEYGRADKU71    String?   @db.VarChar(3)
  KEYGRADKU72    String?   @db.VarChar(3)
  CHECKGRADEKU7  String?   @db.VarChar(20)
  NUMBER_KU7     String?   @db.VarChar(10)
  DATESEND_KU7   String?   @db.VarChar(20)
  DATE_KU7       DateTime? @db.DateTime
  IP_SAVE_KU7    String?   @db.VarChar(20)
  MAJOR          String?   @db.VarChar(5)
  KU7_ID         String?   @db.VarChar(10)

  @@id([NNO, STD_ID, SM_SEM, SM_YR, N_SEM, ATTR, ATTR_OLD, CS_CODE, LC_SECTION, LB_SECTION], map: "PK_register_now")
}

model register_oldx {
  NNO            Int
  STD_ID         String    @db.VarChar(10)
  SM_SEM         String    @db.VarChar(2)
  SM_YR          String    @db.VarChar(4)
  N_SEM          String    @default("1", map: "DF_register_oldx_N_SEM") @db.VarChar(2)
  ATTR           String    @db.VarChar(2)
  ATTR_OLD       String    @db.VarChar(2)
  RG_TYPE        String?   @db.VarChar(2)
  CS_CODE        String    @db.VarChar(12)
  LC_SECTION     Int       @default(0, map: "DF_register_oldx_LC_SECTION")
  LC_CREDIT      Int?      @default(0, map: "DF_register_oldx_LC_CREDIT")
  LB_SECTION     Int       @default(0, map: "DF_register_oldx_LB_SECTION")
  LB_CREDIT      Int?      @default(0, map: "DF_register_oldx_LB_CREDIT")
  LB_TYPE        Int?      @default(0, map: "DF_register_oldx_LB_TYPE")
  TT_CREDIT      Int?      @default(0, map: "DF_register_oldx_TT_CREDIT")
  MON_LEC        Float?    @default(0, map: "DF_register_oldx_MON_LEC") @db.Money
  MON_LAB        Float?    @default(0, map: "DF_register_oldx_MON_LAB") @db.Money
  COURSE_FEE     Int?      @default(0, map: "DF_register_oldx_COURSE_FEE")
  FLAG           String?   @db.VarChar(1)
  CAMPUS_ID      String?   @db.VarChar(1)
  TYPE_STUD      String?   @db.VarChar(1)
  RG_STAT        String?   @db.VarChar(1)
  GRAD           String?   @db.VarChar(2)
  G_CONFIRM      String?   @db.VarChar(2)
  CS_MONEY       Float?    @default(0, map: "DF_register_oldx_CS_MONEY") @db.Money
  CODE_PAYME     String?   @db.VarChar(1)
  FEE_LEC        Float?    @default(0, map: "DF_register_oldx_FEE_LEC") @db.Money
  FEE_LAB        Float?    @default(0, map: "DF_register_oldx_FEE_LAB") @db.Money
  IDKU5          Int?
  NOREC          Int?
  SCORE          Float?
  KEYGRAD1       String?   @db.VarChar(3)
  KEYGRAD2       String?   @db.VarChar(3)
  CHECKGRAD      String?   @db.VarChar(20)
  DATE_KEY       DateTime? @db.DateTime
  DATE_TRAN      DateTime? @db.DateTime
  LEC_DAY        String?   @db.VarChar(100)
  LAB_DAY        String?   @db.VarChar(100)
  APPROVE        String?   @db.VarChar(3)
  APPROVE_W      String?   @db.VarChar(3)
  DATE_REG       DateTime? @default(now(), map: "DF_register_oldx_DATE_REG") @db.DateTime
  DATE_Drop      DateTime? @db.DateTime
  LATE           String?   @db.VarChar(2)
  KU5            String?   @db.VarChar(2)
  TEMP_NO        Int?      @default(0, map: "DF_register_oldx_TEMP_NO")
  PAGEKU5        Int?      @default(0, map: "DF_register_oldx_PAGEKU5")
  KU_REPORT      String?   @db.VarChar(3)
  REMARK         String?   @db.VarChar(255)
  cat            String?   @db.VarChar(2)
  selec_d        String?   @db.VarChar(1)
  status_test    String?   @default("Y", map: "DF_register_oldx_status_test") @db.VarChar(2)
  note           String?   @db.VarChar(255)
  CHECK_EVAL     String?   @db.VarChar(2)
  score_temp     Float?
  PAGE_NET       Int?      @default(0, map: "DF_register_oldx_PAGE_NET")
  ID_NET         Int?      @default(0, map: "DF_register_oldx_ID_NET")
  user_Drop      String?   @db.VarChar(30)
  HOST_NAME_Drop String?   @db.VarChar(50)
  user_save      String?   @db.VarChar(50)
  IP_SAVE        String?   @db.VarChar(20)
  CHECK_CS       String?   @db.VarChar(2)
  user_upgrade   String?   @db.VarChar(50)
  ip_upgrade     String?   @db.VarChar(50)
  user_unDrop    String?   @db.VarChar(30)
  date_undrop    DateTime? @db.DateTime
  KEYGRADKU71    String?   @db.VarChar(3)
  KEYGRADKU72    String?   @db.VarChar(3)
  CHECKGRADEKU7  String?   @db.VarChar(20)
  NUMBER_KU7     String?   @db.VarChar(10)
  DATESEND_KU7   String?   @db.VarChar(20)
  DATE_KU7       DateTime? @db.DateTime
  IP_SAVE_KU7    String?   @db.VarChar(20)
  MAJOR          String?   @db.VarChar(5)
  KU7_ID         String?   @db.VarChar(10)

  @@id([STD_ID, SM_SEM, SM_YR, N_SEM, ATTR, ATTR_OLD, CS_CODE, LC_SECTION, LB_SECTION], map: "PK_register_oldx")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model register_temp_grade {
  NNO          Int
  STD_ID       String    @db.VarChar(10)
  SM_SEM       String    @db.VarChar(2)
  SM_YR        String    @db.VarChar(4)
  N_SEM        String    @default("1", map: "DF_register_temp_grade_N_SEM") @db.VarChar(2)
  ATTR         String    @db.VarChar(2)
  ATTR_OLD     String    @db.VarChar(2)
  RG_TYPE      String?   @db.VarChar(2)
  CS_CODE      String    @db.VarChar(12)
  LC_SECTION   Int       @default(0, map: "DF_register_temp_grade_LC_SECTION")
  LB_SECTION   Int       @default(0, map: "DF_register_temp_grade_LB_SECTION")
  TT_CREDIT    Int?      @default(0, map: "DF_register_temp_grade_TT_CREDIT")
  KEYGRAD1     String?   @db.VarChar(3)
  KEYGRAD2     String?   @db.VarChar(3)
  CHECKGRAD    String?   @db.VarChar(20)
  DATE_KEY     DateTime? @db.DateTime
  user_upgrade String?   @db.VarChar(50)
  ip_upgrade   String?   @db.VarChar(50)
  gencode1     String    @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model registerend43 {
  STD_ID     String?   @db.NVarChar(10)
  NOREC      Int?
  Expr1002   String?   @db.NVarChar(3)
  SM_SEM     String?   @db.NVarChar(1)
  SM_YR      String?   @db.NVarChar(2)
  ATTR       String?   @db.NVarChar(2)
  ATTR_OLD   String?   @db.NVarChar(2)
  RG_TYPE    String?   @db.NVarChar(2)
  CS_CODE    String?   @db.NVarChar(8)
  LC_SECTION Int?
  LC_CREDIT  Int?
  LB_SECTION Int?
  LB_CREDIT  Int?
  LB_TYPE    Int?
  TT_CREDIT  Int?
  MON_LEC    Float?    @db.Money
  MON_LAB    Float?    @db.Money
  COURSE_FEE Int?
  FLAG       String?   @db.NVarChar(1)
  CAMPUS_ID  String?   @db.NVarChar(1)
  TYPE_STUD  String?   @db.NVarChar(1)
  RG_STAT    String?   @db.NVarChar(1)
  GRAD       String?   @db.NVarChar(2)
  CS_MONEY   Float?    @db.Money
  CODE_PAYME String?   @db.NVarChar(1)
  FEE_LEC    Float?    @db.Money
  FEE_LAB    Float?    @db.Money
  DATE_REG   DateTime? @db.DateTime
  KEYGRAD1   String?   @db.NVarChar(3)
  KEYGRAD2   String?   @db.NVarChar(3)
  KU_REPORT  String?   @db.NVarChar(3)
  PAGEKU5    Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model repay {
  id       String?   @db.VarChar(10)
  name     String?   @db.VarChar(50)
  detail   String?   @db.VarChar(100)
  amount   Decimal?  @db.Decimal(18, 0)
  Type     String?   @db.VarChar(2)
  sm_yr    String?   @db.VarChar(2)
  sm_sem   String?   @db.VarChar(1)
  datetime DateTime? @db.SmallDateTime

  @@ignore
}

model replace_card {
  nno_id    Int
  book_id   Int
  id        String  @db.VarChar(10)
  date_give String? @db.VarChar(30)
  date_end  String? @db.VarChar(30)
  user_save String? @db.VarChar(10)
  r_no      Int?
  n_no      Int?

  @@id([nno_id, book_id, id], map: "PK_replace_card")
  @@index([nno_id, book_id, id], map: "IX_replace_card")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model replace_num {
  book_id Int?
  nno_id  Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Report_AV {

  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // ลำดับ Float? @map("ลำดับ")
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // เลขประจำตัวประชาชน String? @map("เลขประจำตัวประชาชน") @db.NVarChar(255)
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // รหัสประจำตัวนิสิต String? @map("รหัสประจำตัวนิสิต") @db.NVarChar(255)
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // คำนำหน้า String? @map("คำนำหน้า") @db.NVarChar(255)
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // ชื่อ String? @map("ชื่อ") @db.NVarChar(255)
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // นามสกุล String? @map("นามสกุล") @db.NVarChar(255)
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // คณะ String? @map("คณะ") @db.NVarChar(255)
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // หลักสูตร/สาขาวิชา String? @map("หลักสูตร/สาขาวิชา") @db.NVarChar(255)
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // ระดับ String? @map("ระดับ") @db.NVarChar(255)
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // ค่าธรรมเนียมการศึกษา Float? @map("ค่าธรรมเนียมการศึกษา")
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // หลักฐานอ้างอิงการเบิกจ่าย String? @map("หลักฐานอ้างอิงการเบิกจ่าย") @db.NVarChar(255)
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // จำนวนเงินที่ได้รับการสนับสนุนจากรัฐ Float? @map("จำนวนเงินที่ได้รับการสนับสนุนจากรัฐ")
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // หลักฐานอ้างอิงการเลิกจ่าย String? @map("หลักฐานอ้างอิงการเลิกจ่าย") @db.NVarChar(255)
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // จำนวนเงินที่มหาวิทยาลัยสมทบ Float? @map("จำนวนเงินที่มหาวิทยาลัยสมทบ")
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // เขตข้อมูล15 String? @map("เขตข้อมูล15") @db.NVarChar(255)
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // หมายเหตุ String? @map("หมายเหตุ") @db.NVarChar(255)
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // สาขา String? @map("สาขา") @db.NVarChar(255)
  /// This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // สาขา2 String? @map("สาขา2") @db.NVarChar(255)
  @@ignore
}

model rubrong_ku {
  nno_id       Int     @id(map: "PK_rubrong_ku") @default(autoincrement())
  book_id      String? @db.VarChar(30)
  id           String  @db.VarChar(10)
  date_give    String? @db.VarChar(30)
  user_save    String? @db.VarChar(10)
  type_rubrong String? @db.VarChar(50)
  number_cc    Int?
  status_book  String  @db.VarChar(2)
}

model SAHAKITSRC {
  nno        Int     @default(autoincrement())
  id         String  @db.VarChar(10)
  sm_sem     String  @db.VarChar(2)
  sm_yr      String  @db.VarChar(2)
  N_SEM      String  @default("1", map: "DF_SAHAKITSRC_N_SEM") @db.VarChar(2)
  company    String? @db.VarChar(255)
  province   String? @db.VarChar(255)
  amount_sm1 Float?
  amount_sm2 Float?

  @@id([id, sm_sem, sm_yr, N_SEM], map: "PK_SAHAKITSRC")
  @@index([id, sm_sem, sm_yr, N_SEM, nno], map: "IX_SAHAKITSRC")
}

model scholarship {
  id           String  @id(map: "PK_scholarship") @db.VarChar(10)
  sholarship_f String? @db.VarChar(1)
  scholar_n    String? @db.VarChar(50)
  scholar_u    Int?
  scholar_time Int?
  job_n        String? @db.VarChar(25)
  job_add      String? @db.VarChar(50)
  job_u        Int?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SCHOOL {
  sch_id      String  @db.VarChar(8)
  Schl_namee  String? @db.VarChar(150)
  schl_nameth String? @db.VarChar(150)
  provi       String? @db.VarChar(35)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SCORE {
  YRSM    Float?
  CS_CODE String? @db.VarChar(8)
  ID      String? @db.VarChar(8)
  SECTION String? @db.VarChar(3)
  RG_TYPE String? @db.VarChar(2)
  CR_HR   String? @db.VarChar(2)
  GRADE   String? @db.VarChar(2)
  scores  Float?  @db.Money
  CR_HR_t Float?
  codeyr  String? @db.VarChar(8)

  @@ignore
}

model score_advisor {
  nno             Int     @default(autoincrement())
  sm_yr           String  @db.VarChar(2)
  sm_sem          String? @db.VarChar(2)
  std_id          String  @db.VarChar(10)
  idtea           String  @db.VarChar(10)
  problem         String? @db.VarChar(2)
  found_advisor   String? @db.VarChar(2)
  found_subject   String? @db.VarChar(250)
  found_frequency String? @db.VarChar(250)
  ans1            Int?    @default(0, map: "DF_score_advisor_ans1")
  ans2            Int?    @default(0, map: "DF_score_advisor_ans2")
  ans3            Int?    @default(0, map: "DF_score_advisor_ans3")
  ans4            Int?    @default(0, map: "DF_score_advisor_ans4")
  ans5            Int?    @default(0, map: "DF_score_advisor_ans5")
  ans6            Int?    @default(0, map: "DF_score_advisor_ans51")
  ans7            Int?    @default(0, map: "DF_score_advisor_ans51_1")
  ans2_1          Int?    @default(0, map: "DF_score_advisor_ans51_2")
  ans2_2          Int?    @default(0, map: "DF_score_advisor_ans2_11")
  ans2_3          Int?    @default(0, map: "DF_score_advisor_ans2_11_1")
  ans2_4          Int?    @default(0, map: "DF_score_advisor_ans2_11_2")
  ans2_5          Int?    @default(0, map: "DF_score_advisor_ans2_11_3")
  ans3_1          Int?    @default(0, map: "DF_score_advisor_ans2_11_4")
  ans3_2          Int?    @default(0, map: "DF_score_advisor_ans3_11")
  ans3_3          Int?    @default(0, map: "DF_score_advisor_ans3_21")
  ans3_4          Int?    @default(0, map: "DF_score_advisor_ans3_21_1")
  ans3_5          Int?    @default(0, map: "DF_score_advisor_ans3_21_2")
  ans4_1          Int?    @default(0, map: "DF_score_advisor_ans3_51")
  ans4_2          Int?    @default(0, map: "DF_score_advisor_ans4_11")
  ans4_3          Int?    @default(0, map: "DF_score_advisor_ans4_21")
  ans4_4          Int?    @default(0, map: "DF_score_advisor_ans4_21_1")
  note            String? @db.VarChar(4000)
  approve_eval    String? @db.VarChar(2)

  @@id([sm_yr, std_id, idtea], map: "PK_score_advisor_1")
}

model score_eval {
  nno          Int       @default(autoincrement())
  sm_sem       String    @db.VarChar(2)
  sm_yr        String    @db.VarChar(4)
  N_SEM        String    @default("1", map: "DF_score_eval_N_SEM") @db.VarChar(2)
  std_id       String    @db.VarChar(10)
  cyear        String    @db.VarChar(50)
  sec_lec1     Int
  sec_lab1     Int
  idtea        String    @db.VarChar(100)
  IDTEA_All    String?   @db.VarChar(100)
  ans1         Int?      @default(0, map: "DF_score_eval_ans1")
  ans2         Int?      @default(0, map: "DF_score_eval_ans2")
  ans3         Int?      @default(0, map: "DF_score_eval_ans3")
  ans4         Int?      @default(0, map: "DF_score_eval_ans4")
  ans5         Int?      @default(0, map: "DF_score_eval_ans5")
  ans6         Int?      @default(0, map: "DF_score_eval_ans6")
  ans7         Int?      @default(0, map: "DF_score_eval_ans7")
  ans8         Int?      @default(0, map: "DF_score_eval_ans8")
  ans9         Int?      @default(0, map: "DF_score_eval_ans9")
  ans10        Int?      @default(0, map: "DF_score_eval_ans10")
  ans11        Int?      @default(0, map: "DF_score_eval_ans11")
  ans12        Int?      @default(0, map: "DF_score_eval_ans12")
  ans13        Int?      @default(0, map: "DF_score_eval_ans13")
  approve_eval String?   @db.VarChar(2)
  note         String?   @db.VarChar(3000)
  ans14        Int?      @default(0, map: "DF_score_eval_ans131")
  ans15        Int?      @default(0, map: "DF_score_eval_ans131_1")
  ans16        Int?      @default(0, map: "DF_score_eval_ans131_2")
  ans17        Int?      @default(0, map: "DF_score_eval_ans131_3")
  ans18        Int?      @default(0, map: "DF_score_eval_ans131_4")
  number_eval  String    @db.VarChar(1)
  dateinsert   DateTime? @default(now(), map: "DF_score_eval_dateinsert") @db.DateTime
  check_eval   String?   @db.VarChar(5)

  @@id([sm_sem, sm_yr, N_SEM, std_id, cyear, sec_lec1, sec_lab1, idtea, number_eval], map: "PK_score_eval_1")
  @@index([nno, sm_sem, sm_yr, std_id, cyear, sec_lab1, sec_lec1, idtea, number_eval, approve_eval, N_SEM], map: "IX_score_eval")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model score_eval_65_2_2 {
  ID           Int       @default(autoincrement())
  nno          Float?
  N_SEM        String?   @db.NVarChar(255)
  sm_sem       String?   @db.NVarChar(255)
  sm_yr        String?   @db.NVarChar(255)
  std_id       String?   @db.NVarChar(255)
  cyear        String?   @db.NVarChar(255)
  sec_lec1     Float?
  sec_lab1     Float?
  ans1         Float?
  idtea        String?   @db.NVarChar(255)
  IDTEA_All    String?   @db.NVarChar(255)
  ans2         Float?
  ans3         Float?
  ans4         Float?
  ans5         Float?
  ans6         Float?
  ans7         Float?
  ans10        Float?
  ans8         Float?
  ans9         Float?
  ans11        Float?
  ans12        Float?
  ans13        Float?
  ans14        Float?
  approve_eval String?   @db.NVarChar(255)
  note         String?   @db.NVarChar(255)
  ans15        Float?
  ans16        Float?
  ans17        Float?
  ans18        Float?
  number_eval  String?   @db.NVarChar(255)
  dateinsert   DateTime? @db.DateTime
  check_eval   String?   @db.NVarChar(255)

  @@ignore
}

model score_eval_advisor {
  nno                 Int     @default(autoincrement())
  sm_sem              String? @db.VarChar(2)
  sm_yr               String  @db.VarChar(4)
  std_id              String  @db.VarChar(10)
  idtea               String  @db.VarChar(10)
  sex                 String? @db.VarChar(2)
  major               String? @db.VarChar(50)
  std_grp             String? @db.VarChar(2)
  problem             String? @db.VarChar(2)
  found_advisor       String? @db.VarChar(2)
  found_subject       String? @db.VarChar(250)
  found_subject_other String? @db.VarChar(500)
  found_number        String? @db.VarChar(2)
  found_number_other  String? @db.VarChar(250)
  ans1                Int?    @default(0, map: "DF_score_eval_advisor_ans1")
  ans2                Int?    @default(0, map: "DF_score_eval_advisor_ans2")
  ans3                Int?    @default(0, map: "DF_score_eval_advisor_ans3")
  ans4                Int?    @default(0, map: "DF_score_eval_advisor_ans4")
  ans5                Int?    @default(0, map: "DF_score_eval_advisor_ans5")
  ans6                Int?    @default(0, map: "DF_score_eval_advisor_ans6")
  ans7                Int?    @default(0, map: "DF_score_eval_advisor_ans7")
  ans8                Int?    @default(0, map: "DF_score_eval_advisor_ans8")
  ans9                Int?    @default(0, map: "DF_score_eval_advisor_ans9")
  ans10               Int?    @default(0, map: "DF_score_eval_advisor_ans10")
  ans11               Int?    @default(0, map: "DF_score_eval_advisor_ans11")
  ans12               Int?    @default(0, map: "DF_score_eval_advisor_ans12")
  ans13               Int?    @default(0, map: "DF_score_eval_advisor_ans13")
  ans14               Int?    @default(0, map: "DF_score_eval_advisor_ans14")
  ans15               Int?    @default(0, map: "DF_score_eval_advisor_ans15")
  ans16               Int?    @default(0, map: "DF_score_eval_advisor_ans16")
  ans17               Int?    @default(0, map: "DF_score_eval_advisor_ans17")
  ans18               Int?    @default(0, map: "DF_score_eval_advisor_ans18")
  ans19               Int?
  ans20               Int?
  ans21               Int?
  ans22               Int?
  ans23               Int?
  ans24               Int?
  ans25               Int?
  ans26               Int?
  ans27               Int?
  ans28               Int?
  ans29               Int?
  ans30               Int?
  ans31               Int?
  ans32               Int?
  ans33               Int?
  ans34               Int?
  ans35               Int?
  ans36               Int?
  ans37               Int?
  approve_eval        String? @db.VarChar(2)
  note                String? @db.VarChar(4000)

  @@id([sm_yr, std_id, idtea], map: "PK_score_eval_advisor")
}

model score_eval_cs_happy {
  nno     Int     @default(autoincrement())
  sm_sem  String  @db.VarChar(2)
  sm_yr   String  @db.VarChar(2)
  std_id  String  @db.VarChar(10)
  cs_code String  @db.VarChar(12)
  ans1    Int?    @default(0, map: "DF_score_eval_cs_happy_ans1")
  ans2    Int?    @default(0, map: "DF_score_eval_cs_happy_ans2")
  note    String? @db.VarChar(500)

  @@id([sm_sem, sm_yr, std_id, cs_code], map: "PK_score_eval_cs_happy")
}

model score_eval_self_student {
  nno          Int     @default(autoincrement())
  sm_sem       String  @db.VarChar(2)
  sm_yr        String  @db.VarChar(4)
  number_eval  String  @db.VarChar(1)
  std_id       String  @db.VarChar(10)
  cyear        String  @db.VarChar(50)
  sec_lec1     Int
  sec_lab1     Int
  idtea        String  @db.VarChar(10)
  ans1         Int?    @default(0, map: "DF_score_eval_self_student_ans1")
  ans2         Int?    @default(0, map: "DF_score_eval_self_student_ans2")
  ans3         Int?    @default(0, map: "DF_score_eval_self_student_ans3")
  ans4         Int?    @default(0, map: "DF_score_eval_self_student_ans4")
  ans5         Int?    @default(0, map: "DF_score_eval_self_student_ans5")
  ans6         Int?    @default(0, map: "DF_score_eval_self_student_ans6")
  ans7         Int?    @default(0, map: "DF_score_eval_self_student_ans7")
  ans8         Int?    @default(0, map: "DF_score_eval_self_student_ans8")
  ans9         Int?    @default(0, map: "DF_score_eval_self_student_ans9")
  ans10        Int?    @default(0, map: "DF_score_eval_self_student_ans10")
  ans11        Int?    @default(0, map: "DF_score_eval_self_student_ans11")
  ans12        Int?    @default(0, map: "DF_score_eval_self_student_ans12")
  ans13        Int?    @default(0, map: "DF_score_eval_self_student_ans13")
  approve_eval String? @db.VarChar(2)
  note         String? @db.VarChar(4000)

  @@id([sm_sem, sm_yr, number_eval, std_id, cyear, sec_lec1, sec_lab1, idtea], map: "PK_score_eval_self_student")
}

model score_eval_self_teacher {
  nno          Int       @default(autoincrement())
  sm_sem       String    @db.VarChar(2)
  sm_yr        String    @db.VarChar(4)
  number_eval  String    @db.VarChar(1)
  idtea        String    @db.VarChar(10)
  cyear        String    @db.VarChar(50)
  ans1         Int?      @default(0, map: "DF_score_eval_self_teacher_ans1")
  ans2         Int?      @default(0, map: "DF_score_eval_self_teacher_ans2")
  ans3         Int?      @default(0, map: "DF_score_eval_self_teacher_ans3")
  ans4         Int?      @default(0, map: "DF_score_eval_self_teacher_ans4")
  ans5         Int?      @default(0, map: "DF_score_eval_self_teacher_ans5")
  ans6         Int?      @default(0, map: "DF_score_eval_self_teacher_ans6")
  ans7         Int?      @default(0, map: "DF_score_eval_self_teacher_ans7")
  ans8         Int?      @default(0, map: "DF_score_eval_self_teacher_ans8")
  ans9         Int?      @default(0, map: "DF_score_eval_self_teacher_ans9")
  ans10        Int?      @default(0, map: "DF_score_eval_self_teacher_ans10")
  ans11        Int?      @default(0, map: "DF_score_eval_self_teacher_ans11")
  ans12        Int?      @default(0, map: "DF_score_eval_self_teacher_ans12")
  ans13        Int?      @default(0, map: "DF_score_eval_self_teacher_ans13")
  approve_eval String?   @db.VarChar(2)
  note         String?   @db.VarChar(4000)
  date_save    DateTime? @default(now(), map: "DF_score_eval_self_teacher_date_save") @db.DateTime

  @@id([sm_sem, sm_yr, number_eval, idtea, cyear], map: "PK_score_eval_self_teacher")
}

model score_eval_structure {
  nno          Int       @default(autoincrement())
  std_id       String    @db.VarChar(10)
  sta          Int?
  sex          Int?
  major        Int?
  ans1         Int?      @default(0, map: "DF_score_eval_structure_ans1")
  ans2         Int?      @default(0, map: "DF_score_eval_structure_ans2")
  ans3         Int?      @default(0, map: "DF_score_eval_structure_ans3")
  ans4         Int?      @default(0, map: "DF_score_eval_structure_ans4")
  ans5         Int?      @default(0, map: "DF_score_eval_structure_ans5")
  ans6         Int?      @default(0, map: "DF_score_eval_structure_ans6")
  ans7         Int?      @default(0, map: "DF_score_eval_structure_ans7")
  ans8         Int?      @default(0, map: "DF_score_eval_structure_ans8")
  ans9         Int?      @default(0, map: "DF_score_eval_structure_ans9")
  ans10        Int?      @default(0, map: "DF_score_eval_structure_ans10")
  ans11        Int?      @default(0, map: "DF_score_eval_structure_ans101")
  ans12        Int?      @default(0, map: "DF_score_eval_structure_ans111")
  ans13        Int?      @default(0, map: "DF_score_eval_structure_ans111_1")
  approve_eval String?   @db.VarChar(2)
  note         String?   @db.VarChar(500)
  date_update  DateTime? @default(now(), map: "DF_score_eval_structure_date_update") @db.DateTime

  @@id([nno, std_id], map: "PK_score_eval_structure")
}

model score_eval_system {
  nno          Int       @id(map: "PK_score_eval_system") @default(autoincrement())
  sm_sem       String    @db.VarChar(2)
  sm_yr        String    @db.VarChar(2)
  id           String?   @db.VarChar(10)
  type_per     String?   @db.VarChar(2)
  type_sys     String    @db.VarChar(2)
  ans1         Int?      @default(0, map: "DF_score_eval_system_ans1")
  ans2         Int?      @default(0, map: "DF_score_eval_system_ans2")
  ans3         Int?      @default(0, map: "DF_score_eval_system_ans3")
  ans4         Int?      @default(0, map: "DF_score_eval_system_ans4")
  ans5         Int?      @default(0, map: "DF_score_eval_system_ans5")
  ans6         Int?      @default(0, map: "DF_score_eval_system_ans6")
  ans7         Int?      @default(0, map: "DF_score_eval_system_ans7")
  ans8         Int?      @default(0, map: "DF_score_eval_system_ans8")
  ans9         Int?      @default(0, map: "DF_score_eval_system_ans9")
  ans10        Int?      @default(0, map: "DF_score_eval_system_ans10")
  ans11        Int?      @default(0, map: "DF_score_eval_system_ans11")
  ans12        Int?      @default(0, map: "DF_score_eval_system_ans12")
  ans13        Int?      @default(0, map: "DF_score_eval_system_ans13")
  ans14        Int?      @default(0, map: "DF_score_eval_system_ans14")
  ans15        Int?      @default(0, map: "DF_score_eval_system_ans15")
  note         String?   @db.VarChar(2000)
  approve_eval String?   @db.VarChar(2)
  survey1      String?   @db.VarChar(1000)
  survey2      String?   @db.VarChar(1000)
  survey3      String?   @db.VarChar(1000)
  survey4      String?   @db.VarChar(1000)
  survey5      String?   @db.VarChar(1000)
  date_save    DateTime? @default(now(), map: "DF_score_eval_system_date_save") @db.DateTime

  @@index([nno, id, sm_sem, sm_yr, type_sys, type_per], map: "IX_score_eval_system")
}

model score_ku5 {
  GENCODE1     String    @db.VarChar(100)
  STD_ID       String    @db.VarChar(10)
  KU5_ID       String    @db.VarChar(10)
  SM_SEM       String    @db.VarChar(2)
  SM_YR        String    @db.VarChar(4)
  N_SEM        String    @default("1", map: "DF_score_ku5_N_SEM") @db.VarChar(2)
  ATTR         String    @db.VarChar(2)
  CS_CODE      String    @db.VarChar(12)
  LC_SECTION   Int       @default(0, map: "DF_score_ku5_LC_SECTION")
  LB_SECTION   Int       @default(0, map: "DF_score_ku5_LB_SECTION")
  TT_CREDIT    Int?      @default(0, map: "DF_score_ku5_TT_CREDIT")
  KEYGRAD1     String?   @db.VarChar(3)
  KEYGRAD2     String?   @db.VarChar(3)
  SCORE        Float?
  DATE_KEY     DateTime? @db.DateTime
  user_upgrade String?   @db.VarChar(50)
  remark       String?   @db.VarChar(100)

  @@id([GENCODE1, STD_ID, KU5_ID, SM_SEM, SM_YR, N_SEM, ATTR, CS_CODE, LC_SECTION, LB_SECTION], map: "PK_score_ku5")
  @@index([GENCODE1, KU5_ID, CS_CODE, LC_SECTION, LB_SECTION, SM_SEM, SM_YR, N_SEM], map: "IX_score_ku5")
}

model score_ku7 {
  NNO           Int       @default(autoincrement())
  GENCODE1      String?   @db.VarChar(100)
  KU7_ID        String    @db.VarChar(10)
  STD_ID        String    @db.VarChar(10)
  SM_SEM        String    @db.VarChar(1)
  SM_YR         String    @db.VarChar(2)
  N_SEM         String    @default("1", map: "DF_score_ku7_N_SEM") @db.VarChar(2)
  CYEAR         String    @db.VarChar(12)
  SECTION       Int?      @default(0, map: "DF_scored_ku7_LC_SECTION")
  KEYGRADE1_KU7 String?   @db.VarChar(2)
  KEYGRADE2_KU7 String?   @db.VarChar(2)
  DATEKEY_KU7   DateTime? @default(now(), map: "DF_scored_ku7_DATEKEY_KU7") @db.DateTime
  CHECKGRAD_KU7 String?   @db.VarChar(20)
  REMARK        String?   @db.VarChar(255)
  HOST_NAME     String?   @default("host_name()", map: "DF_score_ku7_HOST_NAME") @db.VarChar(50)
  USER_SAVE     String?   @default("suser_sname()", map: "DF_score_ku7_USER_SAVE") @db.VarChar(30)
  LC_SECTION    Int       @default(0, map: "DF_score_ku7_LC_SECTION")
  LB_SECTION    Int       @default(0, map: "DF_score_ku7_LB_SECTION")
  RG_TYPE       String?   @db.VarChar(2)
  OLD_GRADE     String?   @db.VarChar(2)
  IDTEA         String?   @db.VarChar(10)
  TEACHER       String?   @db.VarChar(50)
  DATETRAN_KU7  DateTime? @db.DateTime
  TT_CREDIT     Int?
  upfile        String?   @db.VarChar(200)
  upfiledate    DateTime? @db.DateTime
  ipupfile      String?   @db.VarChar(20)

  @@id([NNO, KU7_ID, STD_ID, SM_SEM, SM_YR, N_SEM, CYEAR], map: "PK_scored_ku7")
  @@index([NNO, KU7_ID, STD_ID, SM_SEM, SM_YR, CYEAR], map: "IX_score_ku7")
}

model score_plan {
  RUN_NO            Int      @default(autoincrement())
  P_NO              Float?
  STD_ID            String   @db.VarChar(10)
  CUR_ID            String?  @db.VarChar(15)
  MAJOR             String?  @db.VarChar(15)
  GROUP_ID          String?  @db.VarChar(5)
  CS_CODE           String?  @db.VarChar(12)
  COURSE_NAME       String?  @db.VarChar(255)
  CREDIT            Int?
  P_CREDIT          String?  @db.VarChar(15)
  G_DESCC           String?  @db.VarChar(255)
  G_CREDIT          Int?
  SM_SEM            String?  @db.VarChar(2)
  SM_YR             String?  @db.VarChar(2)
  N_SEM             String?  @default("1", map: "DF_score_plan_N_SEM") @db.VarChar(2)
  PLAN_YR           String?  @db.VarChar(10)
  CYEAR             String?  @db.VarChar(12)
  CR_HR             String?  @db.VarChar(3)
  GRADE             String?  @db.VarChar(10)
  MAIN_ID           String?  @db.VarChar(5)
  M_DESCC           String?  @db.VarChar(255)
  G_UNIT            String?  @db.VarChar(16)
  M_UNIT            String?  @db.VarChar(16)
  M_CREDIT          Int?
  RG_TYPE           String?  @db.VarChar(2)
  RG_STATUS         String?  @db.VarChar(10)
  YRSM              Int?
  GRADE1            String?  @db.VarChar(2)
  GRADE2            String?  @db.VarChar(2)
  GRADE3            String?  @db.VarChar(2)
  GRADE4            String?  @db.VarChar(2)
  GRADE5            String?  @db.VarChar(2)
  GRADE6            String?  @db.VarChar(2)
  GRADE7            String?  @db.VarChar(2)
  GRADE8            String?  @db.VarChar(2)
  GRADE9            String?  @db.VarChar(2)
  GRADE10           String?  @db.VarChar(2)
  GRADE11           String?  @db.VarChar(2)
  GRADE12           String?  @db.VarChar(2)
  SM_YR1            String?  @db.VarChar(7)
  SM_YR2            String?  @db.VarChar(7)
  SM_YR3            String?  @db.VarChar(7)
  SM_YR4            String?  @db.VarChar(7)
  SM_YR5            String?  @db.VarChar(7)
  SM_YR6            String?  @db.VarChar(7)
  SM_YR7            String?  @db.VarChar(7)
  SM_YR8            String?  @db.VarChar(7)
  SM_YR9            String?  @db.VarChar(7)
  SM_YR10           String?  @db.VarChar(7)
  SM_YR11           String?  @db.VarChar(7)
  SM_YR12           String?  @db.VarChar(7)
  AVGS              Decimal? @db.Decimal(10, 2)
  SUMCR             Int?
  DISP_AVG          String?  @db.VarChar(20)
  pre               String?  @db.VarChar(100)
  GROUP_SUBJECT     String?  @db.VarChar(100)
  code_virtual      String?  @db.VarChar(12)
  check_plan        String?  @db.VarChar(2)
  CS_CODE_PLAN      String?  @db.VarChar(15)
  GROUP_GENED       String?  @db.VarChar(100)
  G_SELECT_ONLY     String?  @db.VarChar(5)
  G_SELECT_ONLY_CRE Int?

  @@id([RUN_NO, STD_ID], map: "PK_score_plan")
  @@index([STD_ID, COURSE_NAME, CS_CODE, CUR_ID, CYEAR, code_virtual, RUN_NO, P_NO, PLAN_YR, MAJOR, MAIN_ID], map: "IX_score_plan")
}

model scoreed {
  YRSM          Int
  CS_CODE       String    @db.VarChar(10)
  SUBJECT_CODE  String?   @db.VarChar(12)
  PLAN_YR       String?   @db.VarChar(50)
  ID            String    @db.VarChar(10)
  SECTION       String?   @db.VarChar(8)
  RG_TYPE       String?   @db.VarChar(2)
  RG_STATUS     String?   @db.VarChar(7)
  CR_HR         String?   @default("0", map: "DF_scoreed_CR_HR") @db.VarChar(2)
  GRADE         String?   @db.VarChar(2)
  scores        Float?    @db.Money
  CR_HR_t       Float?
  codeyr        String    @db.VarChar(12)
  SM_SEM        String    @db.VarChar(2)
  SM_YR         String    @db.VarChar(4)
  N_SEM         String    @default("1", map: "DF_scoreed_N_SEM") @db.VarChar(2)
  cs_code_isea  String?   @db.VarChar(20)
  DATE_UPDATE   DateTime? @db.DateTime
  code_virtual  String?   @db.VarChar(12)
  ip_update     String?   @db.VarChar(30)
  REMARK        String?   @db.VarChar(50)
  AVGS          String?   @db.VarChar(20)
  TERM          String?   @db.VarChar(2)
  TRANSFER_ENG  String?   @db.VarChar(100)
  TRANSFER_THAI String?   @db.VarChar(100)
  OLD_GRADE     String?   @db.VarChar(2)
  LC_SECTION    Int       @default(0, map: "DF_scoreed_LC_SECTION")
  LB_SECTION    Int       @default(0, map: "DF_scoreed_LB_SECTION")

  @@id([YRSM, CS_CODE, ID, codeyr, SM_SEM, SM_YR, N_SEM], map: "PK_scoreed")
  @@index([codeyr, ID, YRSM, CS_CODE, SM_SEM, SM_YR, N_SEM, GRADE, code_virtual], map: "IX_scoreedx")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Scoreed_audit {
  YRSM                 Int
  ID                   String   @db.VarChar(10)
  CS_CODE              String   @db.VarChar(10)
  PLAN_YR              String?  @db.VarChar(50)
  GRADE                String   @db.VarChar(2)
  CODEYR               String   @db.VarChar(12)
  Insert_Delete_Update String   @db.VarChar(3)
  Modified_User        String   @db.VarChar(30)
  Modified_Date        DateTime @db.DateTime
  Modified_IP          String   @default("host_name()", map: "DF_Scoreed_audit_Modified_IP") @db.VarChar(30)
  OLD_GRADE            String   @db.VarChar(2)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Scoreed_audit_temp {
  YRSM                 Int
  ID                   String   @db.VarChar(10)
  CS_CODE              String   @db.VarChar(10)
  GRADE                String   @db.VarChar(2)
  CODEYR               String   @db.VarChar(12)
  Insert_Delete_Update String   @db.VarChar(3)
  Modified_User        String   @db.VarChar(30)
  Modified_Date        DateTime @db.DateTime
  Modified_IP          String?  @db.VarChar(20)

  @@ignore
}

model scoreed_temp {
  nno          Int       @default(autoincrement())
  YRSM         Int
  CS_CODE      String    @db.VarChar(10)
  ID           String    @db.VarChar(10)
  COURSE_NAM   String?   @db.VarChar(250)
  SECTION      String?   @db.VarChar(8)
  RG_TYPE      String?   @db.VarChar(2)
  RG_STATUS    String?   @db.VarChar(7)
  CR_HR        String?   @db.VarChar(2)
  GRADE        String?   @db.VarChar(2)
  scores       Float?
  CR_HR_t      Float?
  codeyr       String    @db.VarChar(12)
  SM_SEM       String    @db.VarChar(2)
  SM_YR        String    @db.VarChar(4)
  N_SEM        String    @default("1", map: "DF_scoreed_temp_N_SEM") @db.VarChar(2)
  DATE_UPDATE  DateTime? @db.DateTime
  code_virtual String?   @db.VarChar(12)
  ip_update    String?   @db.VarChar(30)
  REMARK       String?   @db.VarChar(50)
  AVGS         String?   @db.VarChar(20)
  TERM         String?   @db.VarChar(2)

  @@id([nno, YRSM, CS_CODE, ID, codeyr, SM_SEM, SM_YR, N_SEM], map: "PK_scoreed_temp")
  @@index([ID, CS_CODE, codeyr, SM_YR, SM_SEM, N_SEM, nno, TERM], map: "IX_scoreed_temp")
}

model scoreed_temp1 {
  YRSM          Int
  CS_CODE       String    @db.VarChar(10)
  ID            String    @db.VarChar(10)
  SECTION       String?   @db.VarChar(8)
  RG_TYPE       String?   @db.VarChar(2)
  RG_STATUS     String?   @db.VarChar(7)
  CR_HR         String?   @default("0", map: "DF_scoreed_temp1_CR_HR") @db.VarChar(2)
  GRADE         String?   @db.VarChar(2)
  scores        Float?    @db.Money
  CR_HR_t       Float?
  codeyr        String    @db.VarChar(12)
  SM_SEM        String    @db.VarChar(2)
  SM_YR         String    @db.VarChar(4)
  N_SEM         String    @default("1", map: "DF_scoreed_temp1_N_SEM") @db.VarChar(2)
  DATE_UPDATE   DateTime? @db.DateTime
  code_virtual  String?   @db.VarChar(12)
  ip_update     String?   @db.VarChar(30)
  REMARK        String?   @db.VarChar(50)
  AVGS          String?   @db.VarChar(20)
  TERM          String?   @db.VarChar(2)
  TRANSFER_ENG  String?   @db.VarChar(100)
  TRANSFER_THAI String?   @db.VarChar(100)
  OLD_GRADE     String?   @db.VarChar(2)

  @@id([YRSM, CS_CODE, ID, codeyr, SM_SEM, SM_YR, N_SEM], map: "PK_scoreed_temp1")
  @@index([YRSM, codeyr, CS_CODE, ID, N_SEM, SM_SEM, SM_YR, GRADE], map: "IX_scoreed_temp1")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SENDENDKU {
  LEV_ID           Float?
  YEAR             Float?
  SEMESTER         Float?
  CAMPUS_ID        String? @db.VarChar(2)
  FAC_ID           String? @db.VarChar(2)
  MAJOR_ID         String? @db.VarChar(5)
  MAJOR_NAME       String? @db.VarChar(100)
  DEGREE_NAME      String? @db.VarChar(100)
  DEGREE_NAME_E    String? @db.VarChar(100)
  ROUND            String? @db.VarChar(2)
  STD_ID           String? @db.VarChar(10)
  STD_TITLE        String? @db.VarChar(10)
  STD_NAME         String? @db.VarChar(100)
  STD_MIDDLENAME   String? @db.VarChar(100)
  STD_SURNAME      String? @db.VarChar(100)
  STD_TITLE_E      String? @db.VarChar(10)
  STD_NAME_E       String? @db.VarChar(100)
  STD_MIDDLENAME_E String? @db.VarChar(100)
  STD_SURNAME_E    String? @db.VarChar(100)
  GPA              Float?
  HONOR_NAME       String? @db.VarChar(100)
  REMARK           String? @db.VarChar(100)
  STD_SEX          String? @db.VarChar(2)
  NATIONALITY_NAME String? @db.VarChar(10)
  APPROVE_DATE     String? @db.VarChar(50)
  EXTRA_STATUS     String? @db.VarChar(2)
  CURRI_TH         String? @db.VarChar(100)
  CURR_INTER_ID    Float?
  PRJ_TH           String? @db.VarChar(2)
  TYPE_C           String? @db.VarChar(10)
  NOTE             String? @db.VarChar(100)
  USERNAME         String? @db.VarChar(10)
  USER_CONTROL_ID  String? @db.VarChar(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model seval {
  nno          Int     @default(autoincrement())
  sm_sem       String? @db.NVarChar(2)
  sm_yr        String? @db.NVarChar(2)
  std_id       String? @db.NVarChar(10)
  cyear        String? @db.NVarChar(50)
  sec_lec1     Int?
  sec_lab1     Int?
  idtea        String? @db.NVarChar(10)
  ans1         Int?
  ans2         Int?
  ans3         Int?
  ans4         Int?
  ans5         Int?
  ans6         Int?
  ans7         Int?
  ans8         Int?
  ans9         Int?
  ans10        Int?
  ans11        Int?
  ans12        Int?
  ans13        Int?
  approve_eval String? @db.NVarChar(2)
  note         String? @db.NText
  ans14        Int?
  ans15        Int?
  ans16        Int?
  ans17        Int?
  ans18        Int?
  number_eval  String? @db.NVarChar(1)

  @@ignore
}

model stats {
  NNO             Int     @default(autoincrement())
  MID             String  @db.VarChar(5)
  SM_SEM          String  @db.VarChar(2)
  SM_YR           String  @db.VarChar(5)
  FAC             String? @db.VarChar(2)
  DESP_T          String? @db.VarChar(80)
  DESP_E          String? @db.VarChar(80)
  FACULTY         String? @db.VarChar(50)
  CURR            String? @db.VarChar(10)
  FAC_T           String? @db.VarChar(35)
  STD_GRP         String? @db.VarChar(5)
  STATUS_MID      String? @db.VarChar(20)
  count_1_male    Int     @default(0, map: "DF_stats_count_1_male")
  count_1_female  Int     @default(0, map: "DF_stats_count_1_female")
  money_1         Float   @default(0, map: "DF_stats_money_1")
  status_keep_1   Int     @default(0, map: "DF_stats_status_keep_1")
  count_2_male    Int     @default(0, map: "DF_stats_count_2_male")
  count_2_female  Int     @default(0, map: "DF_stats_count_2_female")
  count1          Int     @default(0, map: "DF_stats_count1")
  money_2         Float   @default(0, map: "DF_stats_money_11")
  status_keep_2   Int     @default(0, map: "DF_stats_status_keep_11")
  count2          Int     @default(0, map: "DF_stats_count11")
  count_3_male    Int     @default(0, map: "DF_stats_count_3_female")
  count_3_female  Int     @default(0, map: "DF_stats_count_3_female1")
  money_3         Float   @default(0, map: "DF_stats_money_11_1")
  status_keep_3   Int     @default(0, map: "DF_stats_status_keep_11_1")
  count3          Int     @default(0, map: "DF_stats_count11_1")
  count_4_male    Int     @default(0, map: "DF_stats_count_3_female1_1")
  count_4_female  Int     @default(0, map: "DF_stats_count_4_male1")
  money_4         Float   @default(0, map: "DF_stats_money_11_2")
  status_keep_4   Int     @default(0, map: "DF_stats_status_keep_11_2")
  count4          Int     @default(0, map: "DF_stats_count11_2")
  count_5_male    Int     @default(0, map: "DF_stats_count_4_male1_1")
  count_5_female  Int     @default(0, map: "DF_stats_count_4_male1_2")
  money_5         Float   @default(0, map: "DF_stats_money_11_3")
  status_keep_5   Int     @default(0, map: "DF_stats_status_keep_11_3")
  count5          Int     @default(0, map: "DF_stats_count11_3")
  count_6_male    Int     @default(0, map: "DF_stats_count_4_male1_3")
  count_6_female  Int     @default(0, map: "DF_stats_count_4_male1_4")
  money_6         Float   @default(0, map: "DF_stats_money_11_4")
  status_keep_6   Int     @default(0, map: "DF_stats_status_keep_11_4")
  count6          Int     @default(0, map: "DF_stats_count11_4")
  count_7_male    Int     @default(0, map: "DF_stats_count_4_male1_5")
  count_7_female  Int     @default(0, map: "DF_stats_count_4_male1_6")
  money_7         Float   @default(0, map: "DF_stats_money_11_5")
  status_keep_7   Int     @default(0, map: "DF_stats_status_keep_11_5")
  count7          Int     @default(0, map: "DF_stats_count11_5")
  count_8_male    Int     @default(0, map: "DF_stats_count_4_male1_7")
  count_8_female  Int     @default(0, map: "DF_stats_count_4_male1_8")
  money_8         Decimal @default(0, map: "DF_stats_money_11_6") @db.Decimal(18, 0)
  status_keep_8   Int     @default(0, map: "DF_stats_status_keep_11_6")
  count8          Int     @default(0, map: "DF_stats_count11_6")
  C_LEVEL         String  @db.VarChar(50)
  count_all       Int     @default(0, map: "DF_stats_count_all")
  money_all       Float   @default(0, map: "DF_stats_money_all")
  status_keep_all Int     @default(0, map: "DF_stats_status_keep_all")
  std5a           Int     @default(0, map: "DF_stats_a5")
  status_o        Int     @default(0, map: "DF_stats_status_o")
  status_c        Int     @default(0, map: "DF_stats_status_o1")
  status_n        Int     @default(0, map: "DF_stats_status_o1_1")
  status_d        Int     @default(0, map: "DF_stats_status_o1_2")

  @@id([MID, SM_SEM, SM_YR], map: "PK_stats")
  @@index([MID, SM_YR, SM_SEM, C_LEVEL], map: "IX_stats")
}

model std_5a {
  id      String  @db.VarChar(10)
  sm      String  @db.VarChar(2)
  year    String  @db.VarChar(24)
  remark  String? @db.VarChar(255)
  credit  Int?
  approve String? @db.VarChar(5)

  @@id([id, sm, year], map: "PK_std_5a_1")
  @@index([id, sm, year, approve], map: "IX_std_5a")
}

model std_cut {
  id_std       String  @db.VarChar(10)
  year         String  @db.VarChar(4)
  term         String  @db.VarChar(2)
  remark       String? @db.VarChar(50)
  check_status String? @db.VarChar(50)
  gpa          String? @db.VarChar(10)

  @@id([id_std, year, term], map: "PK_std_cut")
}

model std_dorm {
  nno         Int     @default(autoincrement())
  std_id      String  @db.VarChar(10)
  name        String? @db.VarChar(250)
  sm_sem      String  @db.VarChar(5)
  sm_yr       String  @db.VarChar(5)
  num_vaccine String? @db.VarChar(10)

  @@id([std_id, sm_sem, sm_yr], map: "PK_std_dorm")
}

model std_end {
  NO                     Int       @default(autoincrement())
  ID                     String    @db.VarChar(10)
  SNAME                  String?   @db.VarChar(10)
  NAME                   String?   @db.VarChar(100)
  LNAME                  String?   @db.VarChar(100)
  GPA                    Float?
  GOOD                   String?   @db.VarChar(100)
  MAJOR                  String?   @db.VarChar(3)
  SM_SEM                 String    @db.VarChar(2)
  SM_YR                  String    @db.VarChar(3)
  N_SEM                  String    @default("1", map: "DF_std_end_N_SEM") @db.VarChar(2)
  DEGREE                 String?   @db.VarChar(1)
  approve                String?   @db.VarChar(5)
  ADDRESS                String?   @db.VarChar(100)
  MOO                    String?   @db.VarChar(100)
  SOI                    String?   @db.VarChar(100)
  ROAD                   String?   @db.VarChar(100)
  TUMBON                 String?   @db.VarChar(100)
  AMPHUR                 String?   @db.VarChar(100)
  PROVINCE               String?   @db.VarChar(100)
  ZIPCODE                String?   @db.VarChar(10)
  PHONE                  String?   @db.VarChar(50)
  DATE_SAVE              DateTime? @default(now(), map: "DF_std_end_DATE_SAVE") @db.DateTime
  E_MAIL                 String?   @db.VarChar(100)
  DATE_RESERVE           String?   @db.VarChar(20)
  STATUS_DOC             String?   @db.VarChar(20)
  REMARK_END             String?   @db.VarChar(100)
  CR_SEM                 Int?
  YEAR_FINISH            String?   @db.VarChar(5)
  CHECKBY_FACULTY        String?   @db.VarChar(2)
  CHECKBY_EDUCATION      String?   @db.VarChar(2)
  CHECKBY_FACULTY_USER   String?   @db.VarChar(10)
  CHECKBY_EDUCATION_USER String?   @db.VarChar(10)
  CHECKBY_FACULTY_DATE   DateTime? @db.DateTime
  CHECKBY_EDUCATION_DATE DateTime? @db.DateTime
  CHECK_PASS             String?   @db.VarChar(10)
  CHECK_PASS_DATE        DateTime? @db.DateTime
  CHECK_PASS_USER        String?   @db.VarChar(10)
  REMARK_END_FACULTY     String?   @db.VarChar(100)
  CHECK_TRANSFER_DATE    DateTime? @db.DateTime
  CHECK_TRANSFER_USER    String?   @db.VarChar(10)
  CHECK_TOEIC            String?   @db.VarChar(10)
  Round                  String?   @db.NChar(10)
  STATUS_SYS             String?   @db.VarChar(5)
  REMARK_KU              String?   @db.VarChar(100)
  DATE_UPDATE            DateTime? @db.DateTime

  @@id([ID, SM_SEM, SM_YR, N_SEM], map: "PK_std_end_1")
  @@index([ID, SM_SEM, SM_YR, NO, N_SEM, NAME], map: "IX_std_end")
}

model std_end63 {
  No           Int     @default(autoincrement())
  nno          Int?
  id           String  @db.VarChar(50)
  yr           String  @db.VarChar(5)
  degree       String? @db.VarChar(255)
  degree_major String? @db.VarChar(250)
  sname        String? @db.VarChar(30)
  name         String? @db.VarChar(255)
  fname        String? @db.VarChar(255)
  lname        String? @db.VarChar(255)
  name_read    String? @db.VarChar(255)
  gpax         String? @db.VarChar(255)
  degree_level String? @db.VarChar(255)
  vaccine      String? @db.VarChar(255)
  check_in     String? @db.VarChar(5)
  group_id     Int?
  group_no     Int?
  email        String? @db.VarChar(255)
  tel          String? @db.VarChar(20)
  fac          String? @db.VarChar(50)

  @@id([id, yr], map: "PK_std_end63")
}

model std_good {
  id     String  @db.VarChar(10)
  sm     String? @db.VarChar(2)
  year   String  @db.VarChar(24)
  remark String? @db.VarChar(50)
  credit Int?
  GPA    Float?

  @@id([id, year], map: "PK_std_good")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model std_leave {
  id     String  @db.VarChar(10)
  sm_l   String? @db.VarChar(2)
  year_l String? @db.VarChar(4)
  remark String? @db.VarChar(50)
  sm_c   String? @db.VarChar(2)
  year_c String? @db.VarChar(4)

  @@ignore
}

model std_out {
  id_std       String  @db.VarChar(10)
  year         String  @db.VarChar(4)
  term         String  @db.VarChar(2)
  remark       String? @db.VarChar(50)
  check_status String? @db.VarChar(50)
  gpa          String? @db.VarChar(10)

  @@id([id_std, year, term], map: "PK_std_out")
}

model std_ponpun {
  nno          Int       @default(autoincrement())
  id           String    @db.VarChar(10)
  p_date       DateTime? @db.DateTime
  end_date     String?   @db.VarChar(50)
  db_no        String?   @db.VarChar(10)
  year         String    @db.VarChar(5)
  sm           String    @db.VarChar(2)
  N_SEM        String    @default("1", map: "DF_std_ponpun_N_SEM") @db.VarChar(2)
  receive_date DateTime? @db.DateTime
  receive      String?   @default("N", map: "DF_std_ponpun_receive") @db.VarChar(2)
  save_date    DateTime? @db.DateTime
  MONEY        Float?    @db.Money
  MONEY_AD     Float?    @db.Money
  SUMMONEY     Float?    @db.Money
  sm_yr        String?   @db.VarChar(5)
  sm_sem       String?   @db.VarChar(1)
  std_id       String?   @db.VarChar(13)
  Remask       String?   @db.VarChar(50)
  dd           DateTime? @db.DateTime

  @@id([id, year, sm, N_SEM], map: "PK_std_ponpun")
  @@index([id, sm_sem, sm_yr, nno, sm, year, N_SEM, receive], map: "IX_std_ponpun")
}

model store_money {
  id     String  @db.NVarChar(8)
  sname  String? @db.NVarChar(10)
  name   String? @db.NVarChar(50)
  maj    String? @db.NVarChar(5)
  sm_sem String  @db.NVarChar(2)
  sm_yr  String  @db.NVarChar(5)
  amount Float?

  @@id([id, sm_sem, sm_yr], map: "PK_store_money")
}

model student_c {
  ID         String    @id(map: "PK_student_c") @db.VarChar(10)
  SNAME      String?   @db.VarChar(20)
  NAME       String?   @db.VarChar(100)
  SNAME_E    String?   @db.VarChar(7)
  NAME_E     String?   @db.VarChar(100)
  MAJOR      String?   @db.VarChar(70)
  MAJOR_E    String?   @db.VarChar(70)
  IDCARD     String?   @db.VarChar(13)
  ADVISO     String?   @db.VarChar(5)
  CAMPUS     String?   @db.VarChar(1)
  FAC        String?   @db.VarChar(3)
  s03        Int?
  engs       String?   @db.VarChar(1)
  scoree     String?   @db.VarChar(50)
  Fsatus     String?   @db.VarChar(2)
  major_c    String?   @db.VarChar(3)
  kulinet    String?   @db.VarChar(20)
  pic        String?   @db.VarChar(50)
  pstatus    String?   @db.VarChar(10)
  COUNT_NUM  Int?
  DATE_PRINT DateTime? @db.DateTime
  Expire     String?   @db.VarChar(20)

  @@index([ID, NAME, MAJOR, kulinet], map: "IX_student_c")
}

model student_kpr {
  ID             Int?
  Year           String? @db.VarChar(4)
  SEMESTER       String? @db.VarChar(2)
  UNIV_ID        String? @db.VarChar(5)
  CITIZEN_ID     String? @db.VarChar(13)
  PREFIX_NAME    String? @db.VarChar(7)
  STD_FNAME      String? @db.VarChar(30)
  STD_LNAME      String? @db.VarChar(30)
  GENDER_ID      String? @db.VarChar(2)
  BIRTHDAY       String? @db.VarChar(15)
  PROVINCE_ID    String? @db.VarChar(3)
  NATION_ID      String? @db.VarChar(3)
  ADMIT_YEAR     String? @db.VarChar(5)
  LEV_ID         String? @db.VarChar(3)
  CURR_ID        String? @db.VarChar(5)
  FAC_ID         String? @db.VarChar(5)
  ISCED_ID       String? @db.VarChar(5)
  PROGRAM_ID     String? @db.VarChar(5)
  MAJOR_ID       String? @db.VarChar(5)
  CURR_TYPE_ID   String? @db.VarChar(2)
  STUDY_TYPE_ID  String? @db.VarChar(2)
  STUDY_TIME_ID  String? @db.VarChar(2)
  CURR_INTER_ID  String? @db.VarChar(2)
  REGULAR_YEAR   String? @db.VarChar(2)
  CURR_REG_ID    String? @db.VarChar(2)
  CLASS          String? @db.VarChar(2)
  GRAD_STATUS_ID String? @db.VarChar(2)
  STD_STATUS_ID  String? @db.VarChar(2)
  GPA            Float?
  ACC_GPA        Float?
  ACC_CREDIT     Float?
  DEFORM_ID      String? @db.VarChar(2)
  FUND_STATUS_ID String? @db.VarChar(2)
  TALENT         String? @db.NVarChar(100)
  SON_NUM        String? @db.VarChar(2)
  SON_STDNUM     String? @db.VarChar(2)
  FAT_FNAME      String? @db.VarChar(50)
  FAT_LNAME      String? @db.VarChar(50)
  FAT_STATUS_ID  String? @db.VarChar(2)
  FAT_REVENUE_ID String? @db.VarChar(2)
  FAT_OCCUP_ID   String? @db.VarChar(2)
  MOT_FNAME      String? @db.VarChar(50)
  MOT_LNAME      String? @db.VarChar(50)
  MOT_STATUS_ID  String? @db.VarChar(2)
  MOT_REVENUE_ID String? @db.VarChar(2)
  MOT_OCCUP_ID   String? @db.VarChar(2)
  PAR_STATUS_ID  String? @db.VarChar(2)
  PAR_FNAME      String? @db.VarChar(50)
  PAR_LNAME      String? @db.VarChar(50)
  PAR_REVENUE_ID String? @db.VarChar(2)
  PAR_OCCUP_ID   String? @db.VarChar(2)
  STD_ID         String  @id(map: "PK_student_kpr") @db.VarChar(10)
  MAJOR_ID1      String? @db.VarChar(5)
  CAMPUS_ID      String? @db.VarChar(2)
  PRE_CODE       String? @db.VarChar(5)
  RELIGION_ID    String? @db.VarChar(5)
  TYPE_ADMIS     String? @db.VarChar(20)
}

model student1 {
  ID             String   @db.VarChar(10)
  GENDER         String?  @db.VarChar(5)
  SNAME          String?  @db.VarChar(50)
  NAME           String?  @db.VarChar(35)
  FNAME          String?  @db.VarChar(35)
  LNAME          String?  @db.VarChar(35)
  CUR_ID         String?  @db.VarChar(15)
  MAJOR          String   @db.VarChar(5)
  MOVEMAJOR      String?  @db.VarChar(5)
  Trom_move      String?  @db.VarChar(10)
  MOVE_Detail    String?  @db.VarChar(100)
  MOVE_YRSM      Int?
  MOVE_Detail_th String?  @db.VarChar(100)
  ADVISO         String   @db.VarChar(20)
  CAMPUS         String?  @db.VarChar(1)
  FAC            String?  @db.VarChar(3)
  ADMIS_FAC      String?  @db.VarChar(10)
  S03            Int?
  ENGS           String?  @db.VarChar(1)
  SCOREE         String?  @db.VarChar(50)
  FSATUS         String?  @db.VarChar(2)
  CREDIT         Int?
  GPA_CHECK_REG  Float    @default(0, map: "DF_student1_GPA_CHECK_REG") @db.Money
  EMPTY_CR_REG   Int      @default(0, map: "DF_student1_EMPTY_CR_REG")
  UNLOCK_REG     String?  @db.VarChar(50)
  GPA            Float    @default(0, map: "DF_student1_GPA") @db.Money
  STATUS         String?  @db.VarChar(2)
  REMARK_STATUS  String?  @db.VarChar(100)
  STATUS_N       String?  @db.VarChar(2)
  Date_f         String?  @db.VarChar(15)
  STATUS_KU      String?  @db.VarChar(2)
  stop           String?  @db.VarChar(100)
  back           String?  @db.VarChar(100)
  stop_sm        String?  @db.VarChar(5)
  stop_yr        String?  @db.VarChar(10)
  Move_sm_yr     String?  @db.VarChar(10)
  Move_date      String?  @db.VarChar(15)
  lost_sm_yr     String?  @db.VarChar(10)
  finish_sm_yr   String?  @db.VarChar(10)
  finish_date    String?  @db.VarChar(15)
  G11            Float?   @db.Money
  G12            Float?   @db.Money
  G13            Float?   @db.Money
  G21            Float?   @db.Money
  G22            Float?   @db.Money
  G23            Float?   @db.Money
  G31            Float?   @db.Money
  G32            Float?   @db.Money
  G33            Float?   @db.Money
  G41            Float?   @db.Money
  G42            Float?   @db.Money
  G43            Float?   @db.Money
  CR1            Int?     @default(0, map: "DF_student1_CR1")
  CR2            Int?     @default(0, map: "DF_student1_CR2")
  CR3            Int?     @default(0, map: "DF_student1_CR3")
  CR4            Int?     @default(0, map: "DF_student1_CR4")
  CR5            Int?     @default(0, map: "DF_student1_CR41")
  CR6            Int?     @default(0, map: "DF_student1_CR41_1")
  CR7            Int?     @default(0, map: "DF_student1_CR41_2")
  CR8            Int?     @default(0, map: "DF_student1_CR41_3")
  C1             Int?     @default(0, map: "DF_student1_CR11")
  C2             Int?     @default(0, map: "DF_student1_C11")
  C3             Int?     @default(0, map: "DF_student1_C11_1")
  C4             Int?     @default(0, map: "DF_student1_C21")
  C5             Int?     @default(0, map: "DF_student1_C31")
  C6             Int?     @default(0, map: "DF_student1_C41")
  C7             Int?     @default(0, map: "DF_student1_C51")
  C8             Int?     @default(0, map: "DF_student1_C61")
  C9             Int?     @default(0, map: "DF_student1_C71")
  C10            Int?     @default(0, map: "DF_student1_C81")
  C11            Int?     @default(0, map: "DF_student1_C91")
  C12            Int?     @default(0, map: "DF_student1_C101")
  idpersoCn      String?  @db.VarChar(13)
  idpersoCn_b    String?  @db.VarChar(13)
  comment        String?  @db.VarChar(500)
  good1          String?  @db.VarChar(2)
  good2          String?  @db.VarChar(2)
  good3          String?  @db.VarChar(2)
  good4          String?  @db.VarChar(2)
  good_now       String?  @db.VarChar(2)
  A1             Int?
  A2             Int?
  A3             Int?
  A4             Int?
  A_now          Int?
  plan_yr        String?  @db.VarChar(10)
  plan_cr        Int?
  TYPE_C         String?  @db.VarChar(20)
  STD_TITLE      String?  @db.VarChar(50)
  STD_NAME       String?  @db.VarChar(35)
  STD_SURNAME    String?  @db.VarChar(35)
  STD_TITLE_E    String?  @db.VarChar(50)
  STD_ENAME      String?  @db.VarChar(50)
  STD_ESURNAME   String?  @db.VarChar(50)
  EXTRA_STATUS   String?  @db.VarChar(5)
  ADMIT_TYPE     String?  @db.Char(1)
  ADMIT_PROJ     String?  @db.VarChar(4)
  CURR_INTER_ID  String?  @db.Char(1)
  PIC            String?  @db.VarChar(100)
  PLAN_GPAX      Decimal? @default(0, map: "DF_student1_PLAN_GPA") @db.Decimal(18, 2)
  PLAN_TTCR      Int?     @default(0, map: "DF_student1_PLAN_CREDIT")
  PLAN_TCR       Int?     @default(0, map: "DF_student1_PLAN_CREDIT_REG")
  SCOREE_ni      String?  @db.VarChar(50)
  BIRTHDAY       String?  @db.VarChar(20)

  @@id([ID, MAJOR, ADVISO], map: "PK_student1_1")
  @@index([ID, NAME, MAJOR, ADVISO, STATUS, FAC], map: "IX_student1")
}

model studentSiracha {
  STD_ID                   String    @id(map: "PK_studentSiracha_1") @db.VarChar(10)
  STD_TITLE                String?   @db.VarChar(30)
  STD_NAME                 String?   @db.VarChar(45)
  STD_SURNAME              String?   @db.VarChar(70)
  STD_TITLE_E              String?   @db.VarChar(30)
  STD_ENAME                String?   @db.VarChar(35)
  STD_ESURNAME             String?   @db.VarChar(35)
  DEGREE                   String?   @db.VarChar(30)
  MAJOR_ID                 String    @db.VarChar(5)
  MAJOR_NAME               String?   @db.VarChar(100)
  CAMPUS_ID                String?   @db.VarChar(2)
  CAMPUS_NAME              String?   @db.VarChar(50)
  SEX                      String?   @db.VarChar(2)
  BIRTHDAY                 String?   @db.VarChar(20)
  AGE                      String?   @db.VarChar(50)
  BORN_PLACE               String?   @db.VarChar(50)
  BORN_COUNTRY             String?   @db.VarChar(50)
  NATION                   String?   @db.VarChar(5)
  NATION_OTHER             String?   @db.VarChar(50)
  RELIGION                 String?   @db.VarChar(5)
  RELIGION_OTHER           String?   @db.VarChar(50)
  ORIGIN                   String?   @db.VarChar(8)
  ORIGIN_OTHER             String?   @db.VarChar(50)
  TALENT                   String?   @db.VarChar(250)
  SON_NUM                  String?   @db.VarChar(5)
  SON_STDNUM               String?   @db.VarChar(50)
  BORROW_TYPE              String?   @db.VarChar(50)
  EDU_PAY                  String?   @db.VarChar(2)
  DEGEE_SCHOOL             String?   @db.VarChar(50)
  NAME_SCHOOL              String?   @db.VarChar(250)
  NAME_E_SCHOOL            String?   @db.VarChar(250)
  AMPHUR_SCHOOL            String?   @db.VarChar(100)
  PROVINCE_SCHOOL          String?   @db.VarChar(50)
  COUNTRY_SCHOOL           String?   @db.VarChar(50)
  GPA_SCHOOL               Decimal?  @db.Decimal(10, 2)
  YEAR_END_SCHOOL          String?   @db.VarChar(10)
  CODE_SCHOOL              String?   @db.VarChar(50)
  BLOOD                    String?   @db.VarChar(5)
  DISEASE                  String?   @db.VarChar(100)
  DOCTOR_NAME              String?   @db.VarChar(50)
  DOCTOR_ADR               String?   @db.VarChar(250)
  DOCTOR_TEL               String?   @db.VarChar(30)
  ADDRESS_CURRENT          String?   @db.VarChar(200)
  MOO_CURRENT              String?   @db.VarChar(10)
  SOI_CURRENT              String?   @db.VarChar(100)
  ROAD_CURRENT             String?   @db.VarChar(100)
  TUMBON_CURRENT           String?   @db.VarChar(100)
  AMPHUR_CURRENT           String?   @db.VarChar(100)
  PROVINCE_CURRENT         String?   @db.VarChar(100)
  ZIPCODE_CURRENT          String?   @db.VarChar(7)
  COUNTRY_CURRENT          String?   @db.VarChar(50)
  TEL_CURRENT              String?   @db.VarChar(50)
  FAX_CURRENT              String?   @db.VarChar(20)
  ADDRESS                  String?   @db.VarChar(500)
  MOO                      String?   @db.VarChar(10)
  SOI                      String?   @db.VarChar(100)
  ROAD                     String?   @db.VarChar(100)
  TUMBON                   String?   @db.VarChar(100)
  AMPHUR                   String?   @db.VarChar(100)
  PROVINCE                 String?   @db.VarChar(100)
  ZIPCODE                  String?   @db.VarChar(7)
  COUNTRY                  String?   @db.VarChar(50)
  TEL                      String?   @db.VarChar(30)
  FAX                      String?   @db.VarChar(20)
  E_MAIL                   String?   @db.VarChar(100)
  MOBILE                   String?   @db.VarChar(30)
  FNAME_FATHER             String?   @db.VarChar(50)
  LNAME_FATHER             String?   @db.VarChar(50)
  AGE_FATHER               String?   @db.VarChar(5)
  PERSON_ID_FATHER         String?   @db.VarChar(250)
  ADDRESS_FATHER           String?   @db.VarChar(200)
  MOO_FATHER               String?   @db.VarChar(10)
  SOI_FATHER               String?   @db.VarChar(100)
  ROAD_FATHER              String?   @db.VarChar(100)
  TUMBON_FATHER            String?   @db.VarChar(100)
  AMPHUR_FATHER            String?   @db.VarChar(100)
  PROVINCE_FATHER          String?   @db.VarChar(100)
  ZIPCODE_FATHER           String?   @db.VarChar(7)
  TEL_FATHER               String?   @db.VarChar(50)
  E_MAIL_FATHER            String?   @db.VarChar(100)
  FNAME_MOTHER             String?   @db.VarChar(50)
  LNAME_MOTHER             String?   @db.VarChar(50)
  AGE_MOTHER               String?   @db.VarChar(5)
  PERSON_ID_MOTHER         String?   @db.VarChar(250)
  ADDRESS_MOTHER           String?   @db.VarChar(200)
  MOO_MOTHER               String?   @db.VarChar(10)
  SOI_MOTHER               String?   @db.VarChar(100)
  ROAD_MOTHER              String?   @db.VarChar(100)
  TUMBON_MOTHER            String?   @db.VarChar(100)
  AMPHUR_MOTHER            String?   @db.VarChar(100)
  PROVINCE_MOTHER          String?   @db.VarChar(100)
  ZIPCODE_MOTHER           String?   @db.VarChar(7)
  TEL_MOTHER               String?   @db.VarChar(30)
  E_MAIL_MOTHER            String?   @db.VarChar(100)
  PERNAME_PARENT           String?   @db.VarChar(50)
  FNAME_PARENT             String?   @db.VarChar(50)
  LNAME_PARENT             String?   @db.VarChar(20)
  AGE_PARENT               String?   @db.VarChar(5)
  PERSON_ID_PARENT         String?   @db.VarChar(255)
  RELATIONSHIP_PARENT      String?   @db.VarChar(50)
  RELATIONSHIP_TYPE_PARENT String?   @db.VarChar(5)
  STATUS_ID_PARENT         String?   @db.VarChar(5)
  ADDRESS_PARENT           String?   @db.VarChar(200)
  MOO_PARENT               String?   @db.VarChar(10)
  SOI_PARENT               String?   @db.VarChar(100)
  ROAD_PARENT              String?   @db.VarChar(100)
  TUMBON_PARENT            String?   @db.VarChar(100)
  AMPHUR_PARENT            String?   @db.VarChar(100)
  PROVINCE_PARENT          String?   @db.VarChar(100)
  ZIPCODE_PARENT           String?   @db.VarChar(7)
  TEL_PARENT               String?   @db.VarChar(50)
  E_MAIL_PARENT            String?   @db.VarChar(100)
  Status_SrC               String?   @db.VarChar(2)
  Status_KU                String?   @db.VarChar(2)
  Major_old                String?   @db.VarChar(5)
  Note                     String?   @db.VarChar(100)
  usersave                 String?   @db.VarChar(50)
  editdate                 DateTime? @default(now(), map: "DF_studentSiracha_editdate") @db.DateTime
  E_MAIL_KU_TH             String?   @db.VarChar(100)
  E_MAIL_LIVE              String?   @db.VarChar(100)

  @@index([STD_ID, MAJOR_ID], map: "IX_studentSiracha")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model sum_cut {
  id        String? @db.VarChar(10)
  sm_yr     String? @db.VarChar(2)
  sm_sem    String? @db.VarChar(2)
  total_cut Int?

  @@ignore
}

model survey_atk {
  nno           Int       @default(autoincrement())
  date_atk      String?   @db.VarChar(50)
  time_atk      String?   @db.VarChar(50)
  std_id        String    @db.VarChar(20)
  username      String?   @db.VarChar(100)
  fac           String?   @db.VarChar(100)
  method_atk    String?   @db.VarChar(100)
  detail_atk    String?   @db.VarChar(250)
  result_atk    String?   @default("N", map: "DF_survey_atk_result_atk") @db.VarChar(50)
  file_atk      String?   @db.VarChar(250)
  date_save     DateTime? @default(now(), map: "DF_survey_atk_date_save") @db.DateTime
  status_update String?   @db.VarChar(5)
  date_update   DateTime? @db.DateTime

  @@id([nno, std_id], map: "PK_survey_atk")
}

model survey_vaccine {
  nno              Int       @default(autoincrement())
  date_survey      String?   @db.VarChar(50)
  std_id           String    @id(map: "PK_survey_vaccine") @db.VarChar(10)
  sname            String?   @db.VarChar(10)
  name             String?   @db.VarChar(250)
  fac              String?   @db.VarChar(250)
  vaccine          String?   @db.VarChar(250)
  tel              String?   @db.VarChar(100)
  province         String?   @db.VarChar(100)
  email            String?   @db.VarChar(100)
  num_vaccine      String?   @db.VarChar(10)
  remark_vaccine   String?   @db.VarChar(250)
  recive_vaccine   String?   @db.VarChar(250)
  date_vaccine     String?   @db.VarChar(250)
  file_certificate String?   @db.VarChar(250)
  status_update    String?   @db.VarChar(5)
  date_update      DateTime? @db.DateTime
}

model sys_open {
  sm_yr        String    @db.VarChar(5)
  sm_sem       String    @db.VarChar(5)
  n_sem        String    @default("1", map: "DF_sys_open_n_sem") @db.VarChar(2)
  date_start   DateTime? @db.DateTime
  date_stop    DateTime? @db.DateTime
  type_open    String    @db.VarChar(2)
  id_prove     String?   @db.VarChar(50)
  status_sys   String?   @db.VarChar(2)
  remark       String?   @db.VarChar(50)
  end_reg      DateTime? @db.DateTime
  run_bll      Int?
  end_pay      String    @default("-", map: "DF_sys_open_end_pay") @db.VarChar(50)
  code_payment String?   @db.VarChar(2)
  end_pay2     String?   @db.VarChar(50)
  end_pay3     String?   @db.VarChar(50)
  end_term     String    @default("-", map: "DF_sys_open_end_term") @db.VarChar(50)
  c_level      String    @db.VarChar(20)
  type_curi    String    @db.VarChar(50)

  @@id([sm_yr, sm_sem, n_sem, type_open, c_level, type_curi], map: "PK_sys_open")
  @@index([sm_yr, sm_sem, type_open, date_start, date_stop, status_sys, n_sem, id_prove, run_bll], map: "IX_sys_open")
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B611E26B92A") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model test_date {
  date_test String? @db.VarChar(50)
  xx        Int?
  yy        Int?
  sm_sem    String? @db.VarChar(2)
  sm_yr     String? @db.VarChar(5)
  sm_test   String? @db.VarChar(2)

  @@ignore
}

model test_person {
  nno               Int       @default(autoincrement())
  person            String    @db.VarChar(100)
  c_level           String    @db.VarChar(10)
  account_nontri    String    @id(map: "PK_test_person_1") @db.VarChar(20)
  check_money       String?   @db.VarChar(2)
  sname             String?   @db.VarChar(50)
  name              String?   @db.VarChar(150)
  sm_semm           String?   @db.VarChar(10)
  fac_id            String    @db.VarChar(5)
  fac               String?   @db.VarChar(250)
  lineId            String?   @db.VarChar(250)
  display_name      String?   @db.VarChar(250)
  active_id         String?   @db.VarChar(5)
  active_id_mail    String?   @db.VarChar(5)
  regis_date        DateTime? @db.DateTime
  account_bank      String?   @default("-", map: "DF_test_person_account_bank") @db.VarChar(20)
  account_bank_name String?   @db.VarChar(50)
}

model test_person_approve {
  nno                    Int       @default(autoincrement())
  approve_id             String    @db.VarChar(10)
  approve_c_level        String    @db.VarChar(10)
  approve_account_nontri String    @id(map: "PK_test_person_approve") @db.VarChar(20)
  approve_sname          String?   @db.VarChar(50)
  approve_name           String?   @db.VarChar(150)
  approve_position       String?   @db.VarChar(150)
  approve_fac_id         String?   @db.VarChar(5)
  approve_fac            String?   @db.VarChar(250)
  approve_lineId         String?   @db.VarChar(250)
  approve_display_name   String?   @db.VarChar(250)
  approve_active_id      String?   @db.VarChar(5)
  approve_regis_date     DateTime? @db.DateTime
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model test_sumson {
  nno        Int     @default(autoincrement())
  std_id     String  @db.VarChar(10)
  sm_sem     String  @db.VarChar(2)
  sm_yr      String  @db.VarChar(4)
  N_SEM      String  @default("1", map: "DF_test_sumson_N_SEM") @db.VarChar(2)
  cs_code1   String  @db.VarChar(50)
  date_test1 String  @db.VarChar(30)
  time_test1 String? @db.VarChar(30)
  room_test1 String? @db.VarChar(20)
  cs_code2   String? @db.VarChar(50)
  date_test2 String? @db.VarChar(30)
  time_test2 String? @db.VarChar(30)
  room_test2 String? @db.VarChar(20)
  cs_code3   String? @db.VarChar(50)
  date_test3 String? @db.VarChar(30)
  time_test3 String? @db.VarChar(50)
  room_test3 String? @db.VarChar(20)
  sm_test    String? @db.VarChar(5)

  @@ignore
}

model test_table {
  nno              Int       @id(map: "PK_test_table") @default(autoincrement())
  sm_sem           String    @db.VarChar(2)
  sm_yr            String    @db.VarChar(4)
  N_SEM            String    @default("1", map: "DF_test_table_N_SEM") @db.VarChar(2)
  sm_test          String    @db.VarChar(2)
  c_level          String?   @default("Bachelor", map: "DF_test_table_c_level") @db.VarChar(10)
  cs_own           String?   @db.VarChar(5)
  attrr            String    @db.VarChar(2)
  date_test        String    @db.VarChar(30)
  time_test        String    @db.VarChar(30)
  time_am_pm       String?   @db.VarChar(5)
  cs_code          String    @db.VarChar(50)
  course_nam       String?   @db.VarChar(200)
  course_name      String?   @db.VarChar(200)
  sec_lec1         String    @default("0", map: "DF_test_table_sec_lec1") @db.VarChar(250)
  sec_lab1         String    @default("0", map: "DF_test_table_sec_lab1") @db.VarChar(250)
  id_start         String?   @db.VarChar(20)
  id_stop          String?   @db.VarChar(20)
  major_level      String?   @db.VarChar(50)
  count_id         Int?
  room_test        String?   @db.VarChar(255)
  build            String?   @db.VarChar(30)
  count_person     Int?      @default(0, map: "DF_test_table_count_person")
  person1          String?   @db.VarChar(100)
  person2          String?   @db.VarChar(100)
  person3          String?   @db.VarChar(100)
  person4          String?   @db.VarChar(100)
  person5          String?   @db.VarChar(100)
  person6          String?   @db.VarChar(100)
  person7          String?   @db.VarChar(100)
  person8          String?   @db.VarChar(100)
  person9          String?   @db.VarChar(100)
  person10         String?   @db.VarChar(100)
  person11         String?   @db.VarChar(100)
  person12         String?   @db.VarChar(100)
  person13         String?   @db.VarChar(100)
  person14         String?   @db.VarChar(100)
  person15         String?   @db.VarChar(100)
  person16         String?   @db.VarChar(100)
  person17         String?   @db.VarChar(100)
  person18         String?   @db.VarChar(100)
  person19         String?   @db.VarChar(100)
  person20         String?   @db.VarChar(100)
  date_week        String?   @db.VarChar(50)
  checked_person1  String?   @db.VarChar(15)
  checked_person2  String?   @db.VarChar(15)
  checked_person3  String?   @db.VarChar(15)
  checked_person4  String?   @db.VarChar(15)
  checked_person5  String?   @db.VarChar(15)
  checked_person6  String?   @db.VarChar(15)
  change_person1   String?   @db.VarChar(100)
  change_person2   String?   @db.VarChar(100)
  change_person3   String?   @db.VarChar(100)
  change_person4   String?   @db.VarChar(100)
  change_person5   String?   @db.VarChar(100)
  change_person6   String?   @db.VarChar(100)
  change_status    String?   @db.VarChar(5)
  money_per        Int?      @default(0, map: "DF_test_table_money_per")
  money_pay        Int?      @default(0, map: "DF_test_table_money_pay")
  roww             String?   @db.VarChar(2)
  cyear            String    @db.VarChar(50)
  num_start        Int?      @default(1, map: "DF_test_table_num_start")
  selectdata       String?   @db.VarChar(2)
  maj_select       String?   @db.VarChar(2)
  date_save        DateTime? @default(now(), map: "DF_test_table_date_save") @db.DateTime
  date_test1       String?   @db.VarChar(30)
  money_check      String?   @db.VarChar(5)
  money_check_date String?   @db.VarChar(15)
  money_check_user String?   @db.VarChar(50)

  @@index([sm_sem, sm_yr, date_test, attrr, sm_test, cyear, course_nam, c_level, N_SEM], map: "IX_test_table")
}

model test_table_schedule {
  no                           Int     @default(autoincrement())
  nno                          Int
  sm_sem                       String  @db.VarChar(2)
  sm_yr                        String  @db.VarChar(4)
  n_sem                        String  @default("1", map: "DF_test_table_approve_N_SEM") @db.VarChar(2)
  sm_test                      String  @db.VarChar(2)
  c_level                      String  @default("Bachelor", map: "DF_test_table_approve_c_level") @db.VarChar(10)
  cs_own                       String? @db.VarChar(5)
  attrr                        String  @db.VarChar(2)
  date_test                    String  @db.VarChar(30)
  time_test                    String  @db.VarChar(30)
  time_am_pm                   String? @db.VarChar(5)
  cs_code                      String  @db.VarChar(50)
  cyear                        String  @db.VarChar(50)
  course_nam                   String? @db.VarChar(200)
  sec_lec1                     String  @default("0", map: "DF_test_table_approve_sec_lec1") @db.VarChar(250)
  sec_lab1                     String  @default("0", map: "DF_test_table_approve_sec_lab1") @db.VarChar(250)
  room_test                    String  @db.VarChar(255)
  id_start                     String? @db.VarChar(20)
  id_stop                      String? @db.VarChar(20)
  count_id                     Int?
  num_start                    Int?    @default(1, map: "DF_test_table_schedule_num_start")
  roww                         String? @db.VarChar(2)
  build                        String? @db.VarChar(30)
  person                       String  @db.VarChar(100)
  person_account_nontri        String  @db.VarChar(100)
  person_sname                 String? @db.VarChar(30)
  person_name                  String? @db.VarChar(100)
  person_fac                   String? @db.VarChar(100)
  person_sign                  String? @db.VarChar(100)
  checked_person               String? @db.VarChar(5)
  person_change_account_nontri String? @db.VarChar(100)
  person_change_sign_date      String? @db.VarChar(100)
  remark                       String? @db.VarChar(500)
  person_change                String? @db.VarChar(100)
  person_change_sname          String? @db.VarChar(30)
  person_change_name           String? @db.VarChar(100)
  person_change_fac            String? @db.VarChar(100)
  person_change_sign           String? @db.VarChar(100)
  person_change_file           String? @db.VarChar(250)
  test_event                   String? @db.VarChar(5)
  test_event_etc               String? @db.VarChar(255)
  person_change_confirm        String? @db.VarChar(5)
  person_count                 String? @db.VarChar(100)
  approve                      String? @db.VarChar(5)
  approve_id                   String? @db.VarChar(20)
  approve_account_nontri       String? @db.VarChar(50)
  approve_sign                 String? @db.VarChar(100)
  approve_sname                String? @db.VarChar(100)
  approve_name                 String? @db.VarChar(100)
  approve_position             String? @db.VarChar(100)
  approve_fac                  String? @db.VarChar(100)
  approve_date                 String? @db.VarChar(30)
  approve_remark               String? @db.VarChar(500)
  approve1                     String? @db.VarChar(5)
  approve_id1                  String? @db.VarChar(20)
  approve_account_nontri1      String? @db.VarChar(50)
  approve_sign1                String? @db.VarChar(100)
  approve_sname1               String? @db.VarChar(100)
  approve_name1                String? @db.VarChar(100)
  approve_position1            String? @db.VarChar(100)
  approve_fac1                 String? @db.VarChar(100)
  approve_date1                String? @db.VarChar(30)
  approve_remark1              String? @db.VarChar(500)
  date_save                    String? @db.VarChar(30)
  money_pay                    Int?    @default(0, map: "DF_test_table_change_money_pay")
  change_status                String? @db.VarChar(5)
  change_date                  String? @db.VarChar(30)
  money_check                  String? @db.VarChar(5)
  money_check_date             String? @db.VarChar(15)
  money_check_user             String? @db.VarChar(50)
  lockk                        String? @default("Y", map: "DF_test_table_schedule_lock") @db.VarChar(1)

  @@id([no, sm_sem, sm_yr, sm_test, c_level, attrr, date_test, time_test, cs_code, cyear, sec_lec1, sec_lab1], map: "PK_test_table_schedule_1")
}

model test_temp_person {
  nno            Int     @default(autoincrement())
  sm_sem         String  @db.VarChar(2)
  sm_yr          String  @db.VarChar(2)
  sm_test        String  @db.VarChar(2)
  person         String  @db.VarChar(100)
  c_level        String  @db.VarChar(10)
  account_nontri String? @db.VarChar(20)
  sname          String? @db.VarChar(50)
  name           String? @db.VarChar(150)
  fac            String? @db.VarChar(250)

  @@id([sm_sem, sm_yr, sm_test, person, c_level], map: "PK_test_temp_person_1")
}

model Toeic_test {
  ID            String    @id(map: "PK_Toeic_61") @db.VarChar(10)
  NAME          String?   @db.VarChar(100)
  SNAME         String?   @db.VarChar(100)
  MAJOR         String?   @db.VarChar(255)
  GPA           Float?
  STATUS        String?   @db.VarChar(5)
  meeting       String?   @db.VarChar(5)
  meeting_date  String?   @db.VarChar(30)
  round_meeting String?   @db.VarChar(20)
  sm_sem        String?   @db.VarChar(2)
  sm_yr         String?   @db.VarChar(5)
  date_test     String?   @db.VarChar(50)
  room_test     String?   @db.VarChar(50)
  confirm_test  String?   @db.VarChar(5)
  date_save     DateTime? @db.DateTime
  time_test     String?   @db.VarChar(50)
  user_save     String?   @db.VarChar(10)
  type_test     String?   @db.VarChar(20)
}

model transbill_admis {
  RUN_NO     Int       @default(autoincrement())
  CUST_NO    String    @db.VarChar(100)
  CUST_NAME  String    @db.VarChar(250)
  PAY_TIME   String?   @db.VarChar(15)
  PAY_DATE   DateTime? @db.DateTime
  REF_NO     String?   @db.VarChar(100)
  FR_BR      String?   @db.VarChar(100)
  amount     Float?
  RV         String?   @db.VarChar(100)
  sm_yr      String    @db.VarChar(4)
  sm_sem     String    @db.VarChar(2)
  bank_name  String?   @db.NVarChar(50)
  N_SEM      String    @default("1", map: "DF_transbill_admis_N_SEM") @db.VarChar(2)
  ADMIS_TYPE String?   @db.VarChar(50)
  PAY_DATE1  String?   @db.VarChar(20)
  dd         String?   @db.VarChar(2)
  mm         String?   @db.VarChar(2)
  yy         String?   @db.VarChar(4)
  APP        String?   @db.VarChar(10)
  REF_NO2    String?   @db.VarChar(100)
  bank_code  String?   @db.VarChar(10)
  user_type  String?   @db.VarChar(10)
  TYPE_PAY   String?   @db.VarChar(5)

  @@id([RUN_NO, CUST_NO, CUST_NAME, sm_yr, sm_sem, N_SEM], map: "PK_transbill_admis")
  @@index([RUN_NO, CUST_NO, CUST_NAME, N_SEM, sm_sem, sm_yr], map: "IX_transbill_admis")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model transet_tmb_0_49 {
  trans_dt   DateTime? @db.DateTime
  stdentID   String?   @db.NVarChar(255)
  amount     Float?
  ret_Code   String?   @db.NVarChar(255)
  trans_date String?   @db.NVarChar(255)
  trans_time String?   @db.NVarChar(255)
  terminal   String?   @db.NVarChar(255)
  yearsem    String?   @db.NVarChar(255)
  flag       String?   @db.NVarChar(255)

  @@ignore
}

model transret_bll {
  RUN_NO    Int       @default(autoincrement())
  CUST_NO   String    @db.VarChar(100)
  CUST_NAME String?   @db.VarChar(250)
  PAY_TIME  String?   @db.VarChar(15)
  PAY_DATE  String?   @db.VarChar(50)
  PAY_DATE1 DateTime? @db.DateTime
  TYPE_PAY  String?   @db.VarChar(5)
  REF_NO    String?   @db.VarChar(100)
  FR_BR     String?   @db.VarChar(100)
  amount    Float?
  RV        String?   @db.VarChar(10)
  sm_yr     String    @db.VarChar(4)
  sm_sem    String    @db.VarChar(2)
  N_SEM     String    @default("1", map: "DF_transret_bll_N_SEM") @db.VarChar(2)
  bank_name String?   @db.VarChar(50)
  remark    String?   @db.VarChar(50)
  dd        String?   @db.VarChar(2)
  mm        String?   @db.VarChar(2)
  yy        String?   @db.VarChar(4)
  APP       String?   @db.VarChar(10)
  REF_NO2   String?   @db.VarChar(100)
  bank_code String?   @db.VarChar(10)
  user_type String?   @db.VarChar(10)

  @@id([RUN_NO, CUST_NO, sm_yr, sm_sem, N_SEM], map: "PK_transret_bll")
  @@index([CUST_NO, sm_sem, sm_yr, CUST_NAME, N_SEM, RUN_NO], map: "IX_transret_bll")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model transret_bll_online {
  orderRef         String    @db.VarChar(35)
  amount           Float?
  currCode         String?   @db.VarChar(3)
  lang             String?   @db.VarChar(1)
  cancelUrl        String?   @db.VarChar(300)
  failUrl          String?   @db.VarChar(300)
  successUrl       String?   @db.VarChar(300)
  merchantId       Float?
  payMethod        String    @default("IB", map: "DF_transret_bll57_payMethod") @db.VarChar(5)
  refNo1           Float?
  remark           String?   @db.VarChar(200)
  orderRef1        String?   @db.VarChar(35)
  orderRef2        String?   @db.VarChar(35)
  orderRef3        String?   @db.VarChar(35)
  orderRef4        String?   @db.VarChar(35)
  orderRef5        String?   @db.VarChar(35)
  refNo2           Float?
  additionalLabel1 String?   @db.VarChar(35)
  additionalLabel2 String?   @db.VarChar(35)
  additionalLabel3 String?   @db.VarChar(35)
  additionalLabel4 String?   @db.VarChar(35)
  additionalLabel5 String?   @db.VarChar(35)
  Ref              String    @db.VarChar(35)
  CUST_NO          String    @db.VarChar(10)
  CUST_NAME        String?   @db.VarChar(50)
  PAY_TIME         String?   @db.VarChar(15)
  PAY_DATE         DateTime? @db.DateTime
  REF_NO           String?   @db.VarChar(50)
  FR_BR            String?   @db.VarChar(10)
  RV               String?   @db.VarChar(10)
  sm_yr            String    @db.VarChar(4)
  sm_sem           String    @db.VarChar(2)
  N_SEM            String    @default("1", map: "DF_transret_bll57_N_SEM") @db.VarChar(2)
  bank_name        String?   @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model transret_tmb {
  account_num String?   @db.VarChar(10)
  trans_dt    DateTime? @db.DateTime
  stdentID    String?   @db.VarChar(10)
  amount      Float?
  ret_Code    String?   @db.VarChar(4)
  trans_date  String?   @db.VarChar(10)
  trans_time  String?   @db.VarChar(10)
  terminal    String?   @db.VarChar(10)
  yearsem     String?   @db.VarChar(3)

  @@index([account_num, stdentID, ret_Code, trans_date, trans_time, yearsem], map: "IX_transret_tmb")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model transret_tmb049 {
  account_num String?   @db.NVarChar(10)
  trans_dt    DateTime? @db.DateTime
  stdentID    String?   @db.NVarChar(10)
  amount      Float?
  ret_Code    String?   @db.NVarChar(4)
  trans_date  String?   @db.NVarChar(10)
  trans_time  String?   @db.NVarChar(10)
  terminal    String?   @db.NVarChar(10)
  yearsem     String?   @db.NVarChar(3)
  flag        String?   @db.NVarChar(3)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model transret_tmb050 {
  account_num String?   @db.VarChar(50)
  trans_dt    DateTime? @db.DateTime
  stdentID    String?   @db.VarChar(50)
  amount      Float?
  ret_Code    String?   @db.VarChar(50)
  trans_date  String?   @db.VarChar(50)
  trans_time  String?   @db.VarChar(50)
  terminal    String?   @db.VarChar(50)
  yearsem     String?   @db.VarChar(50)
  flag        String?   @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model transret_tmb1481 {
  account_num String?   @db.NVarChar(10)
  trans_dt    DateTime? @db.DateTime
  stdentID    String?   @db.NVarChar(10)
  amount      Float?
  ret_Code    String?   @db.NVarChar(4)
  trans_date  String?   @db.NVarChar(10)
  trans_time  String?   @db.NVarChar(10)
  terminal    String?   @db.NVarChar(10)
  yearsem     String?   @db.NVarChar(3)
  flag        String?   @db.NVarChar(3)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model transret_tmb1482 {
  account_num String?   @db.NVarChar(10)
  trans_dt    DateTime? @db.DateTime
  stdentID    String?   @db.NVarChar(10)
  amount      Float?
  ret_Code    String?   @db.NVarChar(4)
  trans_date  String?   @db.NVarChar(10)
  trans_time  String?   @db.NVarChar(10)
  terminal    String?   @db.NVarChar(10)
  yearsem     String?   @db.NVarChar(3)
  flag        String?   @db.NVarChar(3)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model transret_tmb482 {
  account_num String?   @db.NVarChar(10)
  trans_dt    DateTime? @db.DateTime
  stdentID    String?   @db.NVarChar(10)
  amount      Float?
  ret_Code    String?   @db.NVarChar(4)
  trans_date  String?   @db.NVarChar(10)
  trans_time  String?   @db.NVarChar(10)
  terminal    String?   @db.NVarChar(10)
  yearsem     String?   @db.NVarChar(3)
  flag        String?   @db.NVarChar(3)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model transret_tmb491 {
  account_num String?   @db.NVarChar(10)
  trans_dt    DateTime? @db.DateTime
  stdentID    String?   @db.NVarChar(10)
  amount      Float?
  ret_Code    String?   @db.NVarChar(4)
  trans_date  String?   @db.NVarChar(10)
  trans_time  String?   @db.NVarChar(10)
  terminal    String?   @db.NVarChar(10)
  yearsem     String?   @db.NVarChar(3)
  flag        String?   @db.NVarChar(3)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model transret_tmb492 {
  account_num String   @db.VarChar(10)
  trans_dt    DateTime @db.DateTime
  stdentID    String   @db.VarChar(10)
  amount      Float?
  ret_Code    String   @db.VarChar(4)
  trans_date  String   @db.VarChar(10)
  trans_time  String   @db.VarChar(10)
  terminal    String   @db.VarChar(10)
  yearsem     String   @db.VarChar(3)
  flag        String?  @db.VarChar(3)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Type_cut {
  id_cut   String? @db.VarChar(50)
  name_cut String? @db.VarChar(200)
  score    String? @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model user_addmin {
  id         String  @db.VarChar(7)
  name       String? @db.VarChar(50)
  level_id   String? @db.VarChar(2)
  u_position String? @db.VarChar(50)

  @@ignore
}

model user_online {
  no            Int       @default(autoincrement())
  uid           String    @db.VarChar(20)
  host_link     String?   @db.VarChar(50)
  date_login    DateTime? @db.DateTime
  count_online  Int       @default(0, map: "DF_user_online_count_online")
  count_online1 Int       @default(0, map: "DF_user_online_count_online1")
  rate          Int       @default(0, map: "DF_user_online_rate")
  status_on_off String    @db.VarChar(2)

  @@id([no, uid], map: "PK_user_online")
  @@index([no, uid], map: "IX_user_online")
}

model useractiv_grade {
  no           Int       @id(map: "PK_useractiv_grade") @default(autoincrement())
  usern        String?   @db.VarChar(10)
  idc          String?   @db.VarChar(20)
  date1        DateTime? @default(now(), map: "DF_useractiv_grade_date1") @db.DateTime
  pagen        String?   @db.VarChar(255)
  client       String?   @db.VarChar(30)
  macadd       String?   @db.VarChar(50)
  os           String?   @db.VarChar(250)
  status_login String?   @db.VarChar(50)
}

model userativ {
  no           Int       @id(map: "PK_userativ") @default(autoincrement())
  usern        String?   @db.VarChar(10)
  date1        DateTime? @db.DateTime
  date2        DateTime? @db.DateTime
  time1        String?   @db.VarChar(20)
  pagen        String?   @db.VarChar(255)
  client       String?   @db.VarChar(30)
  pass         String?   @db.VarChar(100)
  macadd       String?   @db.VarChar(50)
  os           String?   @db.VarChar(250)
  status_login String?   @db.VarChar(50)

  @@index([usern, date1, no], map: "IX_userativ")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model userativ_temp {
  no           Int
  usern        String?   @db.VarChar(10)
  date1        DateTime? @db.DateTime
  date2        DateTime? @db.DateTime
  time1        String?   @db.VarChar(20)
  pagen        String?   @db.VarChar(255)
  client       String?   @db.VarChar(30)
  pass         String?   @db.VarChar(20)
  macadd       String?   @db.VarChar(50)
  os           String?   @db.VarChar(250)
  status_login String?   @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model userativ_temp1 {
  no     Int
  usern  String?   @db.VarChar(10)
  date1  DateTime? @db.DateTime
  date2  DateTime? @db.DateTime
  time1  String?   @db.VarChar(20)
  pagen  String?   @db.VarChar(255)
  client String?   @db.VarChar(30)
  pass   String?   @db.VarChar(20)
  macadd String?   @db.VarChar(50)
  os     String?   @db.VarChar(250)

  @@ignore
}

model userativ_temp53 {
  no     Int       @id(map: "PK_userativ_temp53")
  usern  String?   @db.VarChar(10)
  date1  DateTime? @db.DateTime
  date2  DateTime? @db.DateTime
  time1  String?   @db.VarChar(20)
  pagen  String?   @db.VarChar(255)
  client String?   @db.VarChar(15)
  pass   String?   @db.VarChar(20)
  macadd String?   @db.VarChar(50)
}
